

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Nov 26 10:08:18 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	text31,global,reloc=2,class=CODE,delta=1
    41                           	psect	text32,global,reloc=2,class=CODE,delta=1
    42                           	psect	text33,global,reloc=2,class=CODE,delta=1
    43                           	psect	text34,global,reloc=2,class=CODE,delta=1
    44                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    51  0000                     
    52                           ; Version 2.20
    53                           ; Generated 12/02/2020 GMT
    54                           ; 
    55                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F4520 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     
    87                           	psect	smallconst
    88  000600                     __psmallconst:
    89                           	callstack 0
    90  000600  00                 	db	0
    91  000601                     _valor:
    92                           	callstack 0
    93  000601  3F                 	db	63
    94  000602  06                 	db	6
    95  000603  5B                 	db	91
    96  000604  4F                 	db	79
    97  000605  66                 	db	102
    98  000606  6D                 	db	109
    99  000607  7D                 	db	125
   100  000608  07                 	db	7
   101  000609  7F                 	db	127
   102  00060A  6F                 	db	111
   103  00060B  77                 	db	119
   104  00060C  7C                 	db	124
   105  00060D  39                 	db	57
   106  00060E  5E                 	db	94
   107  00060F  79                 	db	121
   108  000610  71                 	db	113
   109  000611                     __end_of_valor:
   110                           	callstack 0
   111  000611  55                 	db	85
   112  000612  4C                 	db	76
   113  000613  44                 	db	68
   114  000614  52                 	db	82
   115  000615  53                 	db	83
   116  000616  58                 	db	88
   117  000617  41                 	db	65
   118  000618  42                 	db	66
   119  000619  59                 	db	89
   120  00061A  73                 	db	115
   121  00061B                     __end_of_charKey:
   122                           	callstack 0
   123  0000                     _T2CON	set	4042
   124  0000                     _CCP2CON	set	4026
   125  0000                     _CCPR2L	set	4027
   126  0000                     _PR2	set	4043
   127  0000                     _TRISE	set	3990
   128  0000                     _TRISC	set	3988
   129  0000                     _TRISB	set	3987
   130  0000                     _TRISA	set	3986
   131  0000                     _PORTE	set	3972
   132  0000                     _PORTC	set	3970
   133  0000                     _PORTB	set	3969
   134  0000                     _PORTA	set	3968
   135  0000                     _ADRESL	set	4035
   136  0000                     _ADRESH	set	4036
   137  0000                     _ADCON2	set	4032
   138  0000                     _ADCON1	set	4033
   139  0000                     _ADCON0	set	4034
   140  0000                     _PORTD	set	3971
   141  0000                     _TRISD	set	3989
   142  00061B                     STR_4:
   143  00061B  45                 	db	69	;'E'
   144  00061C  73                 	db	115	;'s'
   145  00061D  63                 	db	99	;'c'
   146  00061E  6F                 	db	111	;'o'
   147  00061F  6C                 	db	108	;'l'
   148  000620  68                 	db	104	;'h'
   149  000621  61                 	db	97	;'a'
   150  000622  20                 	db	32
   151  000623  6F                 	db	111	;'o'
   152  000624  20                 	db	32
   153  000625  65                 	db	101	;'e'
   154  000626  66                 	db	102	;'f'
   155  000627  65                 	db	101	;'e'
   156  000628  69                 	db	105	;'i'
   157  000629  74                 	db	116	;'t'
   158  00062A  6F                 	db	111	;'o'
   159  00062B  3A                 	db	58	;':'
   160  00062C  00                 	db	0
   161  00062D                     STR_1:
   162  00062D  53                 	db	83	;'S'
   163  00062E  65                 	db	101	;'e'
   164  00062F  6C                 	db	108	;'l'
   165  000630  65                 	db	101	;'e'
   166  000631  63                 	db	99	;'c'
   167  000632  69                 	db	105	;'i'
   168  000633  6F                 	db	111	;'o'
   169  000634  6E                 	db	110	;'n'
   170  000635  61                 	db	97	;'a'
   171  000636  64                 	db	100	;'d'
   172  000637  6F                 	db	111	;'o'
   173  000638  3A                 	db	58	;':'
   174  000639  20                 	db	32
   175  00063A  00                 	db	0
   176  00063B                     STR_6:
   177  00063B  20                 	db	32
   178  00063C  20                 	db	32
   179  00063D  20                 	db	32
   180  00063E  20                 	db	32
   181  00063F  20                 	db	32
   182  000640  56                 	db	86	;'V'
   183  000641  6F                 	db	111	;'o'
   184  000642  6C                 	db	108	;'l'
   185  000643  75                 	db	117	;'u'
   186  000644  6D                 	db	109	;'m'
   187  000645  65                 	db	101	;'e'
   188  000646  00                 	db	0
   189  000647                     STR_2:
   190  000647  76                 	db	118	;'v'
   191  000648  6F                 	db	111	;'o'
   192  000649  6C                 	db	108	;'l'
   193  00064A  75                 	db	117	;'u'
   194  00064B  6D                 	db	109	;'m'
   195  00064C  65                 	db	101	;'e'
   196  00064D  3A                 	db	58	;':'
   197  00064E  20                 	db	32
   198  00064F  00                 	db	0
   199  000650                     STR_3:
   200  000650  31                 	db	49	;'1'
   201  000651  30                 	db	48	;'0'
   202  000652  30                 	db	48	;'0'
   203  000653  00                 	db	0
   204  000654  00                 	db	0	; dummy byte at the end
   205  0000                     
   206                           ; #config settings
   207                           
   208                           	psect	cinit
   209  00248A                     __pcinit:
   210                           	callstack 0
   211  00248A                     start_initialization:
   212                           	callstack 0
   213  00248A                     __initialization:
   214                           	callstack 0
   215                           
   216                           ; Clear objects allocated to COMRAM (12 bytes)
   217  00248A  EE00  F044         	lfsr	0,__pbssCOMRAM
   218  00248E  0E0C               	movlw	12
   219  002490                     clear_0:
   220  002490  6AEE               	clrf	postinc0,c
   221  002492  06E8               	decf	wreg,f,c
   222  002494  E1FD               	bnz	clear_0
   223  002496                     end_of_initialization:
   224                           	callstack 0
   225  002496                     __end_of__initialization:
   226                           	callstack 0
   227  002496  0E00               	movlw	low (__Lmediumconst shr (0+16))
   228  002498  6EF8               	movwf	tblptru,c
   229  00249A  0100               	movlb	0
   230  00249C  EF2B  F003         	goto	_main	;jump to C main() function
   231                           
   232                           	psect	bssCOMRAM
   233  000044                     __pbssCOMRAM:
   234                           	callstack 0
   235  000044                     kpDebounce@oldRead:
   236                           	callstack 0
   237  000044                     	ds	2
   238  000046                     kpDebounce@newRead:
   239                           	callstack 0
   240  000046                     	ds	2
   241  000048                     _keys:
   242                           	callstack 0
   243  000048                     	ds	2
   244  00004A                     _v3:
   245                           	callstack 0
   246  00004A                     	ds	1
   247  00004B                     _v2:
   248                           	callstack 0
   249  00004B                     	ds	1
   250  00004C                     _v1:
   251                           	callstack 0
   252  00004C                     	ds	1
   253  00004D                     _v0:
   254                           	callstack 0
   255  00004D                     	ds	1
   256  00004E                     _display:
   257                           	callstack 0
   258  00004E                     	ds	1
   259  00004F                     kpDebounce@tempo:
   260                           	callstack 0
   261  00004F                     	ds	1
   262                           
   263                           	psect	cstackCOMRAM
   264  000001                     __pcstackCOMRAM:
   265                           	callstack 0
   266  000001                     ?_kpRead:
   267                           	callstack 0
   268  000001                     ?_adcRead:
   269                           	callstack 0
   270  000001                     ?_digitalRead:
   271                           	callstack 0
   272  000001                     ?___wmul:
   273                           	callstack 0
   274  000001                     ?___awdiv:
   275                           	callstack 0
   276  000001                     ?___lwdiv:
   277                           	callstack 0
   278  000001                     ?___aldiv:
   279                           	callstack 0
   280  000001                     adcRead@channel:
   281                           	callstack 0
   282  000001                     delayMicro@a:
   283                           	callstack 0
   284  000001                     delayMili@a:
   285                           	callstack 0
   286  000001                     digitalWrite@pin:
   287                           	callstack 0
   288  000001                     digitalRead@pin:
   289                           	callstack 0
   290  000001                     pinMode@pin:
   291                           	callstack 0
   292  000001                     ___wmul@multiplier:
   293                           	callstack 0
   294  000001                     ___awdiv@dividend:
   295                           	callstack 0
   296  000001                     ___lwdiv@dividend:
   297                           	callstack 0
   298  000001                     ___aldiv@dividend:
   299                           	callstack 0
   300                           
   301                           ; 4 bytes @ 0x0
   302  000001                     	ds	2
   303  000003                     ??_digitalRead:
   304  000003                     ??_delayMili:
   305  000003                     adcRead@ADvalor:
   306                           	callstack 0
   307  000003                     digitalWrite@value:
   308                           	callstack 0
   309  000003                     pinMode@type:
   310                           	callstack 0
   311  000003                     ___wmul@multiplicand:
   312                           	callstack 0
   313  000003                     ___awdiv@divisor:
   314                           	callstack 0
   315  000003                     ___lwdiv@divisor:
   316                           	callstack 0
   317                           
   318                           ; 2 bytes @ 0x2
   319  000003                     	ds	1
   320  000004                     delayMili@i:
   321                           	callstack 0
   322                           
   323                           ; 2 bytes @ 0x3
   324  000004                     	ds	1
   325  000005                     ??_digitalWrite:
   326  000005                     ??_pinMode:
   327  000005                     ?___xxtofl:
   328                           	callstack 0
   329  000005                     ___awdiv@counter:
   330                           	callstack 0
   331  000005                     ___wmul@product:
   332                           	callstack 0
   333  000005                     ___lwdiv@quotient:
   334                           	callstack 0
   335  000005                     ___aldiv@divisor:
   336                           	callstack 0
   337  000005                     ___xxtofl@val:
   338                           	callstack 0
   339                           
   340                           ; 4 bytes @ 0x4
   341  000005                     	ds	1
   342  000006                     ___awdiv@sign:
   343                           	callstack 0
   344                           
   345                           ; 1 bytes @ 0x5
   346  000006                     	ds	1
   347  000007                     ___lwdiv@counter:
   348                           	callstack 0
   349  000007                     soWrite@value:
   350                           	callstack 0
   351  000007                     ___awdiv@quotient:
   352                           	callstack 0
   353                           
   354                           ; 2 bytes @ 0x6
   355  000007                     	ds	1
   356  000008                     ??_pwmSet:
   357                           
   358                           ; 1 bytes @ 0x7
   359  000008                     	ds	1
   360  000009                     ??___xxtofl:
   361  000009                     ?___awmod:
   362                           	callstack 0
   363  000009                     soWrite@i:
   364                           	callstack 0
   365  000009                     ___aldiv@counter:
   366                           	callstack 0
   367  000009                     ___awmod@dividend:
   368                           	callstack 0
   369                           
   370                           ; 2 bytes @ 0x8
   371  000009                     	ds	1
   372  00000A                     ??_kpDebounce:
   373  00000A                     ??_ssdUpdate:
   374  00000A                     pwmSet@porcento:
   375                           	callstack 0
   376  00000A                     ___aldiv@sign:
   377                           	callstack 0
   378  00000A                     pushNibble@rs:
   379                           	callstack 0
   380  00000A                     pushByte@rs:
   381                           	callstack 0
   382                           
   383                           ; 2 bytes @ 0x9
   384  00000A                     	ds	1
   385  00000B                     pwmSet@val:
   386                           	callstack 0
   387  00000B                     ___awmod@divisor:
   388                           	callstack 0
   389  00000B                     ___aldiv@quotient:
   390                           	callstack 0
   391                           
   392                           ; 4 bytes @ 0xA
   393  00000B                     	ds	1
   394  00000C                     ??_pushByte:
   395  00000C                     pushNibble@value:
   396                           	callstack 0
   397                           
   398                           ; 1 bytes @ 0xB
   399  00000C                     	ds	1
   400  00000D                     pushByte@value:
   401                           	callstack 0
   402  00000D                     ___awmod@counter:
   403                           	callstack 0
   404  00000D                     ___xxtofl@sign:
   405                           	callstack 0
   406  00000D                     kpDebounce@i:
   407                           	callstack 0
   408                           
   409                           ; 2 bytes @ 0xC
   410  00000D                     	ds	1
   411  00000E                     lcdCommand@value:
   412                           	callstack 0
   413  00000E                     lcdChar@value:
   414                           	callstack 0
   415  00000E                     ___awmod@sign:
   416                           	callstack 0
   417  00000E                     ___xxtofl@exp:
   418                           	callstack 0
   419                           
   420                           ; 1 bytes @ 0xD
   421  00000E                     	ds	1
   422  00000F                     ssdDigit@pos:
   423                           	callstack 0
   424  00000F                     lcdPosition@line:
   425                           	callstack 0
   426  00000F                     lcdString@msg:
   427                           	callstack 0
   428  00000F                     lcdNumber@value:
   429                           	callstack 0
   430  00000F                     pwmFrequency@freq:
   431                           	callstack 0
   432  00000F                     ___xxtofl@arg:
   433                           	callstack 0
   434                           
   435                           ; 4 bytes @ 0xE
   436  00000F                     	ds	1
   437  000010                     ssdDigit@val:
   438                           	callstack 0
   439                           
   440                           ; 1 bytes @ 0xF
   441  000010                     	ds	1
   442  000011                     ??_lcdString:
   443  000011                     lcdPosition@col:
   444                           	callstack 0
   445  000011                     lcdNumber@i:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x10
   449  000011                     	ds	2
   450  000013                     ?___flmul:
   451                           	callstack 0
   452  000013                     lcdString@i:
   453                           	callstack 0
   454  000013                     ___flmul@b:
   455                           	callstack 0
   456                           
   457                           ; 4 bytes @ 0x12
   458  000013                     	ds	4
   459  000017                     ___flmul@a:
   460                           	callstack 0
   461                           
   462                           ; 4 bytes @ 0x16
   463  000017                     	ds	4
   464  00001B                     ??___flmul:
   465                           
   466                           ; 1 bytes @ 0x1A
   467  00001B                     	ds	4
   468  00001F                     ___flmul@sign:
   469                           	callstack 0
   470                           
   471                           ; 1 bytes @ 0x1E
   472  00001F                     	ds	1
   473  000020                     ___flmul@grs:
   474                           	callstack 0
   475                           
   476                           ; 4 bytes @ 0x1F
   477  000020                     	ds	4
   478  000024                     ___flmul@aexp:
   479                           	callstack 0
   480                           
   481                           ; 1 bytes @ 0x23
   482  000024                     	ds	1
   483  000025                     ___flmul@bexp:
   484                           	callstack 0
   485                           
   486                           ; 1 bytes @ 0x24
   487  000025                     	ds	1
   488  000026                     ___flmul@prod:
   489                           	callstack 0
   490                           
   491                           ; 4 bytes @ 0x25
   492  000026                     	ds	4
   493  00002A                     ___flmul@temp:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x29
   497  00002A                     	ds	2
   498  00002C                     ?___fltol:
   499                           	callstack 0
   500  00002C                     ___fltol@f1:
   501                           	callstack 0
   502                           
   503                           ; 4 bytes @ 0x2B
   504  00002C                     	ds	4
   505  000030                     ??___fltol:
   506                           
   507                           ; 1 bytes @ 0x2F
   508  000030                     	ds	4
   509  000034                     ___fltol@sign1:
   510                           	callstack 0
   511                           
   512                           ; 1 bytes @ 0x33
   513  000034                     	ds	1
   514  000035                     ___fltol@exp1:
   515                           	callstack 0
   516                           
   517                           ; 1 bytes @ 0x34
   518  000035                     	ds	1
   519  000036                     main@volume:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0x35
   523  000036                     	ds	2
   524  000038                     main@i:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0x37
   528  000038                     	ds	2
   529  00003A                     main@dis:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x39
   533  00003A                     	ds	2
   534  00003C                     main@s:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x3B
   538  00003C                     	ds	2
   539  00003E                     main@v:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0x3D
   543  00003E                     	ds	2
   544  000040                     main@tecla:
   545                           	callstack 0
   546                           
   547                           ; 2 bytes @ 0x3F
   548  000040                     	ds	2
   549  000042                     main@j:
   550                           	callstack 0
   551                           
   552                           ; 2 bytes @ 0x41
   553  000042                     	ds	2
   554                           
   555 ;;
   556 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   557 ;;
   558 ;; *************** function _main *****************
   559 ;; Defined at:
   560 ;;		line 11 in file "main.c"
   561 ;; Parameters:    Size  Location     Type
   562 ;;		None
   563 ;; Auto vars:     Size  Location     Type
   564 ;;  cont            4    0        unsigned long 
   565 ;;  tecla           2   63[COMRAM] unsigned int 
   566 ;;  j               2   65[COMRAM] volatile unsigned int 
   567 ;;  v               2   61[COMRAM] int 
   568 ;;  s               2   59[COMRAM] unsigned int 
   569 ;;  dis             2   57[COMRAM] int 
   570 ;;  i               2   55[COMRAM] unsigned int 
   571 ;;  volume          2   53[COMRAM] int 
   572 ;; Return value:  Size  Location     Type
   573 ;;                  1    wreg      void 
   574 ;; Registers used:
   575 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   576 ;; Tracked objects:
   577 ;;		On entry : 0/0
   578 ;;		On exit  : 0/0
   579 ;;		Unchanged: 0/0
   580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   581 ;;      Params:         0       0       0       0       0       0       0
   582 ;;      Locals:        14       0       0       0       0       0       0
   583 ;;      Temps:          0       0       0       0       0       0       0
   584 ;;      Totals:        14       0       0       0       0       0       0
   585 ;;Total ram usage:       14 bytes
   586 ;; Hardware stack levels required when called: 6
   587 ;; This function calls:
   588 ;;		___awdiv
   589 ;;		___awmod
   590 ;;		___flmul
   591 ;;		___fltol
   592 ;;		___wmul
   593 ;;		___xxtofl
   594 ;;		_adcInit
   595 ;;		_adcRead
   596 ;;		_digitalWrite
   597 ;;		_kpDebounce
   598 ;;		_kpInit
   599 ;;		_kpRead
   600 ;;		_lcdCommand
   601 ;;		_lcdInit
   602 ;;		_lcdNumber
   603 ;;		_lcdPosition
   604 ;;		_lcdString
   605 ;;		_pwmFrequency
   606 ;;		_pwmInit
   607 ;;		_pwmSet
   608 ;;		_ssdDigit
   609 ;;		_ssdInit
   610 ;;		_ssdUpdate
   611 ;; This function is called by:
   612 ;;		Startup code after reset
   613 ;; This function uses a non-reentrant model
   614 ;;
   615                           
   616                           	psect	text0
   617  000656                     __ptext0:
   618                           	callstack 0
   619  000656                     _main:
   620                           	callstack 25
   621  000656                     
   622                           ;main.c: 13:  unsigned int s, tecla, i;;main.c: 14:  int v, volume,dis;;main.c: 15:  vol
      +                          atile unsigned int j;;main.c: 17:  TRISD=0x00;
   623  000656  0E00               	movlw	0
   624  000658  6E95               	movwf	149,c	;volatile
   625                           
   626                           ;main.c: 18:  PORTD=0x00;
   627  00065A  0E00               	movlw	0
   628  00065C  6E83               	movwf	131,c	;volatile
   629                           
   630                           ;main.c: 20:  s=1;
   631  00065E  0E00               	movlw	0
   632  000660  6E3D               	movwf	(main@s+1)^0,c
   633  000662  0E01               	movlw	1
   634  000664  6E3C               	movwf	main@s^0,c
   635  000666                     
   636                           ;main.c: 21:  lcdInit();
   637  000666  ECAB  F00E         	call	_lcdInit	;wreg free
   638  00066A                     
   639                           ;main.c: 22:  kpInit();
   640  00066A  EC86  F011         	call	_kpInit	;wreg free
   641  00066E                     
   642                           ;main.c: 23:  adcInit();
   643  00066E  EC05  F011         	call	_adcInit	;wreg free
   644  000672                     
   645                           ;main.c: 24:  pwmInit();
   646  000672  EC38  F012         	call	_pwmInit	;wreg free
   647  000676                     l43:
   648                           
   649                           ;main.c: 29:      i=0;
   650  000676  0E00               	movlw	0
   651  000678  6E39               	movwf	(main@i+1)^0,c
   652  00067A  0E00               	movlw	0
   653  00067C  6E38               	movwf	main@i^0,c
   654                           
   655                           ;main.c: 30:      dis=0;
   656  00067E  0E00               	movlw	0
   657  000680  6E3B               	movwf	(main@dis+1)^0,c
   658  000682  0E00               	movlw	0
   659  000684  6E3A               	movwf	main@dis^0,c
   660  000686                     
   661                           ;main.c: 31:      volume=v;
   662  000686  C03E  F036         	movff	main@v,main@volume
   663  00068A  C03F  F037         	movff	main@v+1,main@volume+1
   664  00068E                     
   665                           ;main.c: 33:     digitalWrite(PIN_D0,0);
   666  00068E  0E00               	movlw	0
   667  000690  6E02               	movwf	(digitalWrite@pin+1)^0,c
   668  000692  0E18               	movlw	24
   669  000694  6E01               	movwf	digitalWrite@pin^0,c
   670  000696  0E00               	movlw	0
   671  000698  6E04               	movwf	(digitalWrite@value+1)^0,c
   672  00069A  0E00               	movlw	0
   673  00069C  6E03               	movwf	digitalWrite@value^0,c
   674  00069E  EC12  F008         	call	_digitalWrite	;wreg free
   675  0006A2                     
   676                           ;main.c: 34:     digitalWrite(PIN_D1,0);
   677  0006A2  0E00               	movlw	0
   678  0006A4  6E02               	movwf	(digitalWrite@pin+1)^0,c
   679  0006A6  0E19               	movlw	25
   680  0006A8  6E01               	movwf	digitalWrite@pin^0,c
   681  0006AA  0E00               	movlw	0
   682  0006AC  6E04               	movwf	(digitalWrite@value+1)^0,c
   683  0006AE  0E00               	movlw	0
   684  0006B0  6E03               	movwf	digitalWrite@value^0,c
   685  0006B2  EC12  F008         	call	_digitalWrite	;wreg free
   686  0006B6                     
   687                           ;main.c: 35:     digitalWrite(PIN_D2,0);
   688  0006B6  0E00               	movlw	0
   689  0006B8  6E02               	movwf	(digitalWrite@pin+1)^0,c
   690  0006BA  0E1A               	movlw	26
   691  0006BC  6E01               	movwf	digitalWrite@pin^0,c
   692  0006BE  0E00               	movlw	0
   693  0006C0  6E04               	movwf	(digitalWrite@value+1)^0,c
   694  0006C2  0E00               	movlw	0
   695  0006C4  6E03               	movwf	digitalWrite@value^0,c
   696  0006C6  EC12  F008         	call	_digitalWrite	;wreg free
   697  0006CA                     
   698                           ;main.c: 36:     digitalWrite(PIN_D3,0);
   699  0006CA  0E00               	movlw	0
   700  0006CC  6E02               	movwf	(digitalWrite@pin+1)^0,c
   701  0006CE  0E1B               	movlw	27
   702  0006D0  6E01               	movwf	digitalWrite@pin^0,c
   703  0006D2  0E00               	movlw	0
   704  0006D4  6E04               	movwf	(digitalWrite@value+1)^0,c
   705  0006D6  0E00               	movlw	0
   706  0006D8  6E03               	movwf	digitalWrite@value^0,c
   707  0006DA  EC12  F008         	call	_digitalWrite	;wreg free
   708  0006DE                     
   709                           ;main.c: 38:      lcdPosition(0,0);
   710  0006DE  0E00               	movlw	0
   711  0006E0  6E10               	movwf	(lcdPosition@line+1)^0,c
   712  0006E2  0E00               	movlw	0
   713  0006E4  6E0F               	movwf	lcdPosition@line^0,c
   714  0006E6  0E00               	movlw	0
   715  0006E8  6E12               	movwf	(lcdPosition@col+1)^0,c
   716  0006EA  0E00               	movlw	0
   717  0006EC  6E11               	movwf	lcdPosition@col^0,c
   718  0006EE  EC69  F011         	call	_lcdPosition	;wreg free
   719  0006F2                     
   720                           ;main.c: 39:      lcdString("Selecionado: ");
   721  0006F2  0E2D               	movlw	low STR_1
   722  0006F4  6E0F               	movwf	lcdString@msg^0,c
   723  0006F6  0E06               	movlw	high STR_1
   724  0006F8  6E10               	movwf	(lcdString@msg+1)^0,c
   725  0006FA  EC8B  F010         	call	_lcdString	;wreg free
   726  0006FE                     
   727                           ;main.c: 40:      lcdNumber(s);
   728  0006FE  C03C  F00F         	movff	main@s,lcdNumber@value
   729  000702  C03D  F010         	movff	main@s+1,lcdNumber@value+1
   730  000706  EC97  F00F         	call	_lcdNumber	;wreg free
   731  00070A                     
   732                           ;main.c: 41:      lcdPosition(1,0);
   733  00070A  0E00               	movlw	0
   734  00070C  6E10               	movwf	(lcdPosition@line+1)^0,c
   735  00070E  0E01               	movlw	1
   736  000710  6E0F               	movwf	lcdPosition@line^0,c
   737  000712  0E00               	movlw	0
   738  000714  6E12               	movwf	(lcdPosition@col+1)^0,c
   739  000716  0E00               	movlw	0
   740  000718  6E11               	movwf	lcdPosition@col^0,c
   741  00071A  EC69  F011         	call	_lcdPosition	;wreg free
   742  00071E                     
   743                           ;main.c: 42:      lcdString("volume: ");
   744  00071E  0E47               	movlw	low STR_2
   745  000720  6E0F               	movwf	lcdString@msg^0,c
   746  000722  0E06               	movlw	high STR_2
   747  000724  6E10               	movwf	(lcdString@msg+1)^0,c
   748  000726  EC8B  F010         	call	_lcdString	;wreg free
   749  00072A                     
   750                           ;main.c: 43:      if(volume!=100)
   751  00072A  0E64               	movlw	100
   752  00072C  1836               	xorwf	main@volume^0,w,c
   753  00072E  1037               	iorwf	(main@volume+1)^0,w,c
   754  000730  B4D8               	btfsc	status,2,c
   755  000732  EF9D  F003         	goto	u2791
   756  000736  EF9F  F003         	goto	u2790
   757  00073A                     u2791:
   758  00073A  EFA7  F003         	goto	l2673
   759  00073E                     u2790:
   760  00073E                     
   761                           ;main.c: 44:      lcdNumber(volume);
   762  00073E  C036  F00F         	movff	main@volume,lcdNumber@value
   763  000742  C037  F010         	movff	main@volume+1,lcdNumber@value+1
   764  000746  EC97  F00F         	call	_lcdNumber	;wreg free
   765  00074A  EFAD  F003         	goto	l2675
   766  00074E                     l2673:
   767                           
   768                           ;main.c: 46:          lcdString("100");
   769  00074E  0E50               	movlw	low STR_3
   770  000750  6E0F               	movwf	lcdString@msg^0,c
   771  000752  0E06               	movlw	high STR_3
   772  000754  6E10               	movwf	(lcdString@msg+1)^0,c
   773  000756  EC8B  F010         	call	_lcdString	;wreg free
   774  00075A                     l2675:
   775                           
   776                           ;main.c: 47:      kpDebounce();
   777  00075A  ECA5  F00C         	call	_kpDebounce	;wreg free
   778  00075E                     
   779                           ;main.c: 48:      PORTD=s;
   780  00075E  C03C  FF83         	movff	main@s,3971	;volatile
   781  000762                     
   782                           ;main.c: 50: if (kpRead() != tecla){
   783  000762  EC50  F012         	call	_kpRead	;wreg free
   784  000766  5040               	movf	main@tecla^0,w,c
   785  000768  1801               	xorwf	?_kpRead^0,w,c
   786  00076A  E109               	bnz	u2800
   787  00076C  5041               	movf	(main@tecla+1)^0,w,c
   788  00076E  1802               	xorwf	(?_kpRead+1)^0,w,c
   789  000770  B4D8               	btfsc	status,2,c
   790  000772  EFBD  F003         	goto	u2801
   791  000776  EFBF  F003         	goto	u2800
   792  00077A                     u2801:
   793  00077A  EF3B  F003         	goto	l43
   794  00077E                     u2800:
   795  00077E                     
   796                           ;main.c: 51:  tecla = kpRead();
   797  00077E  EC50  F012         	call	_kpRead	;wreg free
   798  000782  C001  F040         	movff	?_kpRead,main@tecla
   799  000786  C002  F041         	movff	?_kpRead+1,main@tecla+1
   800  00078A                     
   801                           ;main.c: 53:      if(((tecla) & (1<<(5)))){
   802  00078A  AA40               	btfss	main@tecla^0,5,c
   803  00078C  EFCA  F003         	goto	u2811
   804  000790  EFCC  F003         	goto	u2810
   805  000794                     u2811:
   806  000794  EF84  F004         	goto	l47
   807  000798                     u2810:
   808  000798                     
   809                           ;main.c: 54:          lcdCommand(0x01);
   810  000798  0E01               	movlw	1
   811  00079A  EC29  F012         	call	_lcdCommand
   812                           
   813                           ;main.c: 55:        while(i!=100) {
   814  00079E  EF7A  F004         	goto	l2741
   815  0007A2                     l2687:
   816                           
   817                           ;main.c: 57:         PORTD=0;
   818  0007A2  0E00               	movlw	0
   819  0007A4  6E83               	movwf	131,c	;volatile
   820  0007A6                     
   821                           ;main.c: 59:         dis++;
   822  0007A6  4A3A               	infsnz	main@dis^0,f,c
   823  0007A8  2A3B               	incf	(main@dis+1)^0,f,c
   824  0007AA                     
   825                           ;main.c: 60:         kpDebounce();
   826  0007AA  ECA5  F00C         	call	_kpDebounce	;wreg free
   827  0007AE                     
   828                           ;main.c: 62:         if(dis==125){
   829  0007AE  0E7D               	movlw	125
   830  0007B0  183A               	xorwf	main@dis^0,w,c
   831  0007B2  103B               	iorwf	(main@dis+1)^0,w,c
   832  0007B4  A4D8               	btfss	status,2,c
   833  0007B6  EFDF  F003         	goto	u2821
   834  0007BA  EFE1  F003         	goto	u2820
   835  0007BE                     u2821:
   836  0007BE  EF07  F004         	goto	l2707
   837  0007C2                     u2820:
   838  0007C2                     
   839                           ;main.c: 63:         lcdPosition(0,0);
   840  0007C2  0E00               	movlw	0
   841  0007C4  6E10               	movwf	(lcdPosition@line+1)^0,c
   842  0007C6  0E00               	movlw	0
   843  0007C8  6E0F               	movwf	lcdPosition@line^0,c
   844  0007CA  0E00               	movlw	0
   845  0007CC  6E12               	movwf	(lcdPosition@col+1)^0,c
   846  0007CE  0E00               	movlw	0
   847  0007D0  6E11               	movwf	lcdPosition@col^0,c
   848  0007D2  EC69  F011         	call	_lcdPosition	;wreg free
   849  0007D6                     
   850                           ;main.c: 64:         lcdString("Escolha o efeito:");
   851  0007D6  0E1B               	movlw	low STR_4
   852  0007D8  6E0F               	movwf	lcdString@msg^0,c
   853  0007DA  0E06               	movlw	high STR_4
   854  0007DC  6E10               	movwf	(lcdString@msg+1)^0,c
   855  0007DE  EC8B  F010         	call	_lcdString	;wreg free
   856  0007E2                     
   857                           ;main.c: 65:         lcdPosition(1,7);
   858  0007E2  0E00               	movlw	0
   859  0007E4  6E10               	movwf	(lcdPosition@line+1)^0,c
   860  0007E6  0E01               	movlw	1
   861  0007E8  6E0F               	movwf	lcdPosition@line^0,c
   862  0007EA  0E00               	movlw	0
   863  0007EC  6E12               	movwf	(lcdPosition@col+1)^0,c
   864  0007EE  0E07               	movlw	7
   865  0007F0  6E11               	movwf	lcdPosition@col^0,c
   866  0007F2  EC69  F011         	call	_lcdPosition	;wreg free
   867  0007F6                     
   868                           ;main.c: 66:         lcdNumber(s);
   869  0007F6  C03C  F00F         	movff	main@s,lcdNumber@value
   870  0007FA  C03D  F010         	movff	main@s+1,lcdNumber@value+1
   871  0007FE  EC97  F00F         	call	_lcdNumber	;wreg free
   872  000802                     
   873                           ;main.c: 67:         kpDebounce();
   874  000802  ECA5  F00C         	call	_kpDebounce	;wreg free
   875  000806                     
   876                           ;main.c: 68:         dis=151;
   877  000806  0E00               	movlw	0
   878  000808  6E3B               	movwf	(main@dis+1)^0,c
   879  00080A  0E97               	movlw	151
   880  00080C  6E3A               	movwf	main@dis^0,c
   881  00080E                     l2707:
   882                           
   883                           ;main.c: 71:         if(dis==276){
   884  00080E  0E14               	movlw	20
   885  000810  183A               	xorwf	main@dis^0,w,c
   886  000812  E106               	bnz	u2831
   887  000814  043B               	decf	(main@dis+1)^0,w,c
   888  000816  A4D8               	btfss	status,2,c
   889  000818  EF10  F004         	goto	u2831
   890  00081C  EF12  F004         	goto	u2830
   891  000820                     u2831:
   892  000820  EF29  F004         	goto	l2715
   893  000824                     u2830:
   894  000824                     
   895                           ;main.c: 72:             lcdCommand(0x01);
   896  000824  0E01               	movlw	1
   897  000826  EC29  F012         	call	_lcdCommand
   898                           
   899                           ;main.c: 73:             lcdPosition(0,0);
   900  00082A  0E00               	movlw	0
   901  00082C  6E10               	movwf	(lcdPosition@line+1)^0,c
   902  00082E  0E00               	movlw	0
   903  000830  6E0F               	movwf	lcdPosition@line^0,c
   904  000832  0E00               	movlw	0
   905  000834  6E12               	movwf	(lcdPosition@col+1)^0,c
   906  000836  0E00               	movlw	0
   907  000838  6E11               	movwf	lcdPosition@col^0,c
   908  00083A  EC69  F011         	call	_lcdPosition	;wreg free
   909  00083E                     
   910                           ;main.c: 74:             lcdString("Escolha o efeito:");
   911  00083E  0E1B               	movlw	low STR_4
   912  000840  6E0F               	movwf	lcdString@msg^0,c
   913  000842  0E06               	movlw	high STR_4
   914  000844  6E10               	movwf	(lcdString@msg+1)^0,c
   915  000846  EC8B  F010         	call	_lcdString	;wreg free
   916  00084A                     
   917                           ;main.c: 75:             dis=0;
   918  00084A  0E00               	movlw	0
   919  00084C  6E3B               	movwf	(main@dis+1)^0,c
   920  00084E  0E00               	movlw	0
   921  000850  6E3A               	movwf	main@dis^0,c
   922  000852                     l2715:
   923                           
   924                           ;main.c: 80:       if (kpRead() != tecla){
   925  000852  EC50  F012         	call	_kpRead	;wreg free
   926  000856  5040               	movf	main@tecla^0,w,c
   927  000858  1801               	xorwf	?_kpRead^0,w,c
   928  00085A  E109               	bnz	u2840
   929  00085C  5041               	movf	(main@tecla+1)^0,w,c
   930  00085E  1802               	xorwf	(?_kpRead+1)^0,w,c
   931  000860  B4D8               	btfsc	status,2,c
   932  000862  EF35  F004         	goto	u2841
   933  000866  EF37  F004         	goto	u2840
   934  00086A                     u2841:
   935  00086A  EF7A  F004         	goto	l2741
   936  00086E                     u2840:
   937  00086E                     
   938                           ;main.c: 81:       tecla = kpRead();
   939  00086E  EC50  F012         	call	_kpRead	;wreg free
   940  000872  C001  F040         	movff	?_kpRead,main@tecla
   941  000876  C002  F041         	movff	?_kpRead+1,main@tecla+1
   942  00087A                     
   943                           ;main.c: 84:      if (((tecla) & (1<<(0))))
   944  00087A  A040               	btfss	main@tecla^0,0,c
   945  00087C  EF42  F004         	goto	u2851
   946  000880  EF44  F004         	goto	u2850
   947  000884                     u2851:
   948  000884  EF46  F004         	goto	l2723
   949  000888                     u2850:
   950  000888                     
   951                           ;main.c: 85:          s++;
   952  000888  4A3C               	infsnz	main@s^0,f,c
   953  00088A  2A3D               	incf	(main@s+1)^0,f,c
   954  00088C                     l2723:
   955                           
   956                           ;main.c: 87:          if(s>15)
   957  00088C  503D               	movf	(main@s+1)^0,w,c
   958  00088E  E109               	bnz	u2860
   959  000890  0E10               	movlw	16
   960  000892  5C3C               	subwf	main@s^0,w,c
   961  000894  A0D8               	btfss	status,0,c
   962  000896  EF4F  F004         	goto	u2861
   963  00089A  EF51  F004         	goto	u2860
   964  00089E                     u2861:
   965  00089E  EF55  F004         	goto	l2727
   966  0008A2                     u2860:
   967  0008A2                     
   968                           ;main.c: 88:              s=1;
   969  0008A2  0E00               	movlw	0
   970  0008A4  6E3D               	movwf	(main@s+1)^0,c
   971  0008A6  0E01               	movlw	1
   972  0008A8  6E3C               	movwf	main@s^0,c
   973  0008AA                     l2727:
   974                           
   975                           ;main.c: 90:      if (((tecla) & (1<<(2))))
   976  0008AA  A440               	btfss	main@tecla^0,2,c
   977  0008AC  EF5A  F004         	goto	u2871
   978  0008B0  EF5C  F004         	goto	u2870
   979  0008B4                     u2871:
   980  0008B4  EF5F  F004         	goto	l2731
   981  0008B8                     u2870:
   982  0008B8                     
   983                           ;main.c: 91:          s-=1;
   984  0008B8  063C               	decf	main@s^0,f,c
   985  0008BA  A0D8               	btfss	status,0,c
   986  0008BC  063D               	decf	(main@s+1)^0,f,c
   987  0008BE                     l2731:
   988                           
   989                           ;main.c: 93:         if(s<1)
   990  0008BE  503C               	movf	main@s^0,w,c
   991  0008C0  103D               	iorwf	(main@s+1)^0,w,c
   992  0008C2  A4D8               	btfss	status,2,c
   993  0008C4  EF66  F004         	goto	u2881
   994  0008C8  EF68  F004         	goto	u2880
   995  0008CC                     u2881:
   996  0008CC  EF6C  F004         	goto	l2735
   997  0008D0                     u2880:
   998  0008D0                     
   999                           ;main.c: 94:              s=15;
  1000  0008D0  0E00               	movlw	0
  1001  0008D2  6E3D               	movwf	(main@s+1)^0,c
  1002  0008D4  0E0F               	movlw	15
  1003  0008D6  6E3C               	movwf	main@s^0,c
  1004  0008D8                     l2735:
  1005                           
  1006                           ;main.c: 96:      if(((tecla) & (1<<(5)))){
  1007  0008D8  AA40               	btfss	main@tecla^0,5,c
  1008  0008DA  EF71  F004         	goto	u2891
  1009  0008DE  EF73  F004         	goto	u2890
  1010  0008E2                     u2891:
  1011  0008E2  EF7A  F004         	goto	l2741
  1012  0008E6                     u2890:
  1013  0008E6                     
  1014                           ;main.c: 97:          i=100;
  1015  0008E6  0E00               	movlw	0
  1016  0008E8  6E39               	movwf	(main@i+1)^0,c
  1017  0008EA  0E64               	movlw	100
  1018  0008EC  6E38               	movwf	main@i^0,c
  1019  0008EE                     
  1020                           ;main.c: 98:       lcdCommand(0x01);}
  1021  0008EE  0E01               	movlw	1
  1022  0008F0  EC29  F012         	call	_lcdCommand
  1023  0008F4                     l2741:
  1024                           
  1025                           ;main.c: 55:        while(i!=100) {
  1026  0008F4  0E64               	movlw	100
  1027  0008F6  1838               	xorwf	main@i^0,w,c
  1028  0008F8  1039               	iorwf	(main@i+1)^0,w,c
  1029  0008FA  A4D8               	btfss	status,2,c
  1030  0008FC  EF82  F004         	goto	u2901
  1031  000900  EF84  F004         	goto	u2900
  1032  000904                     u2901:
  1033  000904  EFD1  F003         	goto	l2687
  1034  000908                     u2900:
  1035  000908                     l47:
  1036                           
  1037                           ;main.c: 103:  if(((tecla) & (1<<(7)))){
  1038  000908  AE40               	btfss	main@tecla^0,7,c
  1039  00090A  EF89  F004         	goto	u2911
  1040  00090E  EF8B  F004         	goto	u2910
  1041  000912                     u2911:
  1042  000912  EF3B  F003         	goto	l43
  1043  000916                     u2910:
  1044  000916                     
  1045                           ;main.c: 104:      ssdInit();
  1046  000916  EC60  F010         	call	_ssdInit	;wreg free
  1047                           
  1048                           ;main.c: 105:      lcdCommand(0x01);
  1049  00091A  0E01               	movlw	1
  1050  00091C  EC29  F012         	call	_lcdCommand
  1051  000920                     
  1052                           ;main.c: 106:      lcdString("     Volume");
  1053  000920  0E3B               	movlw	low STR_6
  1054  000922  6E0F               	movwf	lcdString@msg^0,c
  1055  000924  0E06               	movlw	high STR_6
  1056  000926  6E10               	movwf	(lcdString@msg+1)^0,c
  1057  000928  EC8B  F010         	call	_lcdString	;wreg free
  1058                           
  1059                           ;main.c: 108:        while(i!=100) {
  1060  00092C  EFEF  F005         	goto	l2827
  1061  000930                     l2747:
  1062                           
  1063                           ;main.c: 110:      v=adcRead(0)*0.098039;
  1064  000930  0EAC               	movlw	172
  1065  000932  6E17               	movwf	___flmul@a^0,c
  1066  000934  0EC8               	movlw	200
  1067  000936  6E18               	movwf	(___flmul@a+1)^0,c
  1068  000938  0EC8               	movlw	200
  1069  00093A  6E19               	movwf	(___flmul@a+2)^0,c
  1070  00093C  0E3D               	movlw	61
  1071  00093E  6E1A               	movwf	(___flmul@a+3)^0,c
  1072  000940  0E00               	movlw	0
  1073  000942  6E02               	movwf	(adcRead@channel+1)^0,c
  1074  000944  0E00               	movlw	0
  1075  000946  6E01               	movwf	adcRead@channel^0,c
  1076  000948  ECB6  F010         	call	_adcRead	;wreg free
  1077  00094C  C001  F005         	movff	?_adcRead,___xxtofl@val
  1078  000950  C002  F006         	movff	?_adcRead+1,___xxtofl@val+1
  1079  000954  0E00               	movlw	0
  1080  000956  BE06               	btfsc	(___xxtofl@val+1)^0,7,c
  1081  000958  0EFF               	movlw	-1
  1082  00095A  6E07               	movwf	(___xxtofl@val+2)^0,c
  1083  00095C  6E08               	movwf	(___xxtofl@val+3)^0,c
  1084  00095E  0E01               	movlw	1
  1085  000960  EC60  F00A         	call	___xxtofl
  1086  000964  C005  F013         	movff	?___xxtofl,___flmul@b
  1087  000968  C006  F014         	movff	?___xxtofl+1,___flmul@b+1
  1088  00096C  C007  F015         	movff	?___xxtofl+2,___flmul@b+2
  1089  000970  C008  F016         	movff	?___xxtofl+3,___flmul@b+3
  1090  000974  ECFD  F005         	call	___flmul	;wreg free
  1091  000978  C013  F02C         	movff	?___flmul,___fltol@f1
  1092  00097C  C014  F02D         	movff	?___flmul+1,___fltol@f1+1
  1093  000980  C015  F02E         	movff	?___flmul+2,___fltol@f1+2
  1094  000984  C016  F02F         	movff	?___flmul+3,___fltol@f1+3
  1095  000988  ECC6  F00D         	call	___fltol	;wreg free
  1096  00098C  C02C  F03E         	movff	?___fltol,main@v
  1097  000990  C02D  F03F         	movff	?___fltol+1,main@v+1
  1098  000994                     
  1099                           ;main.c: 111:      ssdDigit(((v/1)%10),3);
  1100  000994  0E03               	movlw	3
  1101  000996  6E0F               	movwf	ssdDigit@pos^0,c
  1102  000998  C03E  F009         	movff	main@v,___awmod@dividend
  1103  00099C  C03F  F00A         	movff	main@v+1,___awmod@dividend+1
  1104  0009A0  0E00               	movlw	0
  1105  0009A2  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1106  0009A4  0E0A               	movlw	10
  1107  0009A6  6E0B               	movwf	___awmod@divisor^0,c
  1108  0009A8  EC05  F00F         	call	___awmod	;wreg free
  1109  0009AC  5009               	movf	?___awmod^0,w,c
  1110  0009AE  EC34  F010         	call	_ssdDigit
  1111  0009B2                     
  1112                           ;main.c: 112:      ssdDigit(((v/10)%10),2);
  1113  0009B2  0E02               	movlw	2
  1114  0009B4  6E0F               	movwf	ssdDigit@pos^0,c
  1115  0009B6  0E00               	movlw	0
  1116  0009B8  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1117  0009BA  0E0A               	movlw	10
  1118  0009BC  6E03               	movwf	___awdiv@divisor^0,c
  1119  0009BE  C03E  F001         	movff	main@v,___awdiv@dividend
  1120  0009C2  C03F  F002         	movff	main@v+1,___awdiv@dividend+1
  1121  0009C6  EC49  F00E         	call	___awdiv	;wreg free
  1122  0009CA  C001  F009         	movff	?___awdiv,___awmod@dividend
  1123  0009CE  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1124  0009D2  0E00               	movlw	0
  1125  0009D4  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1126  0009D6  0E0A               	movlw	10
  1127  0009D8  6E0B               	movwf	___awmod@divisor^0,c
  1128  0009DA  EC05  F00F         	call	___awmod	;wreg free
  1129  0009DE  5009               	movf	?___awmod^0,w,c
  1130  0009E0  EC34  F010         	call	_ssdDigit
  1131  0009E4                     
  1132                           ;main.c: 113:      ssdDigit(((v/100)%10),1);
  1133  0009E4  0E01               	movlw	1
  1134  0009E6  6E0F               	movwf	ssdDigit@pos^0,c
  1135  0009E8  0E00               	movlw	0
  1136  0009EA  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1137  0009EC  0E64               	movlw	100
  1138  0009EE  6E03               	movwf	___awdiv@divisor^0,c
  1139  0009F0  C03E  F001         	movff	main@v,___awdiv@dividend
  1140  0009F4  C03F  F002         	movff	main@v+1,___awdiv@dividend+1
  1141  0009F8  EC49  F00E         	call	___awdiv	;wreg free
  1142  0009FC  C001  F009         	movff	?___awdiv,___awmod@dividend
  1143  000A00  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1144  000A04  0E00               	movlw	0
  1145  000A06  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1146  000A08  0E0A               	movlw	10
  1147  000A0A  6E0B               	movwf	___awmod@divisor^0,c
  1148  000A0C  EC05  F00F         	call	___awmod	;wreg free
  1149  000A10  5009               	movf	?___awmod^0,w,c
  1150  000A12  EC34  F010         	call	_ssdDigit
  1151  000A16                     
  1152                           ;main.c: 114:      ssdDigit(((v/1000)%10),0);
  1153  000A16  0E00               	movlw	0
  1154  000A18  6E0F               	movwf	ssdDigit@pos^0,c
  1155  000A1A  0E03               	movlw	3
  1156  000A1C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1157  000A1E  0EE8               	movlw	232
  1158  000A20  6E03               	movwf	___awdiv@divisor^0,c
  1159  000A22  C03E  F001         	movff	main@v,___awdiv@dividend
  1160  000A26  C03F  F002         	movff	main@v+1,___awdiv@dividend+1
  1161  000A2A  EC49  F00E         	call	___awdiv	;wreg free
  1162  000A2E  C001  F009         	movff	?___awdiv,___awmod@dividend
  1163  000A32  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1164  000A36  0E00               	movlw	0
  1165  000A38  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1166  000A3A  0E0A               	movlw	10
  1167  000A3C  6E0B               	movwf	___awmod@divisor^0,c
  1168  000A3E  EC05  F00F         	call	___awmod	;wreg free
  1169  000A42  5009               	movf	?___awmod^0,w,c
  1170  000A44  EC34  F010         	call	_ssdDigit
  1171  000A48                     
  1172                           ;main.c: 117:      digitalWrite(PIN_D0,0);
  1173  000A48  0E00               	movlw	0
  1174  000A4A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1175  000A4C  0E18               	movlw	24
  1176  000A4E  6E01               	movwf	digitalWrite@pin^0,c
  1177  000A50  0E00               	movlw	0
  1178  000A52  6E04               	movwf	(digitalWrite@value+1)^0,c
  1179  000A54  0E00               	movlw	0
  1180  000A56  6E03               	movwf	digitalWrite@value^0,c
  1181  000A58  EC12  F008         	call	_digitalWrite	;wreg free
  1182  000A5C                     
  1183                           ;main.c: 118:      digitalWrite(PIN_D1,0);
  1184  000A5C  0E00               	movlw	0
  1185  000A5E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1186  000A60  0E19               	movlw	25
  1187  000A62  6E01               	movwf	digitalWrite@pin^0,c
  1188  000A64  0E00               	movlw	0
  1189  000A66  6E04               	movwf	(digitalWrite@value+1)^0,c
  1190  000A68  0E00               	movlw	0
  1191  000A6A  6E03               	movwf	digitalWrite@value^0,c
  1192  000A6C  EC12  F008         	call	_digitalWrite	;wreg free
  1193  000A70                     
  1194                           ;main.c: 119:      digitalWrite(PIN_D2,0);
  1195  000A70  0E00               	movlw	0
  1196  000A72  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1197  000A74  0E1A               	movlw	26
  1198  000A76  6E01               	movwf	digitalWrite@pin^0,c
  1199  000A78  0E00               	movlw	0
  1200  000A7A  6E04               	movwf	(digitalWrite@value+1)^0,c
  1201  000A7C  0E00               	movlw	0
  1202  000A7E  6E03               	movwf	digitalWrite@value^0,c
  1203  000A80  EC12  F008         	call	_digitalWrite	;wreg free
  1204  000A84                     
  1205                           ;main.c: 120:      digitalWrite(PIN_D3,0);
  1206  000A84  0E00               	movlw	0
  1207  000A86  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1208  000A88  0E1B               	movlw	27
  1209  000A8A  6E01               	movwf	digitalWrite@pin^0,c
  1210  000A8C  0E00               	movlw	0
  1211  000A8E  6E04               	movwf	(digitalWrite@value+1)^0,c
  1212  000A90  0E00               	movlw	0
  1213  000A92  6E03               	movwf	digitalWrite@value^0,c
  1214  000A94  EC12  F008         	call	_digitalWrite	;wreg free
  1215  000A98                     
  1216                           ;main.c: 122:      dis++;
  1217  000A98  4A3A               	infsnz	main@dis^0,f,c
  1218  000A9A  2A3B               	incf	(main@dis+1)^0,f,c
  1219  000A9C                     
  1220                           ;main.c: 124:        if(dis==40){
  1221  000A9C  0E28               	movlw	40
  1222  000A9E  183A               	xorwf	main@dis^0,w,c
  1223  000AA0  103B               	iorwf	(main@dis+1)^0,w,c
  1224  000AA2  A4D8               	btfss	status,2,c
  1225  000AA4  EF56  F005         	goto	u2921
  1226  000AA8  EF58  F005         	goto	u2920
  1227  000AAC                     u2921:
  1228  000AAC  EF76  F005         	goto	l2785
  1229  000AB0                     u2920:
  1230  000AB0                     
  1231                           ;main.c: 125:        lcdCommand(0x01);
  1232  000AB0  0E01               	movlw	1
  1233  000AB2  EC29  F012         	call	_lcdCommand
  1234  000AB6                     
  1235                           ;main.c: 126:        dis=41;
  1236  000AB6  0E00               	movlw	0
  1237  000AB8  6E3B               	movwf	(main@dis+1)^0,c
  1238  000ABA  0E29               	movlw	41
  1239  000ABC  6E3A               	movwf	main@dis^0,c
  1240  000ABE                     
  1241                           ;main.c: 127:        ssdUpdate();
  1242  000ABE  EC3A  F00B         	call	_ssdUpdate	;wreg free
  1243  000AC2                     
  1244                           ;main.c: 128:        for(j=0;j<1000;j++);
  1245  000AC2  0E00               	movlw	0
  1246  000AC4  6E43               	movwf	(main@j+1)^0,c	;volatile
  1247  000AC6  0E00               	movlw	0
  1248  000AC8  6E42               	movwf	main@j^0,c	;volatile
  1249  000ACA                     l2777:
  1250  000ACA  0EE8               	movlw	232
  1251  000ACC  5C42               	subwf	main@j^0,w,c	;volatile
  1252  000ACE  0E03               	movlw	3
  1253  000AD0  5843               	subwfb	(main@j+1)^0,w,c	;volatile
  1254  000AD2  A0D8               	btfss	status,0,c
  1255  000AD4  EF6E  F005         	goto	u2931
  1256  000AD8  EF70  F005         	goto	u2930
  1257  000ADC                     u2931:
  1258  000ADC  EF72  F005         	goto	l2781
  1259  000AE0                     u2930:
  1260  000AE0  EF76  F005         	goto	l2785
  1261  000AE4                     l2781:
  1262  000AE4  4A42               	infsnz	main@j^0,f,c	;volatile
  1263  000AE6  2A43               	incf	(main@j+1)^0,f,c	;volatile
  1264  000AE8  EF65  F005         	goto	l2777
  1265  000AEC                     l2785:
  1266                           
  1267                           ;main.c: 130:        if(dis==81){
  1268  000AEC  0E51               	movlw	81
  1269  000AEE  183A               	xorwf	main@dis^0,w,c
  1270  000AF0  103B               	iorwf	(main@dis+1)^0,w,c
  1271  000AF2  A4D8               	btfss	status,2,c
  1272  000AF4  EF7E  F005         	goto	u2941
  1273  000AF8  EF80  F005         	goto	u2940
  1274  000AFC                     u2941:
  1275  000AFC  EFA1  F005         	goto	l2801
  1276  000B00                     u2940:
  1277  000B00                     
  1278                           ;main.c: 131:        lcdString("     Volume");
  1279  000B00  0E3B               	movlw	low STR_6
  1280  000B02  6E0F               	movwf	lcdString@msg^0,c
  1281  000B04  0E06               	movlw	high STR_6
  1282  000B06  6E10               	movwf	(lcdString@msg+1)^0,c
  1283  000B08  EC8B  F010         	call	_lcdString	;wreg free
  1284  000B0C                     
  1285                           ;main.c: 132:        dis=0;
  1286  000B0C  0E00               	movlw	0
  1287  000B0E  6E3B               	movwf	(main@dis+1)^0,c
  1288  000B10  0E00               	movlw	0
  1289  000B12  6E3A               	movwf	main@dis^0,c
  1290  000B14                     
  1291                           ;main.c: 133:        ssdUpdate();
  1292  000B14  EC3A  F00B         	call	_ssdUpdate	;wreg free
  1293                           
  1294                           ;main.c: 134:        for(j=0;j<1000;j++);
  1295  000B18  0E00               	movlw	0
  1296  000B1A  6E43               	movwf	(main@j+1)^0,c	;volatile
  1297  000B1C  0E00               	movlw	0
  1298  000B1E  6E42               	movwf	main@j^0,c	;volatile
  1299  000B20                     l2793:
  1300  000B20  0EE8               	movlw	232
  1301  000B22  5C42               	subwf	main@j^0,w,c	;volatile
  1302  000B24  0E03               	movlw	3
  1303  000B26  5843               	subwfb	(main@j+1)^0,w,c	;volatile
  1304  000B28  A0D8               	btfss	status,0,c
  1305  000B2A  EF99  F005         	goto	u2951
  1306  000B2E  EF9B  F005         	goto	u2950
  1307  000B32                     u2951:
  1308  000B32  EF9D  F005         	goto	l2797
  1309  000B36                     u2950:
  1310  000B36  EFA1  F005         	goto	l2801
  1311  000B3A                     l2797:
  1312  000B3A  4A42               	infsnz	main@j^0,f,c	;volatile
  1313  000B3C  2A43               	incf	(main@j+1)^0,f,c	;volatile
  1314  000B3E  EF90  F005         	goto	l2793
  1315  000B42                     l2801:
  1316                           
  1317                           ;main.c: 139:      kpDebounce();
  1318  000B42  ECA5  F00C         	call	_kpDebounce	;wreg free
  1319                           
  1320                           ;main.c: 140:      if (kpRead() != tecla){
  1321  000B46  EC50  F012         	call	_kpRead	;wreg free
  1322  000B4A  5040               	movf	main@tecla^0,w,c
  1323  000B4C  1801               	xorwf	?_kpRead^0,w,c
  1324  000B4E  E109               	bnz	u2960
  1325  000B50  5041               	movf	(main@tecla+1)^0,w,c
  1326  000B52  1802               	xorwf	(?_kpRead+1)^0,w,c
  1327  000B54  B4D8               	btfsc	status,2,c
  1328  000B56  EFAF  F005         	goto	u2961
  1329  000B5A  EFB1  F005         	goto	u2960
  1330  000B5E                     u2961:
  1331  000B5E  EFC5  F005         	goto	l2811
  1332  000B62                     u2960:
  1333  000B62                     
  1334                           ;main.c: 141:             tecla = kpRead();
  1335  000B62  EC50  F012         	call	_kpRead	;wreg free
  1336  000B66  C001  F040         	movff	?_kpRead,main@tecla
  1337  000B6A  C002  F041         	movff	?_kpRead+1,main@tecla+1
  1338  000B6E                     
  1339                           ;main.c: 143:        if(((tecla) & (1<<(7)))){
  1340  000B6E  AE40               	btfss	main@tecla^0,7,c
  1341  000B70  EFBC  F005         	goto	u2971
  1342  000B74  EFBE  F005         	goto	u2970
  1343  000B78                     u2971:
  1344  000B78  EFC5  F005         	goto	l2811
  1345  000B7C                     u2970:
  1346  000B7C                     
  1347                           ;main.c: 144:        i=100;
  1348  000B7C  0E00               	movlw	0
  1349  000B7E  6E39               	movwf	(main@i+1)^0,c
  1350  000B80  0E64               	movlw	100
  1351  000B82  6E38               	movwf	main@i^0,c
  1352  000B84                     
  1353                           ;main.c: 145:        lcdCommand(0x01);
  1354  000B84  0E01               	movlw	1
  1355  000B86  EC29  F012         	call	_lcdCommand
  1356  000B8A                     l2811:
  1357                           
  1358                           ;main.c: 148:         ssdUpdate();
  1359  000B8A  EC3A  F00B         	call	_ssdUpdate	;wreg free
  1360  000B8E                     
  1361                           ;main.c: 149:         pwmFrequency(v*100);
  1362  000B8E  C03E  F001         	movff	main@v,___wmul@multiplier
  1363  000B92  C03F  F002         	movff	main@v+1,___wmul@multiplier+1
  1364  000B96  0E00               	movlw	0
  1365  000B98  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1366  000B9A  0E64               	movlw	100
  1367  000B9C  6E03               	movwf	___wmul@multiplicand^0,c
  1368  000B9E  ECE1  F011         	call	___wmul	;wreg free
  1369  000BA2  C001  F00F         	movff	?___wmul,pwmFrequency@freq
  1370  000BA6  C002  F010         	movff	?___wmul+1,pwmFrequency@freq+1
  1371  000BAA  ECF4  F011         	call	_pwmFrequency	;wreg free
  1372  000BAE                     
  1373                           ;main.c: 150:         pwmSet(v);
  1374  000BAE  503E               	movf	main@v^0,w,c
  1375  000BB0  ECD1  F00F         	call	_pwmSet
  1376  000BB4                     
  1377                           ;main.c: 151:         for(j=0;j<1000;j++);
  1378  000BB4  0E00               	movlw	0
  1379  000BB6  6E43               	movwf	(main@j+1)^0,c	;volatile
  1380  000BB8  0E00               	movlw	0
  1381  000BBA  6E42               	movwf	main@j^0,c	;volatile
  1382  000BBC                     l2819:
  1383  000BBC  0EE8               	movlw	232
  1384  000BBE  5C42               	subwf	main@j^0,w,c	;volatile
  1385  000BC0  0E03               	movlw	3
  1386  000BC2  5843               	subwfb	(main@j+1)^0,w,c	;volatile
  1387  000BC4  A0D8               	btfss	status,0,c
  1388  000BC6  EFE7  F005         	goto	u2981
  1389  000BCA  EFE9  F005         	goto	u2980
  1390  000BCE                     u2981:
  1391  000BCE  EFEB  F005         	goto	l2823
  1392  000BD2                     u2980:
  1393  000BD2  EFEF  F005         	goto	l2827
  1394  000BD6                     l2823:
  1395  000BD6  4A42               	infsnz	main@j^0,f,c	;volatile
  1396  000BD8  2A43               	incf	(main@j+1)^0,f,c	;volatile
  1397  000BDA  EFDE  F005         	goto	l2819
  1398  000BDE                     l2827:
  1399                           
  1400                           ;main.c: 108:        while(i!=100) {
  1401  000BDE  0E64               	movlw	100
  1402  000BE0  1838               	xorwf	main@i^0,w,c
  1403  000BE2  1039               	iorwf	(main@i+1)^0,w,c
  1404  000BE4  A4D8               	btfss	status,2,c
  1405  000BE6  EFF7  F005         	goto	u2991
  1406  000BEA  EFF9  F005         	goto	u2990
  1407  000BEE                     u2991:
  1408  000BEE  EF98  F004         	goto	l2747
  1409  000BF2                     u2990:
  1410  000BF2  EF3B  F003         	goto	l43
  1411  000BF6  EF00  F000         	goto	start
  1412  000BFA                     __end_of_main:
  1413                           	callstack 0
  1414                           
  1415 ;; *************** function _ssdUpdate *****************
  1416 ;; Defined at:
  1417 ;;		line 50 in file "ssd.c"
  1418 ;; Parameters:    Size  Location     Type
  1419 ;;		None
  1420 ;; Auto vars:     Size  Location     Type
  1421 ;;		None
  1422 ;; Return value:  Size  Location     Type
  1423 ;;                  1    wreg      void 
  1424 ;; Registers used:
  1425 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1426 ;; Tracked objects:
  1427 ;;		On entry : 0/0
  1428 ;;		On exit  : 0/0
  1429 ;;		Unchanged: 0/0
  1430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1431 ;;      Params:         0       0       0       0       0       0       0
  1432 ;;      Locals:         0       0       0       0       0       0       0
  1433 ;;      Temps:          2       0       0       0       0       0       0
  1434 ;;      Totals:         2       0       0       0       0       0       0
  1435 ;;Total ram usage:        2 bytes
  1436 ;; Hardware stack levels used: 1
  1437 ;; Hardware stack levels required when called: 3
  1438 ;; This function calls:
  1439 ;;		_digitalWrite
  1440 ;;		_soWrite
  1441 ;; This function is called by:
  1442 ;;		_main
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446                           	psect	text1
  1447  001674                     __ptext1:
  1448                           	callstack 0
  1449  001674                     _ssdUpdate:
  1450                           	callstack 27
  1451  001674                     
  1452                           ;ssd.c: 54:     digitalWrite(PIN_D0,0);
  1453  001674  0E00               	movlw	0
  1454  001676  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1455  001678  0E18               	movlw	24
  1456  00167A  6E01               	movwf	digitalWrite@pin^0,c
  1457  00167C  0E00               	movlw	0
  1458  00167E  6E04               	movwf	(digitalWrite@value+1)^0,c
  1459  001680  0E00               	movlw	0
  1460  001682  6E03               	movwf	digitalWrite@value^0,c
  1461  001684  EC12  F008         	call	_digitalWrite	;wreg free
  1462                           
  1463                           ;ssd.c: 55:     digitalWrite(PIN_D1,0);
  1464  001688  0E00               	movlw	0
  1465  00168A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1466  00168C  0E19               	movlw	25
  1467  00168E  6E01               	movwf	digitalWrite@pin^0,c
  1468  001690  0E00               	movlw	0
  1469  001692  6E04               	movwf	(digitalWrite@value+1)^0,c
  1470  001694  0E00               	movlw	0
  1471  001696  6E03               	movwf	digitalWrite@value^0,c
  1472  001698  EC12  F008         	call	_digitalWrite	;wreg free
  1473                           
  1474                           ;ssd.c: 56:     digitalWrite(PIN_D2,0);
  1475  00169C  0E00               	movlw	0
  1476  00169E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1477  0016A0  0E1A               	movlw	26
  1478  0016A2  6E01               	movwf	digitalWrite@pin^0,c
  1479  0016A4  0E00               	movlw	0
  1480  0016A6  6E04               	movwf	(digitalWrite@value+1)^0,c
  1481  0016A8  0E00               	movlw	0
  1482  0016AA  6E03               	movwf	digitalWrite@value^0,c
  1483  0016AC  EC12  F008         	call	_digitalWrite	;wreg free
  1484                           
  1485                           ;ssd.c: 57:     digitalWrite(PIN_D3,0);
  1486  0016B0  0E00               	movlw	0
  1487  0016B2  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1488  0016B4  0E1B               	movlw	27
  1489  0016B6  6E01               	movwf	digitalWrite@pin^0,c
  1490  0016B8  0E00               	movlw	0
  1491  0016BA  6E04               	movwf	(digitalWrite@value+1)^0,c
  1492  0016BC  0E00               	movlw	0
  1493  0016BE  6E03               	movwf	digitalWrite@value^0,c
  1494  0016C0  EC12  F008         	call	_digitalWrite	;wreg free
  1495                           
  1496                           ;ssd.c: 60:     soWrite(0x00);
  1497  0016C4  0E00               	movlw	0
  1498  0016C6  6E08               	movwf	(soWrite@value+1)^0,c
  1499  0016C8  0E00               	movlw	0
  1500  0016CA  6E07               	movwf	soWrite@value^0,c
  1501  0016CC  ECDE  F010         	call	_soWrite	;wreg free
  1502                           
  1503                           ;ssd.c: 62:     switch (display)
  1504  0016D0  EFD2  F00B         	goto	l2403
  1505  0016D4                     l2375:
  1506                           
  1507                           ;ssd.c: 65:             soWrite(valor[v0]);
  1508  0016D4  0E01               	movlw	low _valor
  1509  0016D6  244D               	addwf	_v0^0,w,c
  1510  0016D8  6EF6               	movwf	tblptrl,c
  1511  0016DA  6AF7               	clrf	tblptrh,c
  1512  0016DC  0E06               	movlw	high _valor
  1513  0016DE  22F7               	addwfc	tblptrh,f,c
  1514  0016E0                     	if	0	;There are less than 3 active tblptr bytes
  1515  0016E0                     	endif
  1516  0016E0  0008               	tblrd		*
  1517  0016E2  50F5               	movf	tablat,w,c
  1518  0016E4  6E07               	movwf	soWrite@value^0,c
  1519  0016E6  6A08               	clrf	(soWrite@value+1)^0,c
  1520  0016E8  ECDE  F010         	call	_soWrite	;wreg free
  1521  0016EC                     
  1522                           ;ssd.c: 66:             digitalWrite(PIN_D0,1);
  1523  0016EC  0E00               	movlw	0
  1524  0016EE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1525  0016F0  0E18               	movlw	24
  1526  0016F2  6E01               	movwf	digitalWrite@pin^0,c
  1527  0016F4  0E00               	movlw	0
  1528  0016F6  6E04               	movwf	(digitalWrite@value+1)^0,c
  1529  0016F8  0E01               	movlw	1
  1530  0016FA  6E03               	movwf	digitalWrite@value^0,c
  1531  0016FC  EC12  F008         	call	_digitalWrite	;wreg free
  1532  001700                     
  1533                           ;ssd.c: 67:             display = 1;
  1534  001700  0E01               	movlw	1
  1535  001702  6E4E               	movwf	_display^0,c
  1536                           
  1537                           ;ssd.c: 68:             break;
  1538  001704  EFEF  F00B         	goto	l227
  1539  001708                     l2381:
  1540                           
  1541                           ;ssd.c: 71:             soWrite(valor[v1]);
  1542  001708  0E01               	movlw	low _valor
  1543  00170A  244C               	addwf	_v1^0,w,c
  1544  00170C  6EF6               	movwf	tblptrl,c
  1545  00170E  6AF7               	clrf	tblptrh,c
  1546  001710  0E06               	movlw	high _valor
  1547  001712  22F7               	addwfc	tblptrh,f,c
  1548  001714                     	if	0	;There are less than 3 active tblptr bytes
  1549  001714                     	endif
  1550  001714  0008               	tblrd		*
  1551  001716  50F5               	movf	tablat,w,c
  1552  001718  6E07               	movwf	soWrite@value^0,c
  1553  00171A  6A08               	clrf	(soWrite@value+1)^0,c
  1554  00171C  ECDE  F010         	call	_soWrite	;wreg free
  1555  001720                     
  1556                           ;ssd.c: 72:             digitalWrite(PIN_D1,1);
  1557  001720  0E00               	movlw	0
  1558  001722  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1559  001724  0E19               	movlw	25
  1560  001726  6E01               	movwf	digitalWrite@pin^0,c
  1561  001728  0E00               	movlw	0
  1562  00172A  6E04               	movwf	(digitalWrite@value+1)^0,c
  1563  00172C  0E01               	movlw	1
  1564  00172E  6E03               	movwf	digitalWrite@value^0,c
  1565  001730  EC12  F008         	call	_digitalWrite	;wreg free
  1566  001734                     
  1567                           ;ssd.c: 73:             display = 2;
  1568  001734  0E02               	movlw	2
  1569  001736  6E4E               	movwf	_display^0,c
  1570                           
  1571                           ;ssd.c: 74:             break;
  1572  001738  EFEF  F00B         	goto	l227
  1573  00173C                     l2387:
  1574                           
  1575                           ;ssd.c: 77:             soWrite(valor[v2]);
  1576  00173C  0E01               	movlw	low _valor
  1577  00173E  244B               	addwf	_v2^0,w,c
  1578  001740  6EF6               	movwf	tblptrl,c
  1579  001742  6AF7               	clrf	tblptrh,c
  1580  001744  0E06               	movlw	high _valor
  1581  001746  22F7               	addwfc	tblptrh,f,c
  1582  001748                     	if	0	;There are less than 3 active tblptr bytes
  1583  001748                     	endif
  1584  001748  0008               	tblrd		*
  1585  00174A  50F5               	movf	tablat,w,c
  1586  00174C  6E07               	movwf	soWrite@value^0,c
  1587  00174E  6A08               	clrf	(soWrite@value+1)^0,c
  1588  001750  ECDE  F010         	call	_soWrite	;wreg free
  1589  001754                     
  1590                           ;ssd.c: 78:             digitalWrite(PIN_D2,1);
  1591  001754  0E00               	movlw	0
  1592  001756  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1593  001758  0E1A               	movlw	26
  1594  00175A  6E01               	movwf	digitalWrite@pin^0,c
  1595  00175C  0E00               	movlw	0
  1596  00175E  6E04               	movwf	(digitalWrite@value+1)^0,c
  1597  001760  0E01               	movlw	1
  1598  001762  6E03               	movwf	digitalWrite@value^0,c
  1599  001764  EC12  F008         	call	_digitalWrite	;wreg free
  1600  001768                     
  1601                           ;ssd.c: 79:             display = 3;
  1602  001768  0E03               	movlw	3
  1603  00176A  6E4E               	movwf	_display^0,c
  1604                           
  1605                           ;ssd.c: 80:             break;
  1606  00176C  EFEF  F00B         	goto	l227
  1607  001770                     l2393:
  1608                           
  1609                           ;ssd.c: 83:             soWrite(valor[v3]);
  1610  001770  0E01               	movlw	low _valor
  1611  001772  244A               	addwf	_v3^0,w,c
  1612  001774  6EF6               	movwf	tblptrl,c
  1613  001776  6AF7               	clrf	tblptrh,c
  1614  001778  0E06               	movlw	high _valor
  1615  00177A  22F7               	addwfc	tblptrh,f,c
  1616  00177C                     	if	0	;There are less than 3 active tblptr bytes
  1617  00177C                     	endif
  1618  00177C  0008               	tblrd		*
  1619  00177E  50F5               	movf	tablat,w,c
  1620  001780  6E07               	movwf	soWrite@value^0,c
  1621  001782  6A08               	clrf	(soWrite@value+1)^0,c
  1622  001784  ECDE  F010         	call	_soWrite	;wreg free
  1623  001788                     
  1624                           ;ssd.c: 84:             digitalWrite(PIN_D3,1);
  1625  001788  0E00               	movlw	0
  1626  00178A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1627  00178C  0E1B               	movlw	27
  1628  00178E  6E01               	movwf	digitalWrite@pin^0,c
  1629  001790  0E00               	movlw	0
  1630  001792  6E04               	movwf	(digitalWrite@value+1)^0,c
  1631  001794  0E01               	movlw	1
  1632  001796  6E03               	movwf	digitalWrite@value^0,c
  1633  001798  EC12  F008         	call	_digitalWrite	;wreg free
  1634  00179C                     l2397:
  1635                           
  1636                           ;ssd.c: 85:             display = 0;
  1637  00179C  0E00               	movlw	0
  1638  00179E  6E4E               	movwf	_display^0,c
  1639                           
  1640                           ;ssd.c: 86:             break;
  1641  0017A0  EFEF  F00B         	goto	l227
  1642  0017A4                     l2403:
  1643  0017A4  504E               	movf	_display^0,w,c
  1644  0017A6  6E0A               	movwf	??_ssdUpdate^0,c
  1645  0017A8  6A0B               	clrf	(??_ssdUpdate+1)^0,c
  1646                           
  1647                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1648                           ; Switch size 1, requested type "simple"
  1649                           ; Number of cases is 1, Range of values is 0 to 0
  1650                           ; switch strategies available:
  1651                           ; Name         Instructions Cycles
  1652                           ; simple_byte            4     3 (average)
  1653                           ;	Chosen strategy is simple_byte
  1654  0017AA  500B               	movf	(??_ssdUpdate+1)^0,w,c
  1655  0017AC  0A00               	xorlw	0	; case 0
  1656  0017AE  B4D8               	btfsc	status,2,c
  1657  0017B0  EFDC  F00B         	goto	l2833
  1658  0017B4  EFCE  F00B         	goto	l2397
  1659  0017B8                     l2833:
  1660                           
  1661                           ; Switch size 1, requested type "simple"
  1662                           ; Number of cases is 4, Range of values is 0 to 3
  1663                           ; switch strategies available:
  1664                           ; Name         Instructions Cycles
  1665                           ; simple_byte           13     7 (average)
  1666                           ;	Chosen strategy is simple_byte
  1667  0017B8  500A               	movf	??_ssdUpdate^0,w,c
  1668  0017BA  0A00               	xorlw	0	; case 0
  1669  0017BC  B4D8               	btfsc	status,2,c
  1670  0017BE  EF6A  F00B         	goto	l2375
  1671  0017C2  0A01               	xorlw	1	; case 1
  1672  0017C4  B4D8               	btfsc	status,2,c
  1673  0017C6  EF84  F00B         	goto	l2381
  1674  0017CA  0A03               	xorlw	3	; case 2
  1675  0017CC  B4D8               	btfsc	status,2,c
  1676  0017CE  EF9E  F00B         	goto	l2387
  1677  0017D2  0A01               	xorlw	1	; case 3
  1678  0017D4  B4D8               	btfsc	status,2,c
  1679  0017D6  EFB8  F00B         	goto	l2393
  1680  0017DA  EFCE  F00B         	goto	l2397
  1681  0017DE                     l227:
  1682  0017DE  0012               	return		;funcret
  1683  0017E0                     __end_of_ssdUpdate:
  1684                           	callstack 0
  1685                           
  1686 ;; *************** function _ssdInit *****************
  1687 ;; Defined at:
  1688 ;;		line 94 in file "ssd.c"
  1689 ;; Parameters:    Size  Location     Type
  1690 ;;		None
  1691 ;; Auto vars:     Size  Location     Type
  1692 ;;		None
  1693 ;; Return value:  Size  Location     Type
  1694 ;;                  1    wreg      void 
  1695 ;; Registers used:
  1696 ;;		wreg, status,2, status,0, cstack
  1697 ;; Tracked objects:
  1698 ;;		On entry : 0/0
  1699 ;;		On exit  : 0/0
  1700 ;;		Unchanged: 0/0
  1701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1702 ;;      Params:         0       0       0       0       0       0       0
  1703 ;;      Locals:         0       0       0       0       0       0       0
  1704 ;;      Temps:          0       0       0       0       0       0       0
  1705 ;;      Totals:         0       0       0       0       0       0       0
  1706 ;;Total ram usage:        0 bytes
  1707 ;; Hardware stack levels used: 1
  1708 ;; Hardware stack levels required when called: 2
  1709 ;; This function calls:
  1710 ;;		_pinMode
  1711 ;;		_soInit
  1712 ;; This function is called by:
  1713 ;;		_main
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717                           	psect	text2
  1718  0020C0                     __ptext2:
  1719                           	callstack 0
  1720  0020C0                     _ssdInit:
  1721                           	callstack 28
  1722  0020C0                     
  1723                           ;ssd.c: 96:     pinMode(PIN_D0, 0);
  1724  0020C0  0E00               	movlw	0
  1725  0020C2  6E02               	movwf	(pinMode@pin+1)^0,c
  1726  0020C4  0E18               	movlw	24
  1727  0020C6  6E01               	movwf	pinMode@pin^0,c
  1728  0020C8  0E00               	movlw	0
  1729  0020CA  6E04               	movwf	(pinMode@type+1)^0,c
  1730  0020CC  0E00               	movlw	0
  1731  0020CE  6E03               	movwf	pinMode@type^0,c
  1732  0020D0  EC39  F009         	call	_pinMode	;wreg free
  1733                           
  1734                           ;ssd.c: 97:     pinMode(PIN_D1, 0);
  1735  0020D4  0E00               	movlw	0
  1736  0020D6  6E02               	movwf	(pinMode@pin+1)^0,c
  1737  0020D8  0E19               	movlw	25
  1738  0020DA  6E01               	movwf	pinMode@pin^0,c
  1739  0020DC  0E00               	movlw	0
  1740  0020DE  6E04               	movwf	(pinMode@type+1)^0,c
  1741  0020E0  0E00               	movlw	0
  1742  0020E2  6E03               	movwf	pinMode@type^0,c
  1743  0020E4  EC39  F009         	call	_pinMode	;wreg free
  1744                           
  1745                           ;ssd.c: 98:     pinMode(PIN_D2, 0);
  1746  0020E8  0E00               	movlw	0
  1747  0020EA  6E02               	movwf	(pinMode@pin+1)^0,c
  1748  0020EC  0E1A               	movlw	26
  1749  0020EE  6E01               	movwf	pinMode@pin^0,c
  1750  0020F0  0E00               	movlw	0
  1751  0020F2  6E04               	movwf	(pinMode@type+1)^0,c
  1752  0020F4  0E00               	movlw	0
  1753  0020F6  6E03               	movwf	pinMode@type^0,c
  1754  0020F8  EC39  F009         	call	_pinMode	;wreg free
  1755                           
  1756                           ;ssd.c: 99:     pinMode(PIN_D3, 0);
  1757  0020FC  0E00               	movlw	0
  1758  0020FE  6E02               	movwf	(pinMode@pin+1)^0,c
  1759  002100  0E1B               	movlw	27
  1760  002102  6E01               	movwf	pinMode@pin^0,c
  1761  002104  0E00               	movlw	0
  1762  002106  6E04               	movwf	(pinMode@type+1)^0,c
  1763  002108  0E00               	movlw	0
  1764  00210A  6E03               	movwf	pinMode@type^0,c
  1765  00210C  EC39  F009         	call	_pinMode	;wreg free
  1766                           
  1767                           ;ssd.c: 102:     soInit();
  1768  002110  EC4A  F011         	call	_soInit	;wreg free
  1769  002114  0012               	return		;funcret
  1770  002116                     __end_of_ssdInit:
  1771                           	callstack 0
  1772                           
  1773 ;; *************** function _ssdDigit *****************
  1774 ;; Defined at:
  1775 ;;		line 34 in file "ssd.c"
  1776 ;; Parameters:    Size  Location     Type
  1777 ;;  val             1    wreg     unsigned char 
  1778 ;;  pos             1   14[COMRAM] unsigned char 
  1779 ;; Auto vars:     Size  Location     Type
  1780 ;;  val             1   15[COMRAM] unsigned char 
  1781 ;; Return value:  Size  Location     Type
  1782 ;;                  1    wreg      void 
  1783 ;; Registers used:
  1784 ;;		wreg, status,2, status,0
  1785 ;; Tracked objects:
  1786 ;;		On entry : 0/0
  1787 ;;		On exit  : 0/0
  1788 ;;		Unchanged: 0/0
  1789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1790 ;;      Params:         1       0       0       0       0       0       0
  1791 ;;      Locals:         1       0       0       0       0       0       0
  1792 ;;      Temps:          0       0       0       0       0       0       0
  1793 ;;      Totals:         2       0       0       0       0       0       0
  1794 ;;Total ram usage:        2 bytes
  1795 ;; Hardware stack levels used: 1
  1796 ;; This function calls:
  1797 ;;		Nothing
  1798 ;; This function is called by:
  1799 ;;		_main
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802                           
  1803                           	psect	text3
  1804  002068                     __ptext3:
  1805                           	callstack 0
  1806  002068                     _ssdDigit:
  1807                           	callstack 30
  1808                           
  1809                           ;incstack = 0
  1810                           ;ssdDigit@val stored from wreg
  1811  002068  6E10               	movwf	ssdDigit@val^0,c
  1812  00206A                     
  1813                           ;ssd.c: 35:     if (pos == 0) {
  1814  00206A  500F               	movf	ssdDigit@pos^0,w,c
  1815  00206C  A4D8               	btfss	status,2,c
  1816  00206E  EF3B  F010         	goto	u2391
  1817  002072  EF3D  F010         	goto	u2390
  1818  002076                     u2391:
  1819  002076  EF3F  F010         	goto	l2361
  1820  00207A                     u2390:
  1821  00207A                     
  1822                           ;ssd.c: 36:         v0 = val;
  1823  00207A  C010  F04D         	movff	ssdDigit@val,_v0
  1824  00207E                     l2361:
  1825                           
  1826                           ;ssd.c: 38:     if (pos == 1) {
  1827  00207E  040F               	decf	ssdDigit@pos^0,w,c
  1828  002080  A4D8               	btfss	status,2,c
  1829  002082  EF45  F010         	goto	u2401
  1830  002086  EF47  F010         	goto	u2400
  1831  00208A                     u2401:
  1832  00208A  EF49  F010         	goto	l2365
  1833  00208E                     u2400:
  1834  00208E                     
  1835                           ;ssd.c: 39:         v1 = val;
  1836  00208E  C010  F04C         	movff	ssdDigit@val,_v1
  1837  002092                     l2365:
  1838                           
  1839                           ;ssd.c: 41:     if (pos == 2) {
  1840  002092  0E02               	movlw	2
  1841  002094  180F               	xorwf	ssdDigit@pos^0,w,c
  1842  002096  A4D8               	btfss	status,2,c
  1843  002098  EF50  F010         	goto	u2411
  1844  00209C  EF52  F010         	goto	u2410
  1845  0020A0                     u2411:
  1846  0020A0  EF54  F010         	goto	l2369
  1847  0020A4                     u2410:
  1848  0020A4                     
  1849                           ;ssd.c: 42:         v2 = val;
  1850  0020A4  C010  F04B         	movff	ssdDigit@val,_v2
  1851  0020A8                     l2369:
  1852                           
  1853                           ;ssd.c: 44:     if (pos == 3) {
  1854  0020A8  0E03               	movlw	3
  1855  0020AA  180F               	xorwf	ssdDigit@pos^0,w,c
  1856  0020AC  A4D8               	btfss	status,2,c
  1857  0020AE  EF5B  F010         	goto	u2421
  1858  0020B2  EF5D  F010         	goto	u2420
  1859  0020B6                     u2421:
  1860  0020B6  EF5F  F010         	goto	l217
  1861  0020BA                     u2420:
  1862  0020BA                     
  1863                           ;ssd.c: 45:         v3 = val;
  1864  0020BA  C010  F04A         	movff	ssdDigit@val,_v3
  1865  0020BE                     l217:
  1866  0020BE  0012               	return		;funcret
  1867  0020C0                     __end_of_ssdDigit:
  1868                           	callstack 0
  1869                           
  1870 ;; *************** function _pwmSet *****************
  1871 ;; Defined at:
  1872 ;;		line 24 in file "pwm.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;  porcento        1    wreg     unsigned char 
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;  porcento        1    9[COMRAM] unsigned char 
  1877 ;;  val             2   10[COMRAM] unsigned int 
  1878 ;; Return value:  Size  Location     Type
  1879 ;;                  1    wreg      void 
  1880 ;; Registers used:
  1881 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1882 ;; Tracked objects:
  1883 ;;		On entry : 0/0
  1884 ;;		On exit  : 0/0
  1885 ;;		Unchanged: 0/0
  1886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1887 ;;      Params:         0       0       0       0       0       0       0
  1888 ;;      Locals:         3       0       0       0       0       0       0
  1889 ;;      Temps:          2       0       0       0       0       0       0
  1890 ;;      Totals:         5       0       0       0       0       0       0
  1891 ;;Total ram usage:        5 bytes
  1892 ;; Hardware stack levels used: 1
  1893 ;; Hardware stack levels required when called: 1
  1894 ;; This function calls:
  1895 ;;		___lwdiv
  1896 ;;		___wmul
  1897 ;; This function is called by:
  1898 ;;		_main
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902                           	psect	text4
  1903  001FA2                     __ptext4:
  1904                           	callstack 0
  1905  001FA2                     _pwmSet:
  1906                           	callstack 29
  1907                           
  1908                           ;incstack = 0
  1909                           ;pwmSet@porcento stored from wreg
  1910  001FA2  6E0A               	movwf	pwmSet@porcento^0,c
  1911  001FA4                     
  1912                           ;pwm.c: 24: void pwmSet(unsigned char porcento);pwm.c: 25: {;pwm.c: 31:  unsigned int va
      +                          l = ((unsigned int)porcento) *(PR2+1);
  1913  001FA4  0E01               	movlw	1
  1914  001FA6  24CB               	addwf	203,w,c	;volatile
  1915  001FA8  6E01               	movwf	___wmul@multiplier^0,c
  1916  001FAA  6A02               	clrf	(___wmul@multiplier+1)^0,c
  1917  001FAC  0E00               	movlw	0
  1918  001FAE  2202               	addwfc	(___wmul@multiplier+1)^0,f,c
  1919  001FB0  C00A  F003         	movff	pwmSet@porcento,___wmul@multiplicand
  1920  001FB4  6A04               	clrf	(___wmul@multiplicand+1)^0,c
  1921  001FB6  ECE1  F011         	call	___wmul	;wreg free
  1922  001FBA  C001  F00B         	movff	?___wmul,pwmSet@val
  1923  001FBE  C002  F00C         	movff	?___wmul+1,pwmSet@val+1
  1924  001FC2                     
  1925                           ;pwm.c: 33:     val = val / 25;
  1926  001FC2  C00B  F001         	movff	pwmSet@val,___lwdiv@dividend
  1927  001FC6  C00C  F002         	movff	pwmSet@val+1,___lwdiv@dividend+1
  1928  001FCA  0E00               	movlw	0
  1929  001FCC  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  1930  001FCE  0E19               	movlw	25
  1931  001FD0  6E03               	movwf	___lwdiv@divisor^0,c
  1932  001FD2  EC5D  F00F         	call	___lwdiv	;wreg free
  1933  001FD6  C001  F00B         	movff	?___lwdiv,pwmSet@val
  1934  001FDA  C002  F00C         	movff	?___lwdiv+1,pwmSet@val+1
  1935  001FDE                     
  1936                           ;pwm.c: 35:  val &= 0x03ff;
  1937  001FDE  0EFF               	movlw	255
  1938  001FE0  160B               	andwf	pwmSet@val^0,f,c
  1939  001FE2  0E03               	movlw	3
  1940  001FE4  160C               	andwf	(pwmSet@val+1)^0,f,c
  1941  001FE6                     
  1942                           ;pwm.c: 37:  CCPR2L = val >> 2;
  1943  001FE6  C00B  F008         	movff	pwmSet@val,??_pwmSet
  1944  001FEA  C00C  F009         	movff	pwmSet@val+1,??_pwmSet+1
  1945  001FEE  90D8               	bcf	status,0,c
  1946  001FF0  3209               	rrcf	(??_pwmSet+1)^0,f,c
  1947  001FF2  3208               	rrcf	??_pwmSet^0,f,c
  1948  001FF4  90D8               	bcf	status,0,c
  1949  001FF6  3209               	rrcf	(??_pwmSet+1)^0,f,c
  1950  001FF8  3208               	rrcf	??_pwmSet^0,f,c
  1951  001FFA  5008               	movf	??_pwmSet^0,w,c
  1952  001FFC  6EBB               	movwf	187,c	;volatile
  1953  001FFE                     
  1954                           ;pwm.c: 39:  CCP2CON |= (val & 0x0003) << 4;
  1955  001FFE  C00B  F008         	movff	pwmSet@val,??_pwmSet	;volatile
  1956  002002  0E03               	movlw	3
  1957  002004  1608               	andwf	??_pwmSet^0,f,c
  1958  002006  3808               	swapf	??_pwmSet^0,w,c
  1959  002008  0BF0               	andlw	240
  1960  00200A  12BA               	iorwf	186,f,c	;volatile
  1961  00200C  0012               	return		;funcret
  1962  00200E                     __end_of_pwmSet:
  1963                           	callstack 0
  1964                           
  1965 ;; *************** function ___wmul *****************
  1966 ;; Defined at:
  1967 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;  multiplier      2    0[COMRAM] unsigned int 
  1970 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1971 ;; Auto vars:     Size  Location     Type
  1972 ;;  product         2    4[COMRAM] unsigned int 
  1973 ;; Return value:  Size  Location     Type
  1974 ;;                  2    0[COMRAM] unsigned int 
  1975 ;; Registers used:
  1976 ;;		wreg, status,2, status,0, prodl, prodh
  1977 ;; Tracked objects:
  1978 ;;		On entry : 0/0
  1979 ;;		On exit  : 0/0
  1980 ;;		Unchanged: 0/0
  1981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1982 ;;      Params:         4       0       0       0       0       0       0
  1983 ;;      Locals:         2       0       0       0       0       0       0
  1984 ;;      Temps:          0       0       0       0       0       0       0
  1985 ;;      Totals:         6       0       0       0       0       0       0
  1986 ;;Total ram usage:        6 bytes
  1987 ;; Hardware stack levels used: 1
  1988 ;; This function calls:
  1989 ;;		Nothing
  1990 ;; This function is called by:
  1991 ;;		_main
  1992 ;;		_pwmSet
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           
  1996                           	psect	text5
  1997  0023C2                     __ptext5:
  1998                           	callstack 0
  1999  0023C2                     ___wmul:
  2000                           	callstack 29
  2001  0023C2  5001               	movf	___wmul@multiplier^0,w,c
  2002  0023C4  0203               	mulwf	___wmul@multiplicand^0,c
  2003  0023C6  CFF3 F005          	movff	prodl,___wmul@product
  2004  0023CA  CFF4 F006          	movff	prodh,___wmul@product+1
  2005  0023CE  5001               	movf	___wmul@multiplier^0,w,c
  2006  0023D0  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2007  0023D2  50F3               	movf	243,w,c
  2008  0023D4  2606               	addwf	(___wmul@product+1)^0,f,c
  2009  0023D6  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2010  0023D8  0203               	mulwf	___wmul@multiplicand^0,c
  2011  0023DA  50F3               	movf	243,w,c
  2012  0023DC  2606               	addwf	(___wmul@product+1)^0,f,c
  2013  0023DE  C005  F001         	movff	___wmul@product,?___wmul
  2014  0023E2  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2015  0023E6  0012               	return		;funcret
  2016  0023E8                     __end_of___wmul:
  2017                           	callstack 0
  2018                           
  2019 ;; *************** function ___lwdiv *****************
  2020 ;; Defined at:
  2021 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  2022 ;; Parameters:    Size  Location     Type
  2023 ;;  dividend        2    0[COMRAM] unsigned int 
  2024 ;;  divisor         2    2[COMRAM] unsigned int 
  2025 ;; Auto vars:     Size  Location     Type
  2026 ;;  quotient        2    4[COMRAM] unsigned int 
  2027 ;;  counter         1    6[COMRAM] unsigned char 
  2028 ;; Return value:  Size  Location     Type
  2029 ;;                  2    0[COMRAM] unsigned int 
  2030 ;; Registers used:
  2031 ;;		wreg, status,2, status,0
  2032 ;; Tracked objects:
  2033 ;;		On entry : 0/0
  2034 ;;		On exit  : 0/0
  2035 ;;		Unchanged: 0/0
  2036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2037 ;;      Params:         4       0       0       0       0       0       0
  2038 ;;      Locals:         3       0       0       0       0       0       0
  2039 ;;      Temps:          0       0       0       0       0       0       0
  2040 ;;      Totals:         7       0       0       0       0       0       0
  2041 ;;Total ram usage:        7 bytes
  2042 ;; Hardware stack levels used: 1
  2043 ;; This function calls:
  2044 ;;		Nothing
  2045 ;; This function is called by:
  2046 ;;		_pwmSet
  2047 ;; This function uses a non-reentrant model
  2048 ;;
  2049                           
  2050                           	psect	text6
  2051  001EBA                     __ptext6:
  2052                           	callstack 0
  2053  001EBA                     ___lwdiv:
  2054                           	callstack 29
  2055  001EBA  0E00               	movlw	0
  2056  001EBC  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  2057  001EBE  0E00               	movlw	0
  2058  001EC0  6E05               	movwf	___lwdiv@quotient^0,c
  2059  001EC2  5003               	movf	___lwdiv@divisor^0,w,c
  2060  001EC4  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2061  001EC6  B4D8               	btfsc	status,2,c
  2062  001EC8  EF68  F00F         	goto	u2221
  2063  001ECC  EF6A  F00F         	goto	u2220
  2064  001ED0                     u2221:
  2065  001ED0  EF92  F00F         	goto	l837
  2066  001ED4                     u2220:
  2067  001ED4  0E01               	movlw	1
  2068  001ED6  6E07               	movwf	___lwdiv@counter^0,c
  2069  001ED8  EF72  F00F         	goto	l2237
  2070  001EDC                     l2235:
  2071  001EDC  90D8               	bcf	status,0,c
  2072  001EDE  3603               	rlcf	___lwdiv@divisor^0,f,c
  2073  001EE0  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2074  001EE2  2A07               	incf	___lwdiv@counter^0,f,c
  2075  001EE4                     l2237:
  2076  001EE4  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  2077  001EE6  EF77  F00F         	goto	u2231
  2078  001EEA  EF79  F00F         	goto	u2230
  2079  001EEE                     u2231:
  2080  001EEE  EF6E  F00F         	goto	l2235
  2081  001EF2                     u2230:
  2082  001EF2                     l2239:
  2083  001EF2  90D8               	bcf	status,0,c
  2084  001EF4  3605               	rlcf	___lwdiv@quotient^0,f,c
  2085  001EF6  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2086  001EF8  5003               	movf	___lwdiv@divisor^0,w,c
  2087  001EFA  5C01               	subwf	___lwdiv@dividend^0,w,c
  2088  001EFC  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2089  001EFE  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2090  001F00  A0D8               	btfss	status,0,c
  2091  001F02  EF85  F00F         	goto	u2241
  2092  001F06  EF87  F00F         	goto	u2240
  2093  001F0A                     u2241:
  2094  001F0A  EF8C  F00F         	goto	l2247
  2095  001F0E                     u2240:
  2096  001F0E  5003               	movf	___lwdiv@divisor^0,w,c
  2097  001F10  5E01               	subwf	___lwdiv@dividend^0,f,c
  2098  001F12  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2099  001F14  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2100  001F16  8005               	bsf	___lwdiv@quotient^0,0,c
  2101  001F18                     l2247:
  2102  001F18  90D8               	bcf	status,0,c
  2103  001F1A  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2104  001F1C  3203               	rrcf	___lwdiv@divisor^0,f,c
  2105  001F1E  2E07               	decfsz	___lwdiv@counter^0,f,c
  2106  001F20  EF79  F00F         	goto	l2239
  2107  001F24                     l837:
  2108  001F24  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2109  001F28  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2110  001F2C  0012               	return		;funcret
  2111  001F2E                     __end_of___lwdiv:
  2112                           	callstack 0
  2113                           
  2114 ;; *************** function _pwmInit *****************
  2115 ;; Defined at:
  2116 ;;		line 51 in file "pwm.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;		None
  2119 ;; Auto vars:     Size  Location     Type
  2120 ;;		None
  2121 ;; Return value:  Size  Location     Type
  2122 ;;                  1    wreg      void 
  2123 ;; Registers used:
  2124 ;;		wreg, status,2, status,0, cstack
  2125 ;; Tracked objects:
  2126 ;;		On entry : 0/0
  2127 ;;		On exit  : 0/0
  2128 ;;		Unchanged: 0/0
  2129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2130 ;;      Params:         0       0       0       0       0       0       0
  2131 ;;      Locals:         0       0       0       0       0       0       0
  2132 ;;      Temps:          0       0       0       0       0       0       0
  2133 ;;      Totals:         0       0       0       0       0       0       0
  2134 ;;Total ram usage:        0 bytes
  2135 ;; Hardware stack levels used: 1
  2136 ;; Hardware stack levels required when called: 2
  2137 ;; This function calls:
  2138 ;;		_pwmFrequency
  2139 ;; This function is called by:
  2140 ;;		_main
  2141 ;; This function uses a non-reentrant model
  2142 ;;
  2143                           
  2144                           	psect	text7
  2145  002470                     __ptext7:
  2146                           	callstack 0
  2147  002470                     _pwmInit:
  2148                           	callstack 28
  2149  002470                     
  2150                           ;pwm.c: 53:  ((TRISC) &= ~(1<<(1)));
  2151  002470  9294               	bcf	148,1,c	;volatile
  2152  002472                     
  2153                           ;pwm.c: 55:  T2CON |= 0b00000011;
  2154  002472  0E03               	movlw	3
  2155  002474  12CA               	iorwf	202,f,c	;volatile
  2156  002476                     
  2157                           ;pwm.c: 56:  ((T2CON) |= (1<<(2)));
  2158  002476  84CA               	bsf	202,2,c	;volatile
  2159  002478                     
  2160                           ;pwm.c: 58:  CCP2CON = 0b00001100;
  2161  002478  0E0C               	movlw	12
  2162  00247A  6EBA               	movwf	186,c	;volatile
  2163  00247C                     
  2164                           ;pwm.c: 60:     pwmFrequency(100);
  2165  00247C  0E00               	movlw	0
  2166  00247E  6E10               	movwf	(pwmFrequency@freq+1)^0,c
  2167  002480  0E64               	movlw	100
  2168  002482  6E0F               	movwf	pwmFrequency@freq^0,c
  2169  002484  ECF4  F011         	call	_pwmFrequency	;wreg free
  2170  002488  0012               	return		;funcret
  2171  00248A                     __end_of_pwmInit:
  2172                           	callstack 0
  2173                           
  2174 ;; *************** function _pwmFrequency *****************
  2175 ;; Defined at:
  2176 ;;		line 44 in file "pwm.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;  freq            2   14[COMRAM] unsigned int 
  2179 ;; Auto vars:     Size  Location     Type
  2180 ;;		None
  2181 ;; Return value:  Size  Location     Type
  2182 ;;                  1    wreg      void 
  2183 ;; Registers used:
  2184 ;;		wreg, status,2, status,0, cstack
  2185 ;; Tracked objects:
  2186 ;;		On entry : 0/0
  2187 ;;		On exit  : 0/0
  2188 ;;		Unchanged: 0/0
  2189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2190 ;;      Params:         2       0       0       0       0       0       0
  2191 ;;      Locals:         0       0       0       0       0       0       0
  2192 ;;      Temps:          0       0       0       0       0       0       0
  2193 ;;      Totals:         2       0       0       0       0       0       0
  2194 ;;Total ram usage:        2 bytes
  2195 ;; Hardware stack levels used: 1
  2196 ;; Hardware stack levels required when called: 1
  2197 ;; This function calls:
  2198 ;;		___aldiv
  2199 ;; This function is called by:
  2200 ;;		_main
  2201 ;;		_pwmInit
  2202 ;; This function uses a non-reentrant model
  2203 ;;
  2204                           
  2205                           	psect	text8
  2206  0023E8                     __ptext8:
  2207                           	callstack 0
  2208  0023E8                     _pwmFrequency:
  2209                           	callstack 28
  2210  0023E8                     
  2211                           ;pwm.c: 44: void pwmFrequency(unsigned int freq);pwm.c: 45: {;pwm.c: 48:  PR2 = (125000l
      +                          /(freq)) - 1;
  2212  0023E8  0E48               	movlw	72
  2213  0023EA  6E01               	movwf	___aldiv@dividend^0,c
  2214  0023EC  0EE8               	movlw	232
  2215  0023EE  6E02               	movwf	(___aldiv@dividend+1)^0,c
  2216  0023F0  0E01               	movlw	1
  2217  0023F2  6E03               	movwf	(___aldiv@dividend+2)^0,c
  2218  0023F4  0E00               	movlw	0
  2219  0023F6  6E04               	movwf	(___aldiv@dividend+3)^0,c
  2220  0023F8  C00F  F005         	movff	pwmFrequency@freq,___aldiv@divisor
  2221  0023FC  C010  F006         	movff	pwmFrequency@freq+1,___aldiv@divisor+1
  2222  002400  6A07               	clrf	(___aldiv@divisor+2)^0,c
  2223  002402  6A08               	clrf	(___aldiv@divisor+3)^0,c
  2224  002404  EC40  F00D         	call	___aldiv	;wreg free
  2225  002408  0401               	decf	?___aldiv^0,w,c
  2226  00240A  6ECB               	movwf	203,c	;volatile
  2227  00240C  0012               	return		;funcret
  2228  00240E                     __end_of_pwmFrequency:
  2229                           	callstack 0
  2230                           
  2231 ;; *************** function ___aldiv *****************
  2232 ;; Defined at:
  2233 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;  dividend        4    0[COMRAM] long 
  2236 ;;  divisor         4    4[COMRAM] long 
  2237 ;; Auto vars:     Size  Location     Type
  2238 ;;  quotient        4   10[COMRAM] long 
  2239 ;;  sign            1    9[COMRAM] unsigned char 
  2240 ;;  counter         1    8[COMRAM] unsigned char 
  2241 ;; Return value:  Size  Location     Type
  2242 ;;                  4    0[COMRAM] long 
  2243 ;; Registers used:
  2244 ;;		wreg, status,2, status,0
  2245 ;; Tracked objects:
  2246 ;;		On entry : 0/0
  2247 ;;		On exit  : 0/0
  2248 ;;		Unchanged: 0/0
  2249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2250 ;;      Params:         8       0       0       0       0       0       0
  2251 ;;      Locals:         6       0       0       0       0       0       0
  2252 ;;      Temps:          0       0       0       0       0       0       0
  2253 ;;      Totals:        14       0       0       0       0       0       0
  2254 ;;Total ram usage:       14 bytes
  2255 ;; Hardware stack levels used: 1
  2256 ;; This function calls:
  2257 ;;		Nothing
  2258 ;; This function is called by:
  2259 ;;		_pwmFrequency
  2260 ;; This function uses a non-reentrant model
  2261 ;;
  2262                           
  2263                           	psect	text9
  2264  001A80                     __ptext9:
  2265                           	callstack 0
  2266  001A80                     ___aldiv:
  2267                           	callstack 28
  2268  001A80  0E00               	movlw	0
  2269  001A82  6E0A               	movwf	___aldiv@sign^0,c
  2270  001A84  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  2271  001A86  EF49  F00D         	goto	u1940
  2272  001A8A  EF47  F00D         	goto	u1941
  2273  001A8E                     u1941:
  2274  001A8E  EF53  F00D         	goto	l2057
  2275  001A92                     u1940:
  2276  001A92  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  2277  001A94  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  2278  001A96  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  2279  001A98  6C05               	negf	___aldiv@divisor^0,c
  2280  001A9A  0E00               	movlw	0
  2281  001A9C  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  2282  001A9E  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  2283  001AA0  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  2284  001AA2  0E01               	movlw	1
  2285  001AA4  6E0A               	movwf	___aldiv@sign^0,c
  2286  001AA6                     l2057:
  2287  001AA6  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  2288  001AA8  EF5A  F00D         	goto	u1950
  2289  001AAC  EF58  F00D         	goto	u1951
  2290  001AB0                     u1951:
  2291  001AB0  EF64  F00D         	goto	l2063
  2292  001AB4                     u1950:
  2293  001AB4  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  2294  001AB6  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  2295  001AB8  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  2296  001ABA  6C01               	negf	___aldiv@dividend^0,c
  2297  001ABC  0E00               	movlw	0
  2298  001ABE  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  2299  001AC0  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  2300  001AC2  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  2301  001AC4  0E01               	movlw	1
  2302  001AC6  1A0A               	xorwf	___aldiv@sign^0,f,c
  2303  001AC8                     l2063:
  2304  001AC8  0E00               	movlw	0
  2305  001ACA  6E0B               	movwf	___aldiv@quotient^0,c
  2306  001ACC  0E00               	movlw	0
  2307  001ACE  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  2308  001AD0  0E00               	movlw	0
  2309  001AD2  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  2310  001AD4  0E00               	movlw	0
  2311  001AD6  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  2312  001AD8  5005               	movf	___aldiv@divisor^0,w,c
  2313  001ADA  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  2314  001ADC  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  2315  001ADE  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  2316  001AE0  B4D8               	btfsc	status,2,c
  2317  001AE2  EF75  F00D         	goto	u1961
  2318  001AE6  EF77  F00D         	goto	u1960
  2319  001AEA                     u1961:
  2320  001AEA  EFAD  F00D         	goto	l2085
  2321  001AEE                     u1960:
  2322  001AEE  0E01               	movlw	1
  2323  001AF0  6E09               	movwf	___aldiv@counter^0,c
  2324  001AF2  EF81  F00D         	goto	l2071
  2325  001AF6                     l2069:
  2326  001AF6  90D8               	bcf	status,0,c
  2327  001AF8  3605               	rlcf	___aldiv@divisor^0,f,c
  2328  001AFA  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  2329  001AFC  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  2330  001AFE  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  2331  001B00  2A09               	incf	___aldiv@counter^0,f,c
  2332  001B02                     l2071:
  2333  001B02  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  2334  001B04  EF86  F00D         	goto	u1971
  2335  001B08  EF88  F00D         	goto	u1970
  2336  001B0C                     u1971:
  2337  001B0C  EF7B  F00D         	goto	l2069
  2338  001B10                     u1970:
  2339  001B10                     l2073:
  2340  001B10  90D8               	bcf	status,0,c
  2341  001B12  360B               	rlcf	___aldiv@quotient^0,f,c
  2342  001B14  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  2343  001B16  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  2344  001B18  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  2345  001B1A  5005               	movf	___aldiv@divisor^0,w,c
  2346  001B1C  5C01               	subwf	___aldiv@dividend^0,w,c
  2347  001B1E  5006               	movf	(___aldiv@divisor+1)^0,w,c
  2348  001B20  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  2349  001B22  5007               	movf	(___aldiv@divisor+2)^0,w,c
  2350  001B24  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  2351  001B26  5008               	movf	(___aldiv@divisor+3)^0,w,c
  2352  001B28  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  2353  001B2A  A0D8               	btfss	status,0,c
  2354  001B2C  EF9A  F00D         	goto	u1981
  2355  001B30  EF9C  F00D         	goto	u1980
  2356  001B34                     u1981:
  2357  001B34  EFA5  F00D         	goto	l2081
  2358  001B38                     u1980:
  2359  001B38  5005               	movf	___aldiv@divisor^0,w,c
  2360  001B3A  5E01               	subwf	___aldiv@dividend^0,f,c
  2361  001B3C  5006               	movf	(___aldiv@divisor+1)^0,w,c
  2362  001B3E  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  2363  001B40  5007               	movf	(___aldiv@divisor+2)^0,w,c
  2364  001B42  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  2365  001B44  5008               	movf	(___aldiv@divisor+3)^0,w,c
  2366  001B46  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  2367  001B48  800B               	bsf	___aldiv@quotient^0,0,c
  2368  001B4A                     l2081:
  2369  001B4A  90D8               	bcf	status,0,c
  2370  001B4C  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  2371  001B4E  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  2372  001B50  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  2373  001B52  3205               	rrcf	___aldiv@divisor^0,f,c
  2374  001B54  2E09               	decfsz	___aldiv@counter^0,f,c
  2375  001B56  EF88  F00D         	goto	l2073
  2376  001B5A                     l2085:
  2377  001B5A  500A               	movf	___aldiv@sign^0,w,c
  2378  001B5C  B4D8               	btfsc	status,2,c
  2379  001B5E  EFB3  F00D         	goto	u1991
  2380  001B62  EFB5  F00D         	goto	u1990
  2381  001B66                     u1991:
  2382  001B66  EFBD  F00D         	goto	l2089
  2383  001B6A                     u1990:
  2384  001B6A  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  2385  001B6C  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  2386  001B6E  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  2387  001B70  6C0B               	negf	___aldiv@quotient^0,c
  2388  001B72  0E00               	movlw	0
  2389  001B74  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  2390  001B76  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  2391  001B78  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  2392  001B7A                     l2089:
  2393  001B7A  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  2394  001B7E  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  2395  001B82  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  2396  001B86  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  2397  001B8A  0012               	return		;funcret
  2398  001B8C                     __end_of___aldiv:
  2399                           	callstack 0
  2400                           
  2401 ;; *************** function _lcdString *****************
  2402 ;; Defined at:
  2403 ;;		line 57 in file "lcd.c"
  2404 ;; Parameters:    Size  Location     Type
  2405 ;;  msg             2   14[COMRAM] PTR unsigned char 
  2406 ;;		 -> STR_7(12), STR_6(12), STR_5(18), STR_4(18), 
  2407 ;;		 -> STR_3(4), STR_2(9), STR_1(14), 
  2408 ;; Auto vars:     Size  Location     Type
  2409 ;;  i               2   18[COMRAM] int 
  2410 ;; Return value:  Size  Location     Type
  2411 ;;                  1    wreg      void 
  2412 ;; Registers used:
  2413 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2414 ;; Tracked objects:
  2415 ;;		On entry : 0/0
  2416 ;;		On exit  : 0/0
  2417 ;;		Unchanged: 0/0
  2418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2419 ;;      Params:         2       0       0       0       0       0       0
  2420 ;;      Locals:         2       0       0       0       0       0       0
  2421 ;;      Temps:          2       0       0       0       0       0       0
  2422 ;;      Totals:         6       0       0       0       0       0       0
  2423 ;;Total ram usage:        6 bytes
  2424 ;; Hardware stack levels used: 1
  2425 ;; Hardware stack levels required when called: 5
  2426 ;; This function calls:
  2427 ;;		_lcdChar
  2428 ;; This function is called by:
  2429 ;;		_main
  2430 ;; This function uses a non-reentrant model
  2431 ;;
  2432                           
  2433                           	psect	text10
  2434  002116                     __ptext10:
  2435                           	callstack 0
  2436  002116                     _lcdString:
  2437                           	callstack 25
  2438  002116                     
  2439                           ;lcd.c: 58:  int i = 0;
  2440  002116  0E00               	movlw	0
  2441  002118  6E14               	movwf	(lcdString@i+1)^0,c
  2442  00211A  0E00               	movlw	0
  2443  00211C  6E13               	movwf	lcdString@i^0,c
  2444                           
  2445                           ;lcd.c: 59:  while (msg[i] != 0) {
  2446  00211E  EFA1  F010         	goto	l2303
  2447  002122                     l2299:
  2448                           
  2449                           ;lcd.c: 60:   lcdChar(msg[i]);
  2450  002122  5013               	movf	lcdString@i^0,w,c
  2451  002124  240F               	addwf	lcdString@msg^0,w,c
  2452  002126  6E11               	movwf	??_lcdString^0,c
  2453  002128  5014               	movf	(lcdString@i+1)^0,w,c
  2454  00212A  2010               	addwfc	(lcdString@msg+1)^0,w,c
  2455  00212C  6E12               	movwf	(??_lcdString+1)^0,c
  2456  00212E  C011  FFF6         	movff	??_lcdString,tblptrl
  2457  002132  C012  FFF7         	movff	??_lcdString+1,tblptrh
  2458  002136                     	if	0	;tblptru may be non-zero
  2459  002136                     	endif
  2460  002136                     	if	0	;tblptru may be non-zero
  2461  002136                     	endif
  2462  002136  0008               	tblrd		*
  2463  002138  50F5               	movf	tablat,w,c
  2464  00213A  EC1A  F012         	call	_lcdChar
  2465  00213E                     
  2466                           ;lcd.c: 61:   i++;
  2467  00213E  4A13               	infsnz	lcdString@i^0,f,c
  2468  002140  2A14               	incf	(lcdString@i+1)^0,f,c
  2469  002142                     l2303:
  2470                           
  2471                           ;lcd.c: 59:  while (msg[i] != 0) {
  2472  002142  5013               	movf	lcdString@i^0,w,c
  2473  002144  240F               	addwf	lcdString@msg^0,w,c
  2474  002146  6E11               	movwf	??_lcdString^0,c
  2475  002148  5014               	movf	(lcdString@i+1)^0,w,c
  2476  00214A  2010               	addwfc	(lcdString@msg+1)^0,w,c
  2477  00214C  6E12               	movwf	(??_lcdString+1)^0,c
  2478  00214E  C011  FFF6         	movff	??_lcdString,tblptrl
  2479  002152  C012  FFF7         	movff	??_lcdString+1,tblptrh
  2480  002156                     	if	0	;tblptru may be non-zero
  2481  002156                     	endif
  2482  002156                     	if	0	;tblptru may be non-zero
  2483  002156                     	endif
  2484  002156  0008               	tblrd		*
  2485  002158  50F5               	movf	tablat,w,c
  2486  00215A  0900               	iorlw	0
  2487  00215C  A4D8               	btfss	status,2,c
  2488  00215E  EFB3  F010         	goto	u2271
  2489  002162  EFB5  F010         	goto	u2270
  2490  002166                     u2271:
  2491  002166  EF91  F010         	goto	l2299
  2492  00216A                     u2270:
  2493  00216A  0012               	return		;funcret
  2494  00216C                     __end_of_lcdString:
  2495                           	callstack 0
  2496                           
  2497 ;; *************** function _lcdPosition *****************
  2498 ;; Defined at:
  2499 ;;		line 44 in file "lcd.c"
  2500 ;; Parameters:    Size  Location     Type
  2501 ;;  line            2   14[COMRAM] int 
  2502 ;;  col             2   16[COMRAM] int 
  2503 ;; Auto vars:     Size  Location     Type
  2504 ;;		None
  2505 ;; Return value:  Size  Location     Type
  2506 ;;                  1    wreg      void 
  2507 ;; Registers used:
  2508 ;;		wreg, status,2, status,0, cstack
  2509 ;; Tracked objects:
  2510 ;;		On entry : 0/0
  2511 ;;		On exit  : 0/0
  2512 ;;		Unchanged: 0/0
  2513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2514 ;;      Params:         4       0       0       0       0       0       0
  2515 ;;      Locals:         0       0       0       0       0       0       0
  2516 ;;      Temps:          0       0       0       0       0       0       0
  2517 ;;      Totals:         4       0       0       0       0       0       0
  2518 ;;Total ram usage:        4 bytes
  2519 ;; Hardware stack levels used: 1
  2520 ;; Hardware stack levels required when called: 5
  2521 ;; This function calls:
  2522 ;;		_lcdCommand
  2523 ;; This function is called by:
  2524 ;;		_main
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527                           
  2528                           	psect	text11
  2529  0022D2                     __ptext11:
  2530                           	callstack 0
  2531  0022D2                     _lcdPosition:
  2532                           	callstack 25
  2533  0022D2                     
  2534                           ;lcd.c: 45:  if (line == 0) {
  2535  0022D2  500F               	movf	lcdPosition@line^0,w,c
  2536  0022D4  1010               	iorwf	(lcdPosition@line+1)^0,w,c
  2537  0022D6  A4D8               	btfss	status,2,c
  2538  0022D8  EF70  F011         	goto	u2251
  2539  0022DC  EF72  F011         	goto	u2250
  2540  0022E0                     u2251:
  2541  0022E0  EF77  F011         	goto	l2293
  2542  0022E4                     u2250:
  2543  0022E4                     
  2544                           ;lcd.c: 46:   lcdCommand(0x80 + (col % 16));
  2545  0022E4  5011               	movf	lcdPosition@col^0,w,c
  2546  0022E6  0B0F               	andlw	15
  2547  0022E8  0F80               	addlw	128
  2548  0022EA  EC29  F012         	call	_lcdCommand
  2549  0022EE                     l2293:
  2550                           
  2551                           ;lcd.c: 48:  if (line == 1) {
  2552  0022EE  040F               	decf	lcdPosition@line^0,w,c
  2553  0022F0  1010               	iorwf	(lcdPosition@line+1)^0,w,c
  2554  0022F2  A4D8               	btfss	status,2,c
  2555  0022F4  EF7E  F011         	goto	u2261
  2556  0022F8  EF80  F011         	goto	u2260
  2557  0022FC                     u2261:
  2558  0022FC  EF85  F011         	goto	l172
  2559  002300                     u2260:
  2560  002300                     
  2561                           ;lcd.c: 49:   lcdCommand(0xC0 + (col % 16));
  2562  002300  5011               	movf	lcdPosition@col^0,w,c
  2563  002302  0B0F               	andlw	15
  2564  002304  0FC0               	addlw	192
  2565  002306  EC29  F012         	call	_lcdCommand
  2566  00230A                     l172:
  2567  00230A  0012               	return		;funcret
  2568  00230C                     __end_of_lcdPosition:
  2569                           	callstack 0
  2570                           
  2571 ;; *************** function _lcdNumber *****************
  2572 ;; Defined at:
  2573 ;;		line 64 in file "lcd.c"
  2574 ;; Parameters:    Size  Location     Type
  2575 ;;  value           2   14[COMRAM] int 
  2576 ;; Auto vars:     Size  Location     Type
  2577 ;;  i               2   16[COMRAM] int 
  2578 ;; Return value:  Size  Location     Type
  2579 ;;                  1    wreg      void 
  2580 ;; Registers used:
  2581 ;;		wreg, status,2, status,0, cstack
  2582 ;; Tracked objects:
  2583 ;;		On entry : 0/0
  2584 ;;		On exit  : 0/0
  2585 ;;		Unchanged: 0/0
  2586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2587 ;;      Params:         2       0       0       0       0       0       0
  2588 ;;      Locals:         2       0       0       0       0       0       0
  2589 ;;      Temps:          0       0       0       0       0       0       0
  2590 ;;      Totals:         4       0       0       0       0       0       0
  2591 ;;Total ram usage:        4 bytes
  2592 ;; Hardware stack levels used: 1
  2593 ;; Hardware stack levels required when called: 5
  2594 ;; This function calls:
  2595 ;;		___awdiv
  2596 ;;		___awmod
  2597 ;;		_lcdChar
  2598 ;; This function is called by:
  2599 ;;		_main
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603                           	psect	text12
  2604  001F2E                     __ptext12:
  2605                           	callstack 0
  2606  001F2E                     _lcdNumber:
  2607                           	callstack 25
  2608  001F2E                     
  2609                           ;lcd.c: 65:  int i = 10;
  2610  001F2E  0E00               	movlw	0
  2611  001F30  6E12               	movwf	(lcdNumber@i+1)^0,c
  2612  001F32  0E0A               	movlw	10
  2613  001F34  6E11               	movwf	lcdNumber@i^0,c
  2614                           
  2615                           ;lcd.c: 66:  while (i > 0) {
  2616  001F36  EFC3  F00F         	goto	l2309
  2617  001F3A                     l2307:
  2618                           
  2619                           ;lcd.c: 67:   lcdChar((value / i) % 10 + 48);
  2620  001F3A  C011  F003         	movff	lcdNumber@i,___awdiv@divisor
  2621  001F3E  C012  F004         	movff	lcdNumber@i+1,___awdiv@divisor+1
  2622  001F42  C00F  F001         	movff	lcdNumber@value,___awdiv@dividend
  2623  001F46  C010  F002         	movff	lcdNumber@value+1,___awdiv@dividend+1
  2624  001F4A  EC49  F00E         	call	___awdiv	;wreg free
  2625  001F4E  C001  F009         	movff	?___awdiv,___awmod@dividend
  2626  001F52  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  2627  001F56  0E00               	movlw	0
  2628  001F58  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2629  001F5A  0E0A               	movlw	10
  2630  001F5C  6E0B               	movwf	___awmod@divisor^0,c
  2631  001F5E  EC05  F00F         	call	___awmod	;wreg free
  2632  001F62  5009               	movf	?___awmod^0,w,c
  2633  001F64  0F30               	addlw	48
  2634  001F66  EC1A  F012         	call	_lcdChar
  2635                           
  2636                           ;lcd.c: 68:   i /= 10;
  2637  001F6A  C011  F001         	movff	lcdNumber@i,___awdiv@dividend
  2638  001F6E  C012  F002         	movff	lcdNumber@i+1,___awdiv@dividend+1
  2639  001F72  0E00               	movlw	0
  2640  001F74  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2641  001F76  0E0A               	movlw	10
  2642  001F78  6E03               	movwf	___awdiv@divisor^0,c
  2643  001F7A  EC49  F00E         	call	___awdiv	;wreg free
  2644  001F7E  C001  F011         	movff	?___awdiv,lcdNumber@i
  2645  001F82  C002  F012         	movff	?___awdiv+1,lcdNumber@i+1
  2646  001F86                     l2309:
  2647                           
  2648                           ;lcd.c: 66:  while (i > 0) {
  2649  001F86  BE12               	btfsc	(lcdNumber@i+1)^0,7,c
  2650  001F88  EFD0  F00F         	goto	u2280
  2651  001F8C  5012               	movf	(lcdNumber@i+1)^0,w,c
  2652  001F8E  E106               	bnz	u2281
  2653  001F90  0411               	decf	lcdNumber@i^0,w,c
  2654  001F92  B0D8               	btfsc	status,0,c
  2655  001F94  EFCE  F00F         	goto	u2281
  2656  001F98  EFD0  F00F         	goto	u2280
  2657  001F9C                     u2281:
  2658  001F9C  EF9D  F00F         	goto	l2307
  2659  001FA0                     u2280:
  2660  001FA0  0012               	return		;funcret
  2661  001FA2                     __end_of_lcdNumber:
  2662                           	callstack 0
  2663                           
  2664 ;; *************** function _lcdChar *****************
  2665 ;; Defined at:
  2666 ;;		line 52 in file "lcd.c"
  2667 ;; Parameters:    Size  Location     Type
  2668 ;;  value           1    wreg     unsigned char 
  2669 ;; Auto vars:     Size  Location     Type
  2670 ;;  value           1   13[COMRAM] unsigned char 
  2671 ;; Return value:  Size  Location     Type
  2672 ;;                  1    wreg      void 
  2673 ;; Registers used:
  2674 ;;		wreg, status,2, status,0, cstack
  2675 ;; Tracked objects:
  2676 ;;		On entry : 0/0
  2677 ;;		On exit  : 0/0
  2678 ;;		Unchanged: 0/0
  2679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2680 ;;      Params:         0       0       0       0       0       0       0
  2681 ;;      Locals:         1       0       0       0       0       0       0
  2682 ;;      Temps:          0       0       0       0       0       0       0
  2683 ;;      Totals:         1       0       0       0       0       0       0
  2684 ;;Total ram usage:        1 bytes
  2685 ;; Hardware stack levels used: 1
  2686 ;; Hardware stack levels required when called: 4
  2687 ;; This function calls:
  2688 ;;		_delayMicro
  2689 ;;		_pushByte
  2690 ;; This function is called by:
  2691 ;;		_lcdString
  2692 ;;		_lcdNumber
  2693 ;; This function uses a non-reentrant model
  2694 ;;
  2695                           
  2696                           	psect	text13
  2697  002434                     __ptext13:
  2698                           	callstack 0
  2699  002434                     _lcdChar:
  2700                           	callstack 25
  2701                           
  2702                           ;incstack = 0
  2703                           ;lcdChar@value stored from wreg
  2704  002434  6E0E               	movwf	lcdChar@value^0,c
  2705  002436                     
  2706                           ;lcd.c: 53:  pushByte(value, 1);
  2707  002436  0E00               	movlw	0
  2708  002438  6E0B               	movwf	(pushByte@rs+1)^0,c
  2709  00243A  0E01               	movlw	1
  2710  00243C  6E0A               	movwf	pushByte@rs^0,c
  2711  00243E  500E               	movf	lcdChar@value^0,w,c
  2712  002440  EC07  F010         	call	_pushByte
  2713  002444                     
  2714                           ;lcd.c: 54:  delayMicro(80);
  2715  002444  0E00               	movlw	0
  2716  002446  6E02               	movwf	(delayMicro@a+1)^0,c
  2717  002448  0E50               	movlw	80
  2718  00244A  6E01               	movwf	delayMicro@a^0,c
  2719  00244C  EC55  F012         	call	_delayMicro	;wreg free
  2720  002450  0012               	return		;funcret
  2721  002452                     __end_of_lcdChar:
  2722                           	callstack 0
  2723                           
  2724 ;; *************** function ___awmod *****************
  2725 ;; Defined at:
  2726 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  2727 ;; Parameters:    Size  Location     Type
  2728 ;;  dividend        2    8[COMRAM] int 
  2729 ;;  divisor         2   10[COMRAM] int 
  2730 ;; Auto vars:     Size  Location     Type
  2731 ;;  sign            1   13[COMRAM] unsigned char 
  2732 ;;  counter         1   12[COMRAM] unsigned char 
  2733 ;; Return value:  Size  Location     Type
  2734 ;;                  2    8[COMRAM] int 
  2735 ;; Registers used:
  2736 ;;		wreg, status,2, status,0
  2737 ;; Tracked objects:
  2738 ;;		On entry : 0/0
  2739 ;;		On exit  : 0/0
  2740 ;;		Unchanged: 0/0
  2741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2742 ;;      Params:         4       0       0       0       0       0       0
  2743 ;;      Locals:         2       0       0       0       0       0       0
  2744 ;;      Temps:          0       0       0       0       0       0       0
  2745 ;;      Totals:         6       0       0       0       0       0       0
  2746 ;;Total ram usage:        6 bytes
  2747 ;; Hardware stack levels used: 1
  2748 ;; This function calls:
  2749 ;;		Nothing
  2750 ;; This function is called by:
  2751 ;;		_main
  2752 ;;		_lcdNumber
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755                           
  2756                           	psect	text14
  2757  001E0A                     __ptext14:
  2758                           	callstack 0
  2759  001E0A                     ___awmod:
  2760                           	callstack 29
  2761  001E0A  0E00               	movlw	0
  2762  001E0C  6E0E               	movwf	___awmod@sign^0,c
  2763  001E0E  BE0A               	btfsc	(___awmod@dividend+1)^0,7,c
  2764  001E10  EF0E  F00F         	goto	u2160
  2765  001E14  EF0C  F00F         	goto	u2161
  2766  001E18                     u2161:
  2767  001E18  EF14  F00F         	goto	l2201
  2768  001E1C                     u2160:
  2769  001E1C  6C09               	negf	___awmod@dividend^0,c
  2770  001E1E  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  2771  001E20  B0D8               	btfsc	status,0,c
  2772  001E22  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  2773  001E24  0E01               	movlw	1
  2774  001E26  6E0E               	movwf	___awmod@sign^0,c
  2775  001E28                     l2201:
  2776  001E28  BE0C               	btfsc	(___awmod@divisor+1)^0,7,c
  2777  001E2A  EF1B  F00F         	goto	u2170
  2778  001E2E  EF19  F00F         	goto	u2171
  2779  001E32                     u2171:
  2780  001E32  EF1F  F00F         	goto	l2205
  2781  001E36                     u2170:
  2782  001E36  6C0B               	negf	___awmod@divisor^0,c
  2783  001E38  1E0C               	comf	(___awmod@divisor+1)^0,f,c
  2784  001E3A  B0D8               	btfsc	status,0,c
  2785  001E3C  2A0C               	incf	(___awmod@divisor+1)^0,f,c
  2786  001E3E                     l2205:
  2787  001E3E  500B               	movf	___awmod@divisor^0,w,c
  2788  001E40  100C               	iorwf	(___awmod@divisor+1)^0,w,c
  2789  001E42  B4D8               	btfsc	status,2,c
  2790  001E44  EF26  F00F         	goto	u2181
  2791  001E48  EF28  F00F         	goto	u2180
  2792  001E4C                     u2181:
  2793  001E4C  EF4C  F00F         	goto	l2221
  2794  001E50                     u2180:
  2795  001E50  0E01               	movlw	1
  2796  001E52  6E0D               	movwf	___awmod@counter^0,c
  2797  001E54  EF30  F00F         	goto	l2211
  2798  001E58                     l2209:
  2799  001E58  90D8               	bcf	status,0,c
  2800  001E5A  360B               	rlcf	___awmod@divisor^0,f,c
  2801  001E5C  360C               	rlcf	(___awmod@divisor+1)^0,f,c
  2802  001E5E  2A0D               	incf	___awmod@counter^0,f,c
  2803  001E60                     l2211:
  2804  001E60  AE0C               	btfss	(___awmod@divisor+1)^0,7,c
  2805  001E62  EF35  F00F         	goto	u2191
  2806  001E66  EF37  F00F         	goto	u2190
  2807  001E6A                     u2191:
  2808  001E6A  EF2C  F00F         	goto	l2209
  2809  001E6E                     u2190:
  2810  001E6E                     l2213:
  2811  001E6E  500B               	movf	___awmod@divisor^0,w,c
  2812  001E70  5C09               	subwf	___awmod@dividend^0,w,c
  2813  001E72  500C               	movf	(___awmod@divisor+1)^0,w,c
  2814  001E74  580A               	subwfb	(___awmod@dividend+1)^0,w,c
  2815  001E76  A0D8               	btfss	status,0,c
  2816  001E78  EF40  F00F         	goto	u2201
  2817  001E7C  EF42  F00F         	goto	u2200
  2818  001E80                     u2201:
  2819  001E80  EF46  F00F         	goto	l2217
  2820  001E84                     u2200:
  2821  001E84  500B               	movf	___awmod@divisor^0,w,c
  2822  001E86  5E09               	subwf	___awmod@dividend^0,f,c
  2823  001E88  500C               	movf	(___awmod@divisor+1)^0,w,c
  2824  001E8A  5A0A               	subwfb	(___awmod@dividend+1)^0,f,c
  2825  001E8C                     l2217:
  2826  001E8C  90D8               	bcf	status,0,c
  2827  001E8E  320C               	rrcf	(___awmod@divisor+1)^0,f,c
  2828  001E90  320B               	rrcf	___awmod@divisor^0,f,c
  2829  001E92  2E0D               	decfsz	___awmod@counter^0,f,c
  2830  001E94  EF37  F00F         	goto	l2213
  2831  001E98                     l2221:
  2832  001E98  500E               	movf	___awmod@sign^0,w,c
  2833  001E9A  B4D8               	btfsc	status,2,c
  2834  001E9C  EF52  F00F         	goto	u2211
  2835  001EA0  EF54  F00F         	goto	u2210
  2836  001EA4                     u2211:
  2837  001EA4  EF58  F00F         	goto	l2225
  2838  001EA8                     u2210:
  2839  001EA8  6C09               	negf	___awmod@dividend^0,c
  2840  001EAA  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  2841  001EAC  B0D8               	btfsc	status,0,c
  2842  001EAE  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  2843  001EB0                     l2225:
  2844  001EB0  C009  F009         	movff	___awmod@dividend,?___awmod
  2845  001EB4  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
  2846  001EB8  0012               	return		;funcret
  2847  001EBA                     __end_of___awmod:
  2848                           	callstack 0
  2849                           
  2850 ;; *************** function ___awdiv *****************
  2851 ;; Defined at:
  2852 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  2853 ;; Parameters:    Size  Location     Type
  2854 ;;  dividend        2    0[COMRAM] int 
  2855 ;;  divisor         2    2[COMRAM] int 
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;  quotient        2    6[COMRAM] int 
  2858 ;;  sign            1    5[COMRAM] unsigned char 
  2859 ;;  counter         1    4[COMRAM] unsigned char 
  2860 ;; Return value:  Size  Location     Type
  2861 ;;                  2    0[COMRAM] int 
  2862 ;; Registers used:
  2863 ;;		wreg, status,2, status,0
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2869 ;;      Params:         4       0       0       0       0       0       0
  2870 ;;      Locals:         4       0       0       0       0       0       0
  2871 ;;      Temps:          0       0       0       0       0       0       0
  2872 ;;      Totals:         8       0       0       0       0       0       0
  2873 ;;Total ram usage:        8 bytes
  2874 ;; Hardware stack levels used: 1
  2875 ;; This function calls:
  2876 ;;		Nothing
  2877 ;; This function is called by:
  2878 ;;		_main
  2879 ;;		_lcdNumber
  2880 ;; This function uses a non-reentrant model
  2881 ;;
  2882                           
  2883                           	psect	text15
  2884  001C92                     __ptext15:
  2885                           	callstack 0
  2886  001C92                     ___awdiv:
  2887                           	callstack 29
  2888  001C92  0E00               	movlw	0
  2889  001C94  6E06               	movwf	___awdiv@sign^0,c
  2890  001C96  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  2891  001C98  EF52  F00E         	goto	u2100
  2892  001C9C  EF50  F00E         	goto	u2101
  2893  001CA0                     u2101:
  2894  001CA0  EF58  F00E         	goto	l2157
  2895  001CA4                     u2100:
  2896  001CA4  6C03               	negf	___awdiv@divisor^0,c
  2897  001CA6  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  2898  001CA8  B0D8               	btfsc	status,0,c
  2899  001CAA  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  2900  001CAC  0E01               	movlw	1
  2901  001CAE  6E06               	movwf	___awdiv@sign^0,c
  2902  001CB0                     l2157:
  2903  001CB0  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  2904  001CB2  EF5F  F00E         	goto	u2110
  2905  001CB6  EF5D  F00E         	goto	u2111
  2906  001CBA                     u2111:
  2907  001CBA  EF65  F00E         	goto	l2163
  2908  001CBE                     u2110:
  2909  001CBE  6C01               	negf	___awdiv@dividend^0,c
  2910  001CC0  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2911  001CC2  B0D8               	btfsc	status,0,c
  2912  001CC4  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  2913  001CC6  0E01               	movlw	1
  2914  001CC8  1A06               	xorwf	___awdiv@sign^0,f,c
  2915  001CCA                     l2163:
  2916  001CCA  0E00               	movlw	0
  2917  001CCC  6E08               	movwf	(___awdiv@quotient+1)^0,c
  2918  001CCE  0E00               	movlw	0
  2919  001CD0  6E07               	movwf	___awdiv@quotient^0,c
  2920  001CD2  5003               	movf	___awdiv@divisor^0,w,c
  2921  001CD4  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  2922  001CD6  B4D8               	btfsc	status,2,c
  2923  001CD8  EF70  F00E         	goto	u2121
  2924  001CDC  EF72  F00E         	goto	u2120
  2925  001CE0                     u2121:
  2926  001CE0  EF9A  F00E         	goto	l2185
  2927  001CE4                     u2120:
  2928  001CE4  0E01               	movlw	1
  2929  001CE6  6E05               	movwf	___awdiv@counter^0,c
  2930  001CE8  EF7A  F00E         	goto	l2171
  2931  001CEC                     l2169:
  2932  001CEC  90D8               	bcf	status,0,c
  2933  001CEE  3603               	rlcf	___awdiv@divisor^0,f,c
  2934  001CF0  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  2935  001CF2  2A05               	incf	___awdiv@counter^0,f,c
  2936  001CF4                     l2171:
  2937  001CF4  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2938  001CF6  EF7F  F00E         	goto	u2131
  2939  001CFA  EF81  F00E         	goto	u2130
  2940  001CFE                     u2131:
  2941  001CFE  EF76  F00E         	goto	l2169
  2942  001D02                     u2130:
  2943  001D02                     l2173:
  2944  001D02  90D8               	bcf	status,0,c
  2945  001D04  3607               	rlcf	___awdiv@quotient^0,f,c
  2946  001D06  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2947  001D08  5003               	movf	___awdiv@divisor^0,w,c
  2948  001D0A  5C01               	subwf	___awdiv@dividend^0,w,c
  2949  001D0C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2950  001D0E  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2951  001D10  A0D8               	btfss	status,0,c
  2952  001D12  EF8D  F00E         	goto	u2141
  2953  001D16  EF8F  F00E         	goto	u2140
  2954  001D1A                     u2141:
  2955  001D1A  EF94  F00E         	goto	l2181
  2956  001D1E                     u2140:
  2957  001D1E  5003               	movf	___awdiv@divisor^0,w,c
  2958  001D20  5E01               	subwf	___awdiv@dividend^0,f,c
  2959  001D22  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2960  001D24  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2961  001D26  8007               	bsf	___awdiv@quotient^0,0,c
  2962  001D28                     l2181:
  2963  001D28  90D8               	bcf	status,0,c
  2964  001D2A  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2965  001D2C  3203               	rrcf	___awdiv@divisor^0,f,c
  2966  001D2E  2E05               	decfsz	___awdiv@counter^0,f,c
  2967  001D30  EF81  F00E         	goto	l2173
  2968  001D34                     l2185:
  2969  001D34  5006               	movf	___awdiv@sign^0,w,c
  2970  001D36  B4D8               	btfsc	status,2,c
  2971  001D38  EFA0  F00E         	goto	u2151
  2972  001D3C  EFA2  F00E         	goto	u2150
  2973  001D40                     u2151:
  2974  001D40  EFA6  F00E         	goto	l2189
  2975  001D44                     u2150:
  2976  001D44  6C07               	negf	___awdiv@quotient^0,c
  2977  001D46  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  2978  001D48  B0D8               	btfsc	status,0,c
  2979  001D4A  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  2980  001D4C                     l2189:
  2981  001D4C  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2982  001D50  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2983  001D54  0012               	return		;funcret
  2984  001D56                     __end_of___awdiv:
  2985                           	callstack 0
  2986                           
  2987 ;; *************** function _lcdInit *****************
  2988 ;; Defined at:
  2989 ;;		line 72 in file "lcd.c"
  2990 ;; Parameters:    Size  Location     Type
  2991 ;;		None
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;		None
  2994 ;; Return value:  Size  Location     Type
  2995 ;;                  1    wreg      void 
  2996 ;; Registers used:
  2997 ;;		wreg, status,2, status,0, cstack
  2998 ;; Tracked objects:
  2999 ;;		On entry : 0/0
  3000 ;;		On exit  : 0/0
  3001 ;;		Unchanged: 0/0
  3002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3003 ;;      Params:         0       0       0       0       0       0       0
  3004 ;;      Locals:         0       0       0       0       0       0       0
  3005 ;;      Temps:          0       0       0       0       0       0       0
  3006 ;;      Totals:         0       0       0       0       0       0       0
  3007 ;;Total ram usage:        0 bytes
  3008 ;; Hardware stack levels used: 1
  3009 ;; Hardware stack levels required when called: 5
  3010 ;; This function calls:
  3011 ;;		_delayMicro
  3012 ;;		_delayMili
  3013 ;;		_lcdCommand
  3014 ;;		_pinMode
  3015 ;;		_pushNibble
  3016 ;;		_soInit
  3017 ;; This function is called by:
  3018 ;;		_main
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021                           
  3022                           	psect	text16
  3023  001D56                     __ptext16:
  3024                           	callstack 0
  3025  001D56                     _lcdInit:
  3026                           	callstack 25
  3027  001D56                     
  3028                           ;lcd.c: 73:  pinMode(PIN_D4, 0);
  3029  001D56  0E00               	movlw	0
  3030  001D58  6E02               	movwf	(pinMode@pin+1)^0,c
  3031  001D5A  0E1C               	movlw	28
  3032  001D5C  6E01               	movwf	pinMode@pin^0,c
  3033  001D5E  0E00               	movlw	0
  3034  001D60  6E04               	movwf	(pinMode@type+1)^0,c
  3035  001D62  0E00               	movlw	0
  3036  001D64  6E03               	movwf	pinMode@type^0,c
  3037  001D66  EC39  F009         	call	_pinMode	;wreg free
  3038                           
  3039                           ;lcd.c: 74:  pinMode(PIN_D5, 0);
  3040  001D6A  0E00               	movlw	0
  3041  001D6C  6E02               	movwf	(pinMode@pin+1)^0,c
  3042  001D6E  0E1D               	movlw	29
  3043  001D70  6E01               	movwf	pinMode@pin^0,c
  3044  001D72  0E00               	movlw	0
  3045  001D74  6E04               	movwf	(pinMode@type+1)^0,c
  3046  001D76  0E00               	movlw	0
  3047  001D78  6E03               	movwf	pinMode@type^0,c
  3048  001D7A  EC39  F009         	call	_pinMode	;wreg free
  3049                           
  3050                           ;lcd.c: 75:  soInit();
  3051  001D7E  EC4A  F011         	call	_soInit	;wreg free
  3052                           
  3053                           ;lcd.c: 76:  delayMili(15);
  3054  001D82  0E00               	movlw	0
  3055  001D84  6E02               	movwf	(delayMili@a+1)^0,c
  3056  001D86  0E0F               	movlw	15
  3057  001D88  6E01               	movwf	delayMili@a^0,c
  3058  001D8A  EC9F  F011         	call	_delayMili	;wreg free
  3059                           
  3060                           ;lcd.c: 78:  pushNibble(0x03, 0);
  3061  001D8E  0E00               	movlw	0
  3062  001D90  6E0B               	movwf	(pushNibble@rs+1)^0,c
  3063  001D92  0E00               	movlw	0
  3064  001D94  6E0A               	movwf	pushNibble@rs^0,c
  3065  001D96  0E03               	movlw	3
  3066  001D98  EC07  F012         	call	_pushNibble
  3067                           
  3068                           ;lcd.c: 79:  delayMili(5);
  3069  001D9C  0E00               	movlw	0
  3070  001D9E  6E02               	movwf	(delayMili@a+1)^0,c
  3071  001DA0  0E05               	movlw	5
  3072  001DA2  6E01               	movwf	delayMili@a^0,c
  3073  001DA4  EC9F  F011         	call	_delayMili	;wreg free
  3074                           
  3075                           ;lcd.c: 80:  pushNibble(0x03, 0);
  3076  001DA8  0E00               	movlw	0
  3077  001DAA  6E0B               	movwf	(pushNibble@rs+1)^0,c
  3078  001DAC  0E00               	movlw	0
  3079  001DAE  6E0A               	movwf	pushNibble@rs^0,c
  3080  001DB0  0E03               	movlw	3
  3081  001DB2  EC07  F012         	call	_pushNibble
  3082  001DB6                     
  3083                           ;lcd.c: 81:  delayMicro(160);
  3084  001DB6  0E00               	movlw	0
  3085  001DB8  6E02               	movwf	(delayMicro@a+1)^0,c
  3086  001DBA  0EA0               	movlw	160
  3087  001DBC  6E01               	movwf	delayMicro@a^0,c
  3088  001DBE  EC55  F012         	call	_delayMicro	;wreg free
  3089  001DC2                     
  3090                           ;lcd.c: 82:  pushNibble(0x03, 0);
  3091  001DC2  0E00               	movlw	0
  3092  001DC4  6E0B               	movwf	(pushNibble@rs+1)^0,c
  3093  001DC6  0E00               	movlw	0
  3094  001DC8  6E0A               	movwf	pushNibble@rs^0,c
  3095  001DCA  0E03               	movlw	3
  3096  001DCC  EC07  F012         	call	_pushNibble
  3097                           
  3098                           ;lcd.c: 83:  delayMicro(160);
  3099  001DD0  0E00               	movlw	0
  3100  001DD2  6E02               	movwf	(delayMicro@a+1)^0,c
  3101  001DD4  0EA0               	movlw	160
  3102  001DD6  6E01               	movwf	delayMicro@a^0,c
  3103  001DD8  EC55  F012         	call	_delayMicro	;wreg free
  3104  001DDC                     
  3105                           ;lcd.c: 85:  pushNibble(0x02, 0);
  3106  001DDC  0E00               	movlw	0
  3107  001DDE  6E0B               	movwf	(pushNibble@rs+1)^0,c
  3108  001DE0  0E00               	movlw	0
  3109  001DE2  6E0A               	movwf	pushNibble@rs^0,c
  3110  001DE4  0E02               	movlw	2
  3111  001DE6  EC07  F012         	call	_pushNibble
  3112  001DEA                     
  3113                           ;lcd.c: 86:  delayMili(10);
  3114  001DEA  0E00               	movlw	0
  3115  001DEC  6E02               	movwf	(delayMili@a+1)^0,c
  3116  001DEE  0E0A               	movlw	10
  3117  001DF0  6E01               	movwf	delayMili@a^0,c
  3118  001DF2  EC9F  F011         	call	_delayMili	;wreg free
  3119  001DF6                     
  3120                           ;lcd.c: 88:  lcdCommand(0x28);
  3121  001DF6  0E28               	movlw	40
  3122  001DF8  EC29  F012         	call	_lcdCommand
  3123  001DFC                     
  3124                           ;lcd.c: 89:  lcdCommand(0x08 + 0x04);
  3125  001DFC  0E0C               	movlw	12
  3126  001DFE  EC29  F012         	call	_lcdCommand
  3127  001E02                     
  3128                           ;lcd.c: 90:  lcdCommand(0x01);
  3129  001E02  0E01               	movlw	1
  3130  001E04  EC29  F012         	call	_lcdCommand
  3131  001E08  0012               	return		;funcret
  3132  001E0A                     __end_of_lcdInit:
  3133                           	callstack 0
  3134                           
  3135 ;; *************** function _pushNibble *****************
  3136 ;; Defined at:
  3137 ;;		line 25 in file "lcd.c"
  3138 ;; Parameters:    Size  Location     Type
  3139 ;;  value           1    wreg     unsigned char 
  3140 ;;  rs              2    9[COMRAM] int 
  3141 ;; Auto vars:     Size  Location     Type
  3142 ;;  value           1   11[COMRAM] unsigned char 
  3143 ;; Return value:  Size  Location     Type
  3144 ;;                  1    wreg      void 
  3145 ;; Registers used:
  3146 ;;		wreg, status,2, status,0, cstack
  3147 ;; Tracked objects:
  3148 ;;		On entry : 0/0
  3149 ;;		On exit  : 0/0
  3150 ;;		Unchanged: 0/0
  3151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3152 ;;      Params:         2       0       0       0       0       0       0
  3153 ;;      Locals:         1       0       0       0       0       0       0
  3154 ;;      Temps:          0       0       0       0       0       0       0
  3155 ;;      Totals:         3       0       0       0       0       0       0
  3156 ;;Total ram usage:        3 bytes
  3157 ;; Hardware stack levels used: 1
  3158 ;; Hardware stack levels required when called: 3
  3159 ;; This function calls:
  3160 ;;		_digitalWrite
  3161 ;;		_pulseEnablePin
  3162 ;;		_soWrite
  3163 ;; This function is called by:
  3164 ;;		_lcdInit
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           
  3168                           	psect	text17
  3169  00240E                     __ptext17:
  3170                           	callstack 0
  3171  00240E                     _pushNibble:
  3172                           	callstack 26
  3173                           
  3174                           ;incstack = 0
  3175                           ;pushNibble@value stored from wreg
  3176  00240E  6E0C               	movwf	pushNibble@value^0,c
  3177  002410                     
  3178                           ;lcd.c: 26:  soWrite(value);
  3179  002410  C00C  F007         	movff	pushNibble@value,soWrite@value
  3180  002414  6A08               	clrf	(soWrite@value+1)^0,c
  3181  002416  ECDE  F010         	call	_soWrite	;wreg free
  3182                           
  3183                           ;lcd.c: 27:  digitalWrite(PIN_D5, rs);
  3184  00241A  0E00               	movlw	0
  3185  00241C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3186  00241E  0E1D               	movlw	29
  3187  002420  6E01               	movwf	digitalWrite@pin^0,c
  3188  002422  C00A  F003         	movff	pushNibble@rs,digitalWrite@value
  3189  002426  C00B  F004         	movff	pushNibble@rs+1,digitalWrite@value+1
  3190  00242A  EC12  F008         	call	_digitalWrite	;wreg free
  3191                           
  3192                           ;lcd.c: 28:  pulseEnablePin();
  3193  00242E  EC29  F011         	call	_pulseEnablePin	;wreg free
  3194  002432  0012               	return		;funcret
  3195  002434                     __end_of_pushNibble:
  3196                           	callstack 0
  3197                           
  3198 ;; *************** function _lcdCommand *****************
  3199 ;; Defined at:
  3200 ;;		line 40 in file "lcd.c"
  3201 ;; Parameters:    Size  Location     Type
  3202 ;;  value           1    wreg     unsigned char 
  3203 ;; Auto vars:     Size  Location     Type
  3204 ;;  value           1   13[COMRAM] unsigned char 
  3205 ;; Return value:  Size  Location     Type
  3206 ;;                  1    wreg      void 
  3207 ;; Registers used:
  3208 ;;		wreg, status,2, status,0, cstack
  3209 ;; Tracked objects:
  3210 ;;		On entry : 0/0
  3211 ;;		On exit  : 0/0
  3212 ;;		Unchanged: 0/0
  3213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3214 ;;      Params:         0       0       0       0       0       0       0
  3215 ;;      Locals:         1       0       0       0       0       0       0
  3216 ;;      Temps:          0       0       0       0       0       0       0
  3217 ;;      Totals:         1       0       0       0       0       0       0
  3218 ;;Total ram usage:        1 bytes
  3219 ;; Hardware stack levels used: 1
  3220 ;; Hardware stack levels required when called: 4
  3221 ;; This function calls:
  3222 ;;		_delayMili
  3223 ;;		_pushByte
  3224 ;; This function is called by:
  3225 ;;		_main
  3226 ;;		_lcdPosition
  3227 ;;		_lcdInit
  3228 ;; This function uses a non-reentrant model
  3229 ;;
  3230                           
  3231                           	psect	text18
  3232  002452                     __ptext18:
  3233                           	callstack 0
  3234  002452                     _lcdCommand:
  3235                           	callstack 25
  3236                           
  3237                           ;incstack = 0
  3238                           ;lcdCommand@value stored from wreg
  3239  002452  6E0E               	movwf	lcdCommand@value^0,c
  3240  002454                     
  3241                           ;lcd.c: 41:  pushByte(value, 0);
  3242  002454  0E00               	movlw	0
  3243  002456  6E0B               	movwf	(pushByte@rs+1)^0,c
  3244  002458  0E00               	movlw	0
  3245  00245A  6E0A               	movwf	pushByte@rs^0,c
  3246  00245C  500E               	movf	lcdCommand@value^0,w,c
  3247  00245E  EC07  F010         	call	_pushByte
  3248                           
  3249                           ;lcd.c: 42:  delayMili(2);
  3250  002462  0E00               	movlw	0
  3251  002464  6E02               	movwf	(delayMili@a+1)^0,c
  3252  002466  0E02               	movlw	2
  3253  002468  6E01               	movwf	delayMili@a^0,c
  3254  00246A  EC9F  F011         	call	_delayMili	;wreg free
  3255  00246E  0012               	return		;funcret
  3256  002470                     __end_of_lcdCommand:
  3257                           	callstack 0
  3258                           
  3259 ;; *************** function _pushByte *****************
  3260 ;; Defined at:
  3261 ;;		line 31 in file "lcd.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;  value           1    wreg     unsigned char 
  3264 ;;  rs              2    9[COMRAM] int 
  3265 ;; Auto vars:     Size  Location     Type
  3266 ;;  value           1   12[COMRAM] unsigned char 
  3267 ;; Return value:  Size  Location     Type
  3268 ;;                  1    wreg      void 
  3269 ;; Registers used:
  3270 ;;		wreg, status,2, status,0, cstack
  3271 ;; Tracked objects:
  3272 ;;		On entry : 0/0
  3273 ;;		On exit  : 0/0
  3274 ;;		Unchanged: 0/0
  3275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3276 ;;      Params:         2       0       0       0       0       0       0
  3277 ;;      Locals:         1       0       0       0       0       0       0
  3278 ;;      Temps:          1       0       0       0       0       0       0
  3279 ;;      Totals:         4       0       0       0       0       0       0
  3280 ;;Total ram usage:        4 bytes
  3281 ;; Hardware stack levels used: 1
  3282 ;; Hardware stack levels required when called: 3
  3283 ;; This function calls:
  3284 ;;		_digitalWrite
  3285 ;;		_pulseEnablePin
  3286 ;;		_soWrite
  3287 ;; This function is called by:
  3288 ;;		_lcdCommand
  3289 ;;		_lcdChar
  3290 ;; This function uses a non-reentrant model
  3291 ;;
  3292                           
  3293                           	psect	text19
  3294  00200E                     __ptext19:
  3295                           	callstack 0
  3296  00200E                     _pushByte:
  3297                           	callstack 25
  3298                           
  3299                           ;incstack = 0
  3300                           ;pushByte@value stored from wreg
  3301  00200E  6E0D               	movwf	pushByte@value^0,c
  3302  002010                     
  3303                           ;lcd.c: 32:  soWrite(value >> 4);
  3304  002010  C00D  F00C         	movff	pushByte@value,??_pushByte
  3305  002014  3A0C               	swapf	??_pushByte^0,f,c
  3306  002016  0E0F               	movlw	15
  3307  002018  160C               	andwf	??_pushByte^0,f,c
  3308  00201A  500C               	movf	??_pushByte^0,w,c
  3309  00201C  6E07               	movwf	soWrite@value^0,c
  3310  00201E  6A08               	clrf	(soWrite@value+1)^0,c
  3311  002020  ECDE  F010         	call	_soWrite	;wreg free
  3312                           
  3313                           ;lcd.c: 33:  digitalWrite(PIN_D5, rs);
  3314  002024  0E00               	movlw	0
  3315  002026  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3316  002028  0E1D               	movlw	29
  3317  00202A  6E01               	movwf	digitalWrite@pin^0,c
  3318  00202C  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  3319  002030  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  3320  002034  EC12  F008         	call	_digitalWrite	;wreg free
  3321                           
  3322                           ;lcd.c: 34:  pulseEnablePin();
  3323  002038  EC29  F011         	call	_pulseEnablePin	;wreg free
  3324                           
  3325                           ;lcd.c: 36:  soWrite(value & 0x0F);
  3326  00203C  C00D  F00C         	movff	pushByte@value,??_pushByte
  3327  002040  0E0F               	movlw	15
  3328  002042  160C               	andwf	??_pushByte^0,f,c
  3329  002044  500C               	movf	??_pushByte^0,w,c
  3330  002046  6E07               	movwf	soWrite@value^0,c
  3331  002048  6A08               	clrf	(soWrite@value+1)^0,c
  3332  00204A  ECDE  F010         	call	_soWrite	;wreg free
  3333                           
  3334                           ;lcd.c: 37:  digitalWrite(PIN_D5, rs);
  3335  00204E  0E00               	movlw	0
  3336  002050  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3337  002052  0E1D               	movlw	29
  3338  002054  6E01               	movwf	digitalWrite@pin^0,c
  3339  002056  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  3340  00205A  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  3341  00205E  EC12  F008         	call	_digitalWrite	;wreg free
  3342                           
  3343                           ;lcd.c: 38:  pulseEnablePin();
  3344  002062  EC29  F011         	call	_pulseEnablePin	;wreg free
  3345  002066  0012               	return		;funcret
  3346  002068                     __end_of_pushByte:
  3347                           	callstack 0
  3348                           
  3349 ;; *************** function _pulseEnablePin *****************
  3350 ;; Defined at:
  3351 ;;		line 18 in file "lcd.c"
  3352 ;; Parameters:    Size  Location     Type
  3353 ;;		None
  3354 ;; Auto vars:     Size  Location     Type
  3355 ;;		None
  3356 ;; Return value:  Size  Location     Type
  3357 ;;                  1    wreg      void 
  3358 ;; Registers used:
  3359 ;;		wreg, status,2, status,0, cstack
  3360 ;; Tracked objects:
  3361 ;;		On entry : 0/0
  3362 ;;		On exit  : 0/0
  3363 ;;		Unchanged: 0/0
  3364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3365 ;;      Params:         0       0       0       0       0       0       0
  3366 ;;      Locals:         0       0       0       0       0       0       0
  3367 ;;      Temps:          0       0       0       0       0       0       0
  3368 ;;      Totals:         0       0       0       0       0       0       0
  3369 ;;Total ram usage:        0 bytes
  3370 ;; Hardware stack levels used: 1
  3371 ;; Hardware stack levels required when called: 1
  3372 ;; This function calls:
  3373 ;;		_delayMicro
  3374 ;;		_digitalWrite
  3375 ;; This function is called by:
  3376 ;;		_pushNibble
  3377 ;;		_pushByte
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           	psect	text20
  3382  002252                     __ptext20:
  3383                           	callstack 0
  3384  002252                     _pulseEnablePin:
  3385                           	callstack 26
  3386  002252                     
  3387                           ;lcd.c: 19:  digitalWrite(PIN_D4, 1);
  3388  002252  0E00               	movlw	0
  3389  002254  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3390  002256  0E1C               	movlw	28
  3391  002258  6E01               	movwf	digitalWrite@pin^0,c
  3392  00225A  0E00               	movlw	0
  3393  00225C  6E04               	movwf	(digitalWrite@value+1)^0,c
  3394  00225E  0E01               	movlw	1
  3395  002260  6E03               	movwf	digitalWrite@value^0,c
  3396  002262  EC12  F008         	call	_digitalWrite	;wreg free
  3397  002266                     
  3398                           ;lcd.c: 20:  delayMicro(5);
  3399  002266  0E00               	movlw	0
  3400  002268  6E02               	movwf	(delayMicro@a+1)^0,c
  3401  00226A  0E05               	movlw	5
  3402  00226C  6E01               	movwf	delayMicro@a^0,c
  3403  00226E  EC55  F012         	call	_delayMicro	;wreg free
  3404  002272                     
  3405                           ;lcd.c: 21:  digitalWrite(PIN_D4, 0);
  3406  002272  0E00               	movlw	0
  3407  002274  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3408  002276  0E1C               	movlw	28
  3409  002278  6E01               	movwf	digitalWrite@pin^0,c
  3410  00227A  0E00               	movlw	0
  3411  00227C  6E04               	movwf	(digitalWrite@value+1)^0,c
  3412  00227E  0E00               	movlw	0
  3413  002280  6E03               	movwf	digitalWrite@value^0,c
  3414  002282  EC12  F008         	call	_digitalWrite	;wreg free
  3415                           
  3416                           ;lcd.c: 22:  delayMicro(5);
  3417  002286  0E00               	movlw	0
  3418  002288  6E02               	movwf	(delayMicro@a+1)^0,c
  3419  00228A  0E05               	movlw	5
  3420  00228C  6E01               	movwf	delayMicro@a^0,c
  3421  00228E  EC55  F012         	call	_delayMicro	;wreg free
  3422  002292  0012               	return		;funcret
  3423  002294                     __end_of_pulseEnablePin:
  3424                           	callstack 0
  3425                           
  3426 ;; *************** function _delayMicro *****************
  3427 ;; Defined at:
  3428 ;;		line 5 in file "lcd.c"
  3429 ;; Parameters:    Size  Location     Type
  3430 ;;  a               2    0[COMRAM] int 
  3431 ;; Auto vars:     Size  Location     Type
  3432 ;;  i               2    0        volatile int 
  3433 ;; Return value:  Size  Location     Type
  3434 ;;                  1    wreg      void 
  3435 ;; Registers used:
  3436 ;;		None
  3437 ;; Tracked objects:
  3438 ;;		On entry : 0/0
  3439 ;;		On exit  : 0/0
  3440 ;;		Unchanged: 0/0
  3441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3442 ;;      Params:         2       0       0       0       0       0       0
  3443 ;;      Locals:         0       0       0       0       0       0       0
  3444 ;;      Temps:          0       0       0       0       0       0       0
  3445 ;;      Totals:         2       0       0       0       0       0       0
  3446 ;;Total ram usage:        2 bytes
  3447 ;; Hardware stack levels used: 1
  3448 ;; This function calls:
  3449 ;;		Nothing
  3450 ;; This function is called by:
  3451 ;;		_pulseEnablePin
  3452 ;;		_lcdChar
  3453 ;;		_lcdInit
  3454 ;; This function uses a non-reentrant model
  3455 ;;
  3456                           
  3457                           	psect	text21
  3458  0024AA                     __ptext21:
  3459                           	callstack 0
  3460  0024AA                     _delayMicro:
  3461                           	callstack 26
  3462  0024AA  0012               	return		;funcret
  3463  0024AC                     __end_of_delayMicro:
  3464                           	callstack 0
  3465                           
  3466 ;; *************** function _delayMili *****************
  3467 ;; Defined at:
  3468 ;;		line 10 in file "lcd.c"
  3469 ;; Parameters:    Size  Location     Type
  3470 ;;  a               2    0[COMRAM] int 
  3471 ;; Auto vars:     Size  Location     Type
  3472 ;;  i               2    3[COMRAM] volatile int 
  3473 ;; Return value:  Size  Location     Type
  3474 ;;                  1    wreg      void 
  3475 ;; Registers used:
  3476 ;;		wreg, status,2, status,0
  3477 ;; Tracked objects:
  3478 ;;		On entry : 0/0
  3479 ;;		On exit  : 0/0
  3480 ;;		Unchanged: 0/0
  3481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3482 ;;      Params:         2       0       0       0       0       0       0
  3483 ;;      Locals:         2       0       0       0       0       0       0
  3484 ;;      Temps:          1       0       0       0       0       0       0
  3485 ;;      Totals:         5       0       0       0       0       0       0
  3486 ;;Total ram usage:        5 bytes
  3487 ;; Hardware stack levels used: 1
  3488 ;; This function calls:
  3489 ;;		Nothing
  3490 ;; This function is called by:
  3491 ;;		_lcdCommand
  3492 ;;		_lcdInit
  3493 ;; This function uses a non-reentrant model
  3494 ;;
  3495                           
  3496                           	psect	text22
  3497  00233E                     __ptext22:
  3498                           	callstack 0
  3499  00233E                     _delayMili:
  3500                           	callstack 28
  3501  00233E                     
  3502                           ;lcd.c: 11:  volatile int i;;lcd.c: 12:  for (i = 0; i < a; i++) {
  3503  00233E  0E00               	movlw	0
  3504  002340  6E05               	movwf	(delayMili@i+1)^0,c	;volatile
  3505  002342  0E00               	movlw	0
  3506  002344  6E04               	movwf	delayMili@i^0,c	;volatile
  3507  002346  EFA7  F011         	goto	l2045
  3508  00234A                     l2043:
  3509                           
  3510                           ;lcd.c: 15:  }
  3511  00234A  4A04               	infsnz	delayMili@i^0,f,c	;volatile
  3512  00234C  2A05               	incf	(delayMili@i+1)^0,f,c	;volatile
  3513  00234E                     l2045:
  3514  00234E  5001               	movf	delayMili@a^0,w,c
  3515  002350  5C04               	subwf	delayMili@i^0,w,c	;volatile
  3516  002352  5005               	movf	(delayMili@i+1)^0,w,c	;volatile
  3517  002354  0A80               	xorlw	128
  3518  002356  6E03               	movwf	??_delayMili^0,c
  3519  002358  5002               	movf	(delayMili@a+1)^0,w,c
  3520  00235A  0A80               	xorlw	128
  3521  00235C  5803               	subwfb	??_delayMili^0,w,c
  3522  00235E  A0D8               	btfss	status,0,c
  3523  002360  EFB4  F011         	goto	u1931
  3524  002364  EFB6  F011         	goto	u1930
  3525  002368                     u1931:
  3526  002368  EFA5  F011         	goto	l2043
  3527  00236C                     u1930:
  3528  00236C  0012               	return		;funcret
  3529  00236E                     __end_of_delayMili:
  3530                           	callstack 0
  3531                           
  3532 ;; *************** function _kpRead *****************
  3533 ;; Defined at:
  3534 ;;		line 14 in file "keypad.c"
  3535 ;; Parameters:    Size  Location     Type
  3536 ;;		None
  3537 ;; Auto vars:     Size  Location     Type
  3538 ;;		None
  3539 ;; Return value:  Size  Location     Type
  3540 ;;                  2    0[COMRAM] unsigned int 
  3541 ;; Registers used:
  3542 ;;		None
  3543 ;; Tracked objects:
  3544 ;;		On entry : 0/0
  3545 ;;		On exit  : 0/0
  3546 ;;		Unchanged: 0/0
  3547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3548 ;;      Params:         2       0       0       0       0       0       0
  3549 ;;      Locals:         0       0       0       0       0       0       0
  3550 ;;      Temps:          0       0       0       0       0       0       0
  3551 ;;      Totals:         2       0       0       0       0       0       0
  3552 ;;Total ram usage:        2 bytes
  3553 ;; Hardware stack levels used: 1
  3554 ;; This function calls:
  3555 ;;		Nothing
  3556 ;; This function is called by:
  3557 ;;		_main
  3558 ;; This function uses a non-reentrant model
  3559 ;;
  3560                           
  3561                           	psect	text23
  3562  0024A0                     __ptext23:
  3563                           	callstack 0
  3564  0024A0                     _kpRead:
  3565                           	callstack 30
  3566  0024A0                     
  3567                           ;keypad.c: 15:     return keys;
  3568  0024A0  C048  F001         	movff	_keys,?_kpRead
  3569  0024A4  C049  F002         	movff	_keys+1,?_kpRead+1
  3570  0024A8  0012               	return		;funcret
  3571  0024AA                     __end_of_kpRead:
  3572                           	callstack 0
  3573                           
  3574 ;; *************** function _kpInit *****************
  3575 ;; Defined at:
  3576 ;;		line 54 in file "keypad.c"
  3577 ;; Parameters:    Size  Location     Type
  3578 ;;		None
  3579 ;; Auto vars:     Size  Location     Type
  3580 ;;		None
  3581 ;; Return value:  Size  Location     Type
  3582 ;;                  1    wreg      void 
  3583 ;; Registers used:
  3584 ;;		wreg, status,2, status,0, cstack
  3585 ;; Tracked objects:
  3586 ;;		On entry : 0/0
  3587 ;;		On exit  : 0/0
  3588 ;;		Unchanged: 0/0
  3589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3590 ;;      Params:         0       0       0       0       0       0       0
  3591 ;;      Locals:         0       0       0       0       0       0       0
  3592 ;;      Temps:          0       0       0       0       0       0       0
  3593 ;;      Totals:         0       0       0       0       0       0       0
  3594 ;;Total ram usage:        0 bytes
  3595 ;; Hardware stack levels used: 1
  3596 ;; Hardware stack levels required when called: 2
  3597 ;; This function calls:
  3598 ;;		_pinMode
  3599 ;;		_soInit
  3600 ;; This function is called by:
  3601 ;;		_main
  3602 ;; This function uses a non-reentrant model
  3603 ;;
  3604                           
  3605                           	psect	text24
  3606  00230C                     __ptext24:
  3607                           	callstack 0
  3608  00230C                     _kpInit:
  3609                           	callstack 28
  3610  00230C                     
  3611                           ;keypad.c: 55:   soInit();
  3612  00230C  EC4A  F011         	call	_soInit	;wreg free
  3613                           
  3614                           ;keypad.c: 56:   pinMode(PIN_B2, 1);
  3615  002310  0E00               	movlw	0
  3616  002312  6E02               	movwf	(pinMode@pin+1)^0,c
  3617  002314  0E0A               	movlw	10
  3618  002316  6E01               	movwf	pinMode@pin^0,c
  3619  002318  0E00               	movlw	0
  3620  00231A  6E04               	movwf	(pinMode@type+1)^0,c
  3621  00231C  0E01               	movlw	1
  3622  00231E  6E03               	movwf	pinMode@type^0,c
  3623  002320  EC39  F009         	call	_pinMode	;wreg free
  3624                           
  3625                           ;keypad.c: 57:   pinMode(PIN_B1, 1);
  3626  002324  0E00               	movlw	0
  3627  002326  6E02               	movwf	(pinMode@pin+1)^0,c
  3628  002328  0E09               	movlw	9
  3629  00232A  6E01               	movwf	pinMode@pin^0,c
  3630  00232C  0E00               	movlw	0
  3631  00232E  6E04               	movwf	(pinMode@type+1)^0,c
  3632  002330  0E01               	movlw	1
  3633  002332  6E03               	movwf	pinMode@type^0,c
  3634  002334  EC39  F009         	call	_pinMode	;wreg free
  3635  002338                     
  3636                           ;keypad.c: 58:   ADCON1 = 0b00001100;
  3637  002338  0E0C               	movlw	12
  3638  00233A  6EC1               	movwf	193,c	;volatile
  3639  00233C  0012               	return		;funcret
  3640  00233E                     __end_of_kpInit:
  3641                           	callstack 0
  3642                           
  3643 ;; *************** function _soInit *****************
  3644 ;; Defined at:
  3645 ;;		line 3 in file "so.c"
  3646 ;; Parameters:    Size  Location     Type
  3647 ;;		None
  3648 ;; Auto vars:     Size  Location     Type
  3649 ;;		None
  3650 ;; Return value:  Size  Location     Type
  3651 ;;                  1    wreg      void 
  3652 ;; Registers used:
  3653 ;;		wreg, status,2, status,0, cstack
  3654 ;; Tracked objects:
  3655 ;;		On entry : 0/0
  3656 ;;		On exit  : 0/0
  3657 ;;		Unchanged: 0/0
  3658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3659 ;;      Params:         0       0       0       0       0       0       0
  3660 ;;      Locals:         0       0       0       0       0       0       0
  3661 ;;      Temps:          0       0       0       0       0       0       0
  3662 ;;      Totals:         0       0       0       0       0       0       0
  3663 ;;Total ram usage:        0 bytes
  3664 ;; Hardware stack levels used: 1
  3665 ;; Hardware stack levels required when called: 1
  3666 ;; This function calls:
  3667 ;;		_pinMode
  3668 ;; This function is called by:
  3669 ;;		_kpInit
  3670 ;;		_lcdInit
  3671 ;;		_ssdInit
  3672 ;; This function uses a non-reentrant model
  3673 ;;
  3674                           
  3675                           	psect	text25
  3676  002294                     __ptext25:
  3677                           	callstack 0
  3678  002294                     _soInit:
  3679                           	callstack 28
  3680  002294                     
  3681                           ;so.c: 4:  pinMode(PIN_D7, 0);
  3682  002294  0E00               	movlw	0
  3683  002296  6E02               	movwf	(pinMode@pin+1)^0,c
  3684  002298  0E1F               	movlw	31
  3685  00229A  6E01               	movwf	pinMode@pin^0,c
  3686  00229C  0E00               	movlw	0
  3687  00229E  6E04               	movwf	(pinMode@type+1)^0,c
  3688  0022A0  0E00               	movlw	0
  3689  0022A2  6E03               	movwf	pinMode@type^0,c
  3690  0022A4  EC39  F009         	call	_pinMode	;wreg free
  3691                           
  3692                           ;so.c: 5:  pinMode(PIN_B0, 0);
  3693  0022A8  0E00               	movlw	0
  3694  0022AA  6E02               	movwf	(pinMode@pin+1)^0,c
  3695  0022AC  0E08               	movlw	8
  3696  0022AE  6E01               	movwf	pinMode@pin^0,c
  3697  0022B0  0E00               	movlw	0
  3698  0022B2  6E04               	movwf	(pinMode@type+1)^0,c
  3699  0022B4  0E00               	movlw	0
  3700  0022B6  6E03               	movwf	pinMode@type^0,c
  3701  0022B8  EC39  F009         	call	_pinMode	;wreg free
  3702                           
  3703                           ;so.c: 6:  pinMode(PIN_D6, 0);
  3704  0022BC  0E00               	movlw	0
  3705  0022BE  6E02               	movwf	(pinMode@pin+1)^0,c
  3706  0022C0  0E1E               	movlw	30
  3707  0022C2  6E01               	movwf	pinMode@pin^0,c
  3708  0022C4  0E00               	movlw	0
  3709  0022C6  6E04               	movwf	(pinMode@type+1)^0,c
  3710  0022C8  0E00               	movlw	0
  3711  0022CA  6E03               	movwf	pinMode@type^0,c
  3712  0022CC  EC39  F009         	call	_pinMode	;wreg free
  3713  0022D0  0012               	return		;funcret
  3714  0022D2                     __end_of_soInit:
  3715                           	callstack 0
  3716                           
  3717 ;; *************** function _kpDebounce *****************
  3718 ;; Defined at:
  3719 ;;		line 27 in file "keypad.c"
  3720 ;; Parameters:    Size  Location     Type
  3721 ;;		None
  3722 ;; Auto vars:     Size  Location     Type
  3723 ;;  i               2   12[COMRAM] int 
  3724 ;; Return value:  Size  Location     Type
  3725 ;;                  1    wreg      void 
  3726 ;; Registers used:
  3727 ;;		wreg, status,2, status,0, cstack
  3728 ;; Tracked objects:
  3729 ;;		On entry : 0/0
  3730 ;;		On exit  : 0/0
  3731 ;;		Unchanged: 0/0
  3732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3733 ;;      Params:         0       0       0       0       0       0       0
  3734 ;;      Locals:         2       0       0       0       0       0       0
  3735 ;;      Temps:          3       0       0       0       0       0       0
  3736 ;;      Totals:         5       0       0       0       0       0       0
  3737 ;;Total ram usage:        5 bytes
  3738 ;; Hardware stack levels used: 1
  3739 ;; Hardware stack levels required when called: 3
  3740 ;; This function calls:
  3741 ;;		_digitalRead
  3742 ;;		_soWrite
  3743 ;; This function is called by:
  3744 ;;		_main
  3745 ;; This function uses a non-reentrant model
  3746 ;;
  3747                           
  3748                           	psect	text26
  3749  00194A                     __ptext26:
  3750                           	callstack 0
  3751  00194A                     _kpDebounce:
  3752                           	callstack 27
  3753  00194A                     
  3754                           ;keypad.c: 28:     int i;;keypad.c: 29:     static unsigned char tempo;;keypad.c: 30:   
      +                            static unsigned int newRead;;keypad.c: 31:     static unsigned int oldRead;;keypad.c: 
      +                          32:     newRead = 0;
  3755  00194A  0E00               	movlw	0
  3756  00194C  6E47               	movwf	(kpDebounce@newRead+1)^0,c
  3757  00194E  0E00               	movlw	0
  3758  001950  6E46               	movwf	kpDebounce@newRead^0,c
  3759                           
  3760                           ;keypad.c: 33:     for(i = 0; i<5; i++){
  3761  001952  0E00               	movlw	0
  3762  001954  6E0E               	movwf	(kpDebounce@i+1)^0,c
  3763  001956  0E00               	movlw	0
  3764  001958  6E0D               	movwf	kpDebounce@i^0,c
  3765  00195A                     l2313:
  3766  00195A  BE0E               	btfsc	(kpDebounce@i+1)^0,7,c
  3767  00195C  EFB9  F00C         	goto	u2291
  3768  001960  500E               	movf	(kpDebounce@i+1)^0,w,c
  3769  001962  E109               	bnz	u2290
  3770  001964  0E05               	movlw	5
  3771  001966  5C0D               	subwf	kpDebounce@i^0,w,c
  3772  001968  A0D8               	btfss	status,0,c
  3773  00196A  EFB9  F00C         	goto	u2291
  3774  00196E  EFBB  F00C         	goto	u2290
  3775  001972                     u2291:
  3776  001972  EFBD  F00C         	goto	l2317
  3777  001976                     u2290:
  3778  001976  EF1E  F00D         	goto	l2329
  3779  00197A                     l2317:
  3780                           
  3781                           ;keypad.c: 35:       soWrite(1<<(i+3));
  3782  00197A  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  3783  00197E  0E03               	movlw	3
  3784  001980  260A               	addwf	??_kpDebounce^0,f,c
  3785  001982  0E01               	movlw	1
  3786  001984  6E0B               	movwf	(??_kpDebounce+1)^0,c
  3787  001986  0E00               	movlw	0
  3788  001988  6E0C               	movwf	(??_kpDebounce+2)^0,c
  3789  00198A  2A0A               	incf	??_kpDebounce^0,f,c
  3790  00198C  EFCB  F00C         	goto	u2304
  3791  001990                     u2305:
  3792  001990  90D8               	bcf	status,0,c
  3793  001992  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  3794  001994  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  3795  001996                     u2304:
  3796  001996  2E0A               	decfsz	??_kpDebounce^0,f,c
  3797  001998  EFC8  F00C         	goto	u2305
  3798  00199C  C00B  F007         	movff	??_kpDebounce+1,soWrite@value
  3799  0019A0  C00C  F008         	movff	??_kpDebounce+2,soWrite@value+1
  3800  0019A4  ECDE  F010         	call	_soWrite	;wreg free
  3801                           
  3802                           ;keypad.c: 36:       if(digitalRead(PIN_B2)){
  3803  0019A8  0E00               	movlw	0
  3804  0019AA  6E02               	movwf	(digitalRead@pin+1)^0,c
  3805  0019AC  0E0A               	movlw	10
  3806  0019AE  6E01               	movwf	digitalRead@pin^0,c
  3807  0019B0  ECF0  F00B         	call	_digitalRead	;wreg free
  3808  0019B4  5001               	movf	?_digitalRead^0,w,c
  3809  0019B6  1002               	iorwf	(?_digitalRead+1)^0,w,c
  3810  0019B8  B4D8               	btfsc	status,2,c
  3811  0019BA  EFE1  F00C         	goto	u2311
  3812  0019BE  EFE3  F00C         	goto	u2310
  3813  0019C2                     u2311:
  3814  0019C2  EFF6  F00C         	goto	l2321
  3815  0019C6                     u2310:
  3816  0019C6                     
  3817                           ;keypad.c: 37:         ((newRead) |= (1<<(i)));
  3818  0019C6  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  3819  0019CA  0E01               	movlw	1
  3820  0019CC  6E0B               	movwf	(??_kpDebounce+1)^0,c
  3821  0019CE  0E00               	movlw	0
  3822  0019D0  6E0C               	movwf	(??_kpDebounce+2)^0,c
  3823  0019D2  2A0A               	incf	??_kpDebounce^0,f,c
  3824  0019D4  EFEF  F00C         	goto	u2324
  3825  0019D8                     u2325:
  3826  0019D8  90D8               	bcf	status,0,c
  3827  0019DA  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  3828  0019DC  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  3829  0019DE                     u2324:
  3830  0019DE  2E0A               	decfsz	??_kpDebounce^0,f,c
  3831  0019E0  EFEC  F00C         	goto	u2325
  3832  0019E4  500B               	movf	(??_kpDebounce+1)^0,w,c
  3833  0019E6  1246               	iorwf	kpDebounce@newRead^0,f,c
  3834  0019E8  500C               	movf	(??_kpDebounce+2)^0,w,c
  3835  0019EA  1247               	iorwf	(kpDebounce@newRead+1)^0,f,c
  3836  0019EC                     l2321:
  3837                           
  3838                           ;keypad.c: 39:       if(digitalRead(PIN_B1)){
  3839  0019EC  0E00               	movlw	0
  3840  0019EE  6E02               	movwf	(digitalRead@pin+1)^0,c
  3841  0019F0  0E09               	movlw	9
  3842  0019F2  6E01               	movwf	digitalRead@pin^0,c
  3843  0019F4  ECF0  F00B         	call	_digitalRead	;wreg free
  3844  0019F8  5001               	movf	?_digitalRead^0,w,c
  3845  0019FA  1002               	iorwf	(?_digitalRead+1)^0,w,c
  3846  0019FC  B4D8               	btfsc	status,2,c
  3847  0019FE  EF03  F00D         	goto	u2331
  3848  001A02  EF05  F00D         	goto	u2330
  3849  001A06                     u2331:
  3850  001A06  EF1A  F00D         	goto	l2325
  3851  001A0A                     u2330:
  3852  001A0A                     
  3853                           ;keypad.c: 40:         ((newRead) |= (1<<((i+5))));
  3854  001A0A  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  3855  001A0E  0E05               	movlw	5
  3856  001A10  260A               	addwf	??_kpDebounce^0,f,c
  3857  001A12  0E01               	movlw	1
  3858  001A14  6E0B               	movwf	(??_kpDebounce+1)^0,c
  3859  001A16  0E00               	movlw	0
  3860  001A18  6E0C               	movwf	(??_kpDebounce+2)^0,c
  3861  001A1A  2A0A               	incf	??_kpDebounce^0,f,c
  3862  001A1C  EF13  F00D         	goto	u2344
  3863  001A20                     u2345:
  3864  001A20  90D8               	bcf	status,0,c
  3865  001A22  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  3866  001A24  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  3867  001A26                     u2344:
  3868  001A26  2E0A               	decfsz	??_kpDebounce^0,f,c
  3869  001A28  EF10  F00D         	goto	u2345
  3870  001A2C  500B               	movf	(??_kpDebounce+1)^0,w,c
  3871  001A2E  1246               	iorwf	kpDebounce@newRead^0,f,c
  3872  001A30  500C               	movf	(??_kpDebounce+2)^0,w,c
  3873  001A32  1247               	iorwf	(kpDebounce@newRead+1)^0,f,c
  3874  001A34                     l2325:
  3875                           
  3876                           ;keypad.c: 42:     }
  3877  001A34  4A0D               	infsnz	kpDebounce@i^0,f,c
  3878  001A36  2A0E               	incf	(kpDebounce@i+1)^0,f,c
  3879  001A38  EFAD  F00C         	goto	l2313
  3880  001A3C                     l2329:
  3881                           
  3882                           ;keypad.c: 43:     if (oldRead == newRead) {
  3883  001A3C  5046               	movf	kpDebounce@newRead^0,w,c
  3884  001A3E  1844               	xorwf	kpDebounce@oldRead^0,w,c
  3885  001A40  E107               	bnz	u2351
  3886  001A42  5047               	movf	(kpDebounce@newRead+1)^0,w,c
  3887  001A44  1845               	xorwf	(kpDebounce@oldRead+1)^0,w,c
  3888  001A46  A4D8               	btfss	status,2,c
  3889  001A48  EF28  F00D         	goto	u2351
  3890  001A4C  EF2A  F00D         	goto	u2350
  3891  001A50                     u2351:
  3892  001A50  EF2D  F00D         	goto	l2333
  3893  001A54                     u2350:
  3894  001A54                     
  3895                           ;keypad.c: 44:         tempo--;
  3896  001A54  064F               	decf	kpDebounce@tempo^0,f,c
  3897                           
  3898                           ;keypad.c: 45:     } else {
  3899  001A56  EF33  F00D         	goto	l133
  3900  001A5A                     l2333:
  3901                           
  3902                           ;keypad.c: 46:         tempo = 1;
  3903  001A5A  0E01               	movlw	1
  3904  001A5C  6E4F               	movwf	kpDebounce@tempo^0,c
  3905  001A5E                     
  3906                           ;keypad.c: 47:         oldRead = newRead;
  3907  001A5E  C046  F044         	movff	kpDebounce@newRead,kpDebounce@oldRead
  3908  001A62  C047  F045         	movff	kpDebounce@newRead+1,kpDebounce@oldRead+1
  3909  001A66                     l133:
  3910                           
  3911                           ;keypad.c: 49:     if (tempo == 0) {
  3912  001A66  504F               	movf	kpDebounce@tempo^0,w,c
  3913  001A68  A4D8               	btfss	status,2,c
  3914  001A6A  EF39  F00D         	goto	u2361
  3915  001A6E  EF3B  F00D         	goto	u2360
  3916  001A72                     u2361:
  3917  001A72  EF3F  F00D         	goto	l135
  3918  001A76                     u2360:
  3919  001A76                     
  3920                           ;keypad.c: 50:         keys = oldRead;
  3921  001A76  C044  F048         	movff	kpDebounce@oldRead,_keys
  3922  001A7A  C045  F049         	movff	kpDebounce@oldRead+1,_keys+1
  3923  001A7E                     l135:
  3924  001A7E  0012               	return		;funcret
  3925  001A80                     __end_of_kpDebounce:
  3926                           	callstack 0
  3927                           
  3928 ;; *************** function _soWrite *****************
  3929 ;; Defined at:
  3930 ;;		line 18 in file "so.c"
  3931 ;; Parameters:    Size  Location     Type
  3932 ;;  value           2    6[COMRAM] int 
  3933 ;; Auto vars:     Size  Location     Type
  3934 ;;  i               1    8[COMRAM] unsigned char 
  3935 ;; Return value:  Size  Location     Type
  3936 ;;                  1    wreg      void 
  3937 ;; Registers used:
  3938 ;;		wreg, status,2, status,0, cstack
  3939 ;; Tracked objects:
  3940 ;;		On entry : 0/0
  3941 ;;		On exit  : 0/0
  3942 ;;		Unchanged: 0/0
  3943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3944 ;;      Params:         2       0       0       0       0       0       0
  3945 ;;      Locals:         1       0       0       0       0       0       0
  3946 ;;      Temps:          0       0       0       0       0       0       0
  3947 ;;      Totals:         3       0       0       0       0       0       0
  3948 ;;Total ram usage:        3 bytes
  3949 ;; Hardware stack levels used: 1
  3950 ;; Hardware stack levels required when called: 2
  3951 ;; This function calls:
  3952 ;;		_PulseClockData
  3953 ;;		_PulseEnClock
  3954 ;;		_digitalWrite
  3955 ;; This function is called by:
  3956 ;;		_kpDebounce
  3957 ;;		_pushNibble
  3958 ;;		_pushByte
  3959 ;;		_ssdUpdate
  3960 ;; This function uses a non-reentrant model
  3961 ;;
  3962                           
  3963                           	psect	text27
  3964  0021BC                     __ptext27:
  3965                           	callstack 0
  3966  0021BC                     _soWrite:
  3967                           	callstack 27
  3968  0021BC                     
  3969                           ;so.c: 19:  char i;;so.c: 20:  digitalWrite(PIN_B0, 0);
  3970  0021BC  0E00               	movlw	0
  3971  0021BE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3972  0021C0  0E08               	movlw	8
  3973  0021C2  6E01               	movwf	digitalWrite@pin^0,c
  3974  0021C4  0E00               	movlw	0
  3975  0021C6  6E04               	movwf	(digitalWrite@value+1)^0,c
  3976  0021C8  0E00               	movlw	0
  3977  0021CA  6E03               	movwf	digitalWrite@value^0,c
  3978  0021CC  EC12  F008         	call	_digitalWrite	;wreg free
  3979  0021D0                     
  3980                           ;so.c: 21:  for (i = 0; i < 8; i++) {
  3981  0021D0  0E00               	movlw	0
  3982  0021D2  6E09               	movwf	soWrite@i^0,c
  3983  0021D4                     l1985:
  3984                           
  3985                           ;so.c: 22:   digitalWrite(PIN_D6, value & 0x80);
  3986  0021D4  0E00               	movlw	0
  3987  0021D6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3988  0021D8  0E1E               	movlw	30
  3989  0021DA  6E01               	movwf	digitalWrite@pin^0,c
  3990  0021DC  0E80               	movlw	128
  3991  0021DE  1407               	andwf	soWrite@value^0,w,c
  3992  0021E0  6E03               	movwf	digitalWrite@value^0,c
  3993  0021E2  6A04               	clrf	(digitalWrite@value+1)^0,c
  3994  0021E4  EC12  F008         	call	_digitalWrite	;wreg free
  3995                           
  3996                           ;so.c: 23:   PulseClockData();
  3997  0021E8  ECCC  F011         	call	_PulseClockData	;wreg free
  3998  0021EC                     
  3999                           ;so.c: 24:   value <<= 1;
  4000  0021EC  90D8               	bcf	status,0,c
  4001  0021EE  3607               	rlcf	soWrite@value^0,f,c
  4002  0021F0  3608               	rlcf	(soWrite@value+1)^0,f,c
  4003  0021F2                     
  4004                           ;so.c: 25:  }
  4005  0021F2  2A09               	incf	soWrite@i^0,f,c
  4006  0021F4  0E07               	movlw	7
  4007  0021F6  6409               	cpfsgt	soWrite@i^0,c
  4008  0021F8  EF00  F011         	goto	u1721
  4009  0021FC  EF02  F011         	goto	u1720
  4010  002200                     u1721:
  4011  002200  EFEA  F010         	goto	l1985
  4012  002204                     u1720:
  4013  002204                     
  4014                           ;so.c: 26:  PulseEnClock();
  4015  002204  ECB7  F011         	call	_PulseEnClock	;wreg free
  4016  002208  0012               	return		;funcret
  4017  00220A                     __end_of_soWrite:
  4018                           	callstack 0
  4019                           
  4020 ;; *************** function _PulseEnClock *****************
  4021 ;; Defined at:
  4022 ;;		line 9 in file "so.c"
  4023 ;; Parameters:    Size  Location     Type
  4024 ;;		None
  4025 ;; Auto vars:     Size  Location     Type
  4026 ;;		None
  4027 ;; Return value:  Size  Location     Type
  4028 ;;                  1    wreg      void 
  4029 ;; Registers used:
  4030 ;;		wreg, status,2, status,0, cstack
  4031 ;; Tracked objects:
  4032 ;;		On entry : 0/0
  4033 ;;		On exit  : 0/0
  4034 ;;		Unchanged: 0/0
  4035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4036 ;;      Params:         0       0       0       0       0       0       0
  4037 ;;      Locals:         0       0       0       0       0       0       0
  4038 ;;      Temps:          0       0       0       0       0       0       0
  4039 ;;      Totals:         0       0       0       0       0       0       0
  4040 ;;Total ram usage:        0 bytes
  4041 ;; Hardware stack levels used: 1
  4042 ;; Hardware stack levels required when called: 1
  4043 ;; This function calls:
  4044 ;;		_digitalWrite
  4045 ;; This function is called by:
  4046 ;;		_soWrite
  4047 ;; This function uses a non-reentrant model
  4048 ;;
  4049                           
  4050                           	psect	text28
  4051  00236E                     __ptext28:
  4052                           	callstack 0
  4053  00236E                     _PulseEnClock:
  4054                           	callstack 27
  4055  00236E                     
  4056                           ;so.c: 10:  digitalWrite(PIN_D7, 1);
  4057  00236E  0E00               	movlw	0
  4058  002370  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4059  002372  0E1F               	movlw	31
  4060  002374  6E01               	movwf	digitalWrite@pin^0,c
  4061  002376  0E00               	movlw	0
  4062  002378  6E04               	movwf	(digitalWrite@value+1)^0,c
  4063  00237A  0E01               	movlw	1
  4064  00237C  6E03               	movwf	digitalWrite@value^0,c
  4065  00237E  EC12  F008         	call	_digitalWrite	;wreg free
  4066                           
  4067                           ;so.c: 11:  digitalWrite(PIN_D7, 0);
  4068  002382  0E00               	movlw	0
  4069  002384  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4070  002386  0E1F               	movlw	31
  4071  002388  6E01               	movwf	digitalWrite@pin^0,c
  4072  00238A  0E00               	movlw	0
  4073  00238C  6E04               	movwf	(digitalWrite@value+1)^0,c
  4074  00238E  0E00               	movlw	0
  4075  002390  6E03               	movwf	digitalWrite@value^0,c
  4076  002392  EC12  F008         	call	_digitalWrite	;wreg free
  4077  002396  0012               	return		;funcret
  4078  002398                     __end_of_PulseEnClock:
  4079                           	callstack 0
  4080                           
  4081 ;; *************** function _PulseClockData *****************
  4082 ;; Defined at:
  4083 ;;		line 14 in file "so.c"
  4084 ;; Parameters:    Size  Location     Type
  4085 ;;		None
  4086 ;; Auto vars:     Size  Location     Type
  4087 ;;		None
  4088 ;; Return value:  Size  Location     Type
  4089 ;;                  1    wreg      void 
  4090 ;; Registers used:
  4091 ;;		wreg, status,2, status,0, cstack
  4092 ;; Tracked objects:
  4093 ;;		On entry : 0/0
  4094 ;;		On exit  : 0/0
  4095 ;;		Unchanged: 0/0
  4096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4097 ;;      Params:         0       0       0       0       0       0       0
  4098 ;;      Locals:         0       0       0       0       0       0       0
  4099 ;;      Temps:          0       0       0       0       0       0       0
  4100 ;;      Totals:         0       0       0       0       0       0       0
  4101 ;;Total ram usage:        0 bytes
  4102 ;; Hardware stack levels used: 1
  4103 ;; Hardware stack levels required when called: 1
  4104 ;; This function calls:
  4105 ;;		_digitalWrite
  4106 ;; This function is called by:
  4107 ;;		_soWrite
  4108 ;; This function uses a non-reentrant model
  4109 ;;
  4110                           
  4111                           	psect	text29
  4112  002398                     __ptext29:
  4113                           	callstack 0
  4114  002398                     _PulseClockData:
  4115                           	callstack 27
  4116  002398                     
  4117                           ;so.c: 15:  digitalWrite(PIN_B0, 1);
  4118  002398  0E00               	movlw	0
  4119  00239A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4120  00239C  0E08               	movlw	8
  4121  00239E  6E01               	movwf	digitalWrite@pin^0,c
  4122  0023A0  0E00               	movlw	0
  4123  0023A2  6E04               	movwf	(digitalWrite@value+1)^0,c
  4124  0023A4  0E01               	movlw	1
  4125  0023A6  6E03               	movwf	digitalWrite@value^0,c
  4126  0023A8  EC12  F008         	call	_digitalWrite	;wreg free
  4127                           
  4128                           ;so.c: 16:  digitalWrite(PIN_B0, 0);
  4129  0023AC  0E00               	movlw	0
  4130  0023AE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4131  0023B0  0E08               	movlw	8
  4132  0023B2  6E01               	movwf	digitalWrite@pin^0,c
  4133  0023B4  0E00               	movlw	0
  4134  0023B6  6E04               	movwf	(digitalWrite@value+1)^0,c
  4135  0023B8  0E00               	movlw	0
  4136  0023BA  6E03               	movwf	digitalWrite@value^0,c
  4137  0023BC  EC12  F008         	call	_digitalWrite	;wreg free
  4138  0023C0  0012               	return		;funcret
  4139  0023C2                     __end_of_PulseClockData:
  4140                           	callstack 0
  4141                           
  4142 ;; *************** function _digitalWrite *****************
  4143 ;; Defined at:
  4144 ;;		line 14 in file "io.c"
  4145 ;; Parameters:    Size  Location     Type
  4146 ;;  pin             2    0[COMRAM] int 
  4147 ;;  value           2    2[COMRAM] int 
  4148 ;; Auto vars:     Size  Location     Type
  4149 ;;		None
  4150 ;; Return value:  Size  Location     Type
  4151 ;;                  1    wreg      void 
  4152 ;; Registers used:
  4153 ;;		wreg, status,2, status,0
  4154 ;; Tracked objects:
  4155 ;;		On entry : 0/0
  4156 ;;		On exit  : 0/0
  4157 ;;		Unchanged: 0/0
  4158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4159 ;;      Params:         4       0       0       0       0       0       0
  4160 ;;      Locals:         0       0       0       0       0       0       0
  4161 ;;      Temps:          2       0       0       0       0       0       0
  4162 ;;      Totals:         6       0       0       0       0       0       0
  4163 ;;Total ram usage:        6 bytes
  4164 ;; Hardware stack levels used: 1
  4165 ;; This function calls:
  4166 ;;		Nothing
  4167 ;; This function is called by:
  4168 ;;		_main
  4169 ;;		_pulseEnablePin
  4170 ;;		_pushNibble
  4171 ;;		_pushByte
  4172 ;;		_ssdUpdate
  4173 ;;		_PulseEnClock
  4174 ;;		_PulseClockData
  4175 ;;		_soWrite
  4176 ;; This function uses a non-reentrant model
  4177 ;;
  4178                           
  4179                           	psect	text30
  4180  001024                     __ptext30:
  4181                           	callstack 0
  4182  001024                     _digitalWrite:
  4183                           	callstack 28
  4184  001024                     
  4185                           ;io.c: 16:     if(pin <8){
  4186  001024  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4187  001026  EF20  F008         	goto	u1520
  4188  00102A  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4189  00102C  E107               	bnz	u1521
  4190  00102E  0E08               	movlw	8
  4191  001030  5C01               	subwf	digitalWrite@pin^0,w,c
  4192  001032  B0D8               	btfsc	status,0,c
  4193  001034  EF1E  F008         	goto	u1521
  4194  001038  EF20  F008         	goto	u1520
  4195  00103C                     u1521:
  4196  00103C  EF4A  F008         	goto	l1941
  4197  001040                     u1520:
  4198  001040                     
  4199                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  4200  001040  5003               	movf	digitalWrite@value^0,w,c
  4201  001042  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4202  001044  B4D8               	btfsc	status,2,c
  4203  001046  EF27  F008         	goto	u1531
  4204  00104A  EF29  F008         	goto	u1530
  4205  00104E                     u1531:
  4206  00104E  EF39  F008         	goto	l1939
  4207  001052                     u1530:
  4208  001052  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4209  001056  0E01               	movlw	1
  4210  001058  6E06               	movwf	(??_digitalWrite+1)^0,c
  4211  00105A  2A05               	incf	??_digitalWrite^0,f,c
  4212  00105C  EF32  F008         	goto	u1544
  4213  001060                     u1545:
  4214  001060  90D8               	bcf	status,0,c
  4215  001062  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4216  001064                     u1544:
  4217  001064  2E05               	decfsz	??_digitalWrite^0,f,c
  4218  001066  EF30  F008         	goto	u1545
  4219  00106A  5006               	movf	(??_digitalWrite+1)^0,w,c
  4220  00106C  1280               	iorwf	128,f,c	;volatile
  4221  00106E  EF38  F009         	goto	l272
  4222  001072                     l1939:
  4223  001072  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4224  001076  0E01               	movlw	1
  4225  001078  6E06               	movwf	(??_digitalWrite+1)^0,c
  4226  00107A  2A05               	incf	??_digitalWrite^0,f,c
  4227  00107C  EF42  F008         	goto	u1554
  4228  001080                     u1555:
  4229  001080  90D8               	bcf	status,0,c
  4230  001082  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4231  001084                     u1554:
  4232  001084  2E05               	decfsz	??_digitalWrite^0,f,c
  4233  001086  EF40  F008         	goto	u1555
  4234  00108A  5006               	movf	(??_digitalWrite+1)^0,w,c
  4235  00108C  0AFF               	xorlw	255
  4236  00108E  1680               	andwf	128,f,c	;volatile
  4237  001090  EF38  F009         	goto	l272
  4238  001094                     l1941:
  4239  001094  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4240  001096  EF58  F008         	goto	u1560
  4241  00109A  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4242  00109C  E107               	bnz	u1561
  4243  00109E  0E10               	movlw	16
  4244  0010A0  5C01               	subwf	digitalWrite@pin^0,w,c
  4245  0010A2  B0D8               	btfsc	status,0,c
  4246  0010A4  EF56  F008         	goto	u1561
  4247  0010A8  EF58  F008         	goto	u1560
  4248  0010AC                     u1561:
  4249  0010AC  EF86  F008         	goto	l1949
  4250  0010B0                     u1560:
  4251  0010B0                     
  4252                           ;io.c: 20:         pin -=8;
  4253  0010B0  0EF8               	movlw	248
  4254  0010B2  2601               	addwf	digitalWrite@pin^0,f,c
  4255  0010B4  0EFF               	movlw	255
  4256  0010B6  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4257                           
  4258                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  4259  0010B8  5003               	movf	digitalWrite@value^0,w,c
  4260  0010BA  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4261  0010BC  B4D8               	btfsc	status,2,c
  4262  0010BE  EF63  F008         	goto	u1571
  4263  0010C2  EF65  F008         	goto	u1570
  4264  0010C6                     u1571:
  4265  0010C6  EF75  F008         	goto	l1947
  4266  0010CA                     u1570:
  4267  0010CA  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4268  0010CE  0E01               	movlw	1
  4269  0010D0  6E06               	movwf	(??_digitalWrite+1)^0,c
  4270  0010D2  2A05               	incf	??_digitalWrite^0,f,c
  4271  0010D4  EF6E  F008         	goto	u1584
  4272  0010D8                     u1585:
  4273  0010D8  90D8               	bcf	status,0,c
  4274  0010DA  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4275  0010DC                     u1584:
  4276  0010DC  2E05               	decfsz	??_digitalWrite^0,f,c
  4277  0010DE  EF6C  F008         	goto	u1585
  4278  0010E2  5006               	movf	(??_digitalWrite+1)^0,w,c
  4279  0010E4  1281               	iorwf	129,f,c	;volatile
  4280  0010E6  EF38  F009         	goto	l272
  4281  0010EA                     l1947:
  4282  0010EA  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4283  0010EE  0E01               	movlw	1
  4284  0010F0  6E06               	movwf	(??_digitalWrite+1)^0,c
  4285  0010F2  2A05               	incf	??_digitalWrite^0,f,c
  4286  0010F4  EF7E  F008         	goto	u1594
  4287  0010F8                     u1595:
  4288  0010F8  90D8               	bcf	status,0,c
  4289  0010FA  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4290  0010FC                     u1594:
  4291  0010FC  2E05               	decfsz	??_digitalWrite^0,f,c
  4292  0010FE  EF7C  F008         	goto	u1595
  4293  001102  5006               	movf	(??_digitalWrite+1)^0,w,c
  4294  001104  0AFF               	xorlw	255
  4295  001106  1681               	andwf	129,f,c	;volatile
  4296  001108  EF38  F009         	goto	l272
  4297  00110C                     l1949:
  4298  00110C  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4299  00110E  EF94  F008         	goto	u1600
  4300  001112  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4301  001114  E107               	bnz	u1601
  4302  001116  0E18               	movlw	24
  4303  001118  5C01               	subwf	digitalWrite@pin^0,w,c
  4304  00111A  B0D8               	btfsc	status,0,c
  4305  00111C  EF92  F008         	goto	u1601
  4306  001120  EF94  F008         	goto	u1600
  4307  001124                     u1601:
  4308  001124  EFC2  F008         	goto	l1957
  4309  001128                     u1600:
  4310  001128                     
  4311                           ;io.c: 24:         pin -=16;
  4312  001128  0EF0               	movlw	240
  4313  00112A  2601               	addwf	digitalWrite@pin^0,f,c
  4314  00112C  0EFF               	movlw	255
  4315  00112E  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4316                           
  4317                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  4318  001130  5003               	movf	digitalWrite@value^0,w,c
  4319  001132  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4320  001134  B4D8               	btfsc	status,2,c
  4321  001136  EF9F  F008         	goto	u1611
  4322  00113A  EFA1  F008         	goto	u1610
  4323  00113E                     u1611:
  4324  00113E  EFB1  F008         	goto	l1955
  4325  001142                     u1610:
  4326  001142  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4327  001146  0E01               	movlw	1
  4328  001148  6E06               	movwf	(??_digitalWrite+1)^0,c
  4329  00114A  2A05               	incf	??_digitalWrite^0,f,c
  4330  00114C  EFAA  F008         	goto	u1624
  4331  001150                     u1625:
  4332  001150  90D8               	bcf	status,0,c
  4333  001152  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4334  001154                     u1624:
  4335  001154  2E05               	decfsz	??_digitalWrite^0,f,c
  4336  001156  EFA8  F008         	goto	u1625
  4337  00115A  5006               	movf	(??_digitalWrite+1)^0,w,c
  4338  00115C  1282               	iorwf	130,f,c	;volatile
  4339  00115E  EF38  F009         	goto	l272
  4340  001162                     l1955:
  4341  001162  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4342  001166  0E01               	movlw	1
  4343  001168  6E06               	movwf	(??_digitalWrite+1)^0,c
  4344  00116A  2A05               	incf	??_digitalWrite^0,f,c
  4345  00116C  EFBA  F008         	goto	u1634
  4346  001170                     u1635:
  4347  001170  90D8               	bcf	status,0,c
  4348  001172  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4349  001174                     u1634:
  4350  001174  2E05               	decfsz	??_digitalWrite^0,f,c
  4351  001176  EFB8  F008         	goto	u1635
  4352  00117A  5006               	movf	(??_digitalWrite+1)^0,w,c
  4353  00117C  0AFF               	xorlw	255
  4354  00117E  1682               	andwf	130,f,c	;volatile
  4355  001180  EF38  F009         	goto	l272
  4356  001184                     l1957:
  4357  001184  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4358  001186  EFD0  F008         	goto	u1640
  4359  00118A  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4360  00118C  E107               	bnz	u1641
  4361  00118E  0E20               	movlw	32
  4362  001190  5C01               	subwf	digitalWrite@pin^0,w,c
  4363  001192  B0D8               	btfsc	status,0,c
  4364  001194  EFCE  F008         	goto	u1641
  4365  001198  EFD0  F008         	goto	u1640
  4366  00119C                     u1641:
  4367  00119C  EFFE  F008         	goto	l1965
  4368  0011A0                     u1640:
  4369  0011A0                     
  4370                           ;io.c: 28:         pin -=24;
  4371  0011A0  0EE8               	movlw	232
  4372  0011A2  2601               	addwf	digitalWrite@pin^0,f,c
  4373  0011A4  0EFF               	movlw	255
  4374  0011A6  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4375                           
  4376                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  4377  0011A8  5003               	movf	digitalWrite@value^0,w,c
  4378  0011AA  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4379  0011AC  B4D8               	btfsc	status,2,c
  4380  0011AE  EFDB  F008         	goto	u1651
  4381  0011B2  EFDD  F008         	goto	u1650
  4382  0011B6                     u1651:
  4383  0011B6  EFED  F008         	goto	l1963
  4384  0011BA                     u1650:
  4385  0011BA  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4386  0011BE  0E01               	movlw	1
  4387  0011C0  6E06               	movwf	(??_digitalWrite+1)^0,c
  4388  0011C2  2A05               	incf	??_digitalWrite^0,f,c
  4389  0011C4  EFE6  F008         	goto	u1664
  4390  0011C8                     u1665:
  4391  0011C8  90D8               	bcf	status,0,c
  4392  0011CA  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4393  0011CC                     u1664:
  4394  0011CC  2E05               	decfsz	??_digitalWrite^0,f,c
  4395  0011CE  EFE4  F008         	goto	u1665
  4396  0011D2  5006               	movf	(??_digitalWrite+1)^0,w,c
  4397  0011D4  1283               	iorwf	131,f,c	;volatile
  4398  0011D6  EF38  F009         	goto	l272
  4399  0011DA                     l1963:
  4400  0011DA  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4401  0011DE  0E01               	movlw	1
  4402  0011E0  6E06               	movwf	(??_digitalWrite+1)^0,c
  4403  0011E2  2A05               	incf	??_digitalWrite^0,f,c
  4404  0011E4  EFF6  F008         	goto	u1674
  4405  0011E8                     u1675:
  4406  0011E8  90D8               	bcf	status,0,c
  4407  0011EA  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4408  0011EC                     u1674:
  4409  0011EC  2E05               	decfsz	??_digitalWrite^0,f,c
  4410  0011EE  EFF4  F008         	goto	u1675
  4411  0011F2  5006               	movf	(??_digitalWrite+1)^0,w,c
  4412  0011F4  0AFF               	xorlw	255
  4413  0011F6  1683               	andwf	131,f,c	;volatile
  4414  0011F8  EF38  F009         	goto	l272
  4415  0011FC                     l1965:
  4416  0011FC  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4417  0011FE  EF0C  F009         	goto	u1680
  4418  001202  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4419  001204  E107               	bnz	u1681
  4420  001206  0E28               	movlw	40
  4421  001208  5C01               	subwf	digitalWrite@pin^0,w,c
  4422  00120A  B0D8               	btfsc	status,0,c
  4423  00120C  EF0A  F009         	goto	u1681
  4424  001210  EF0C  F009         	goto	u1680
  4425  001214                     u1681:
  4426  001214  EF38  F009         	goto	l272
  4427  001218                     u1680:
  4428  001218                     
  4429                           ;io.c: 32:         pin -=32;
  4430  001218  0EE0               	movlw	224
  4431  00121A  2601               	addwf	digitalWrite@pin^0,f,c
  4432  00121C  0EFF               	movlw	255
  4433  00121E  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4434                           
  4435                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  4436  001220  5003               	movf	digitalWrite@value^0,w,c
  4437  001222  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4438  001224  B4D8               	btfsc	status,2,c
  4439  001226  EF17  F009         	goto	u1691
  4440  00122A  EF19  F009         	goto	u1690
  4441  00122E                     u1691:
  4442  00122E  EF29  F009         	goto	l1971
  4443  001232                     u1690:
  4444  001232  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4445  001236  0E01               	movlw	1
  4446  001238  6E06               	movwf	(??_digitalWrite+1)^0,c
  4447  00123A  2A05               	incf	??_digitalWrite^0,f,c
  4448  00123C  EF22  F009         	goto	u1704
  4449  001240                     u1705:
  4450  001240  90D8               	bcf	status,0,c
  4451  001242  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4452  001244                     u1704:
  4453  001244  2E05               	decfsz	??_digitalWrite^0,f,c
  4454  001246  EF20  F009         	goto	u1705
  4455  00124A  5006               	movf	(??_digitalWrite+1)^0,w,c
  4456  00124C  1284               	iorwf	132,f,c	;volatile
  4457  00124E  EF38  F009         	goto	l272
  4458  001252                     l1971:
  4459  001252  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4460  001256  0E01               	movlw	1
  4461  001258  6E06               	movwf	(??_digitalWrite+1)^0,c
  4462  00125A  2A05               	incf	??_digitalWrite^0,f,c
  4463  00125C  EF32  F009         	goto	u1714
  4464  001260                     u1715:
  4465  001260  90D8               	bcf	status,0,c
  4466  001262  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4467  001264                     u1714:
  4468  001264  2E05               	decfsz	??_digitalWrite^0,f,c
  4469  001266  EF30  F009         	goto	u1715
  4470  00126A  5006               	movf	(??_digitalWrite+1)^0,w,c
  4471  00126C  0AFF               	xorlw	255
  4472  00126E  1684               	andwf	132,f,c	;volatile
  4473  001270                     l272:
  4474  001270  0012               	return		;funcret
  4475  001272                     __end_of_digitalWrite:
  4476                           	callstack 0
  4477                           
  4478 ;; *************** function _digitalRead *****************
  4479 ;; Defined at:
  4480 ;;		line 39 in file "io.c"
  4481 ;; Parameters:    Size  Location     Type
  4482 ;;  pin             2    0[COMRAM] int 
  4483 ;; Auto vars:     Size  Location     Type
  4484 ;;		None
  4485 ;; Return value:  Size  Location     Type
  4486 ;;                  2    0[COMRAM] int 
  4487 ;; Registers used:
  4488 ;;		wreg, status,2, status,0
  4489 ;; Tracked objects:
  4490 ;;		On entry : 0/0
  4491 ;;		On exit  : 0/0
  4492 ;;		Unchanged: 0/0
  4493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4494 ;;      Params:         2       0       0       0       0       0       0
  4495 ;;      Locals:         0       0       0       0       0       0       0
  4496 ;;      Temps:          3       0       0       0       0       0       0
  4497 ;;      Totals:         5       0       0       0       0       0       0
  4498 ;;Total ram usage:        5 bytes
  4499 ;; Hardware stack levels used: 1
  4500 ;; This function calls:
  4501 ;;		Nothing
  4502 ;; This function is called by:
  4503 ;;		_kpDebounce
  4504 ;; This function uses a non-reentrant model
  4505 ;;
  4506                           
  4507                           	psect	text31
  4508  0017E0                     __ptext31:
  4509                           	callstack 0
  4510  0017E0                     _digitalRead:
  4511                           	callstack 29
  4512  0017E0                     
  4513                           ;io.c: 40:     if(pin <8){
  4514  0017E0  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4515  0017E2  EFFE  F00B         	goto	u2000
  4516  0017E6  5002               	movf	(digitalRead@pin+1)^0,w,c
  4517  0017E8  E107               	bnz	u2001
  4518  0017EA  0E08               	movlw	8
  4519  0017EC  5C01               	subwf	digitalRead@pin^0,w,c
  4520  0017EE  B0D8               	btfsc	status,0,c
  4521  0017F0  EFFC  F00B         	goto	u2001
  4522  0017F4  EFFE  F00B         	goto	u2000
  4523  0017F8                     u2001:
  4524  0017F8  EF12  F00C         	goto	l2105
  4525  0017FC                     u2000:
  4526  0017FC                     
  4527                           ;io.c: 41:         return ((PORTA) & (1<<(pin)));
  4528  0017FC  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4529  001800  0E01               	movlw	1
  4530  001802  6E04               	movwf	(??_digitalRead+1)^0,c
  4531  001804  2A03               	incf	??_digitalRead^0,f,c
  4532  001806  EF07  F00C         	goto	u2014
  4533  00180A                     u2015:
  4534  00180A  90D8               	bcf	status,0,c
  4535  00180C  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4536  00180E                     u2014:
  4537  00180E  2E03               	decfsz	??_digitalRead^0,f,c
  4538  001810  EF05  F00C         	goto	u2015
  4539  001814  5004               	movf	(??_digitalRead+1)^0,w,c
  4540  001816  1480               	andwf	128,w,c	;volatile
  4541  001818  6E05               	movwf	(??_digitalRead+2)^0,c
  4542  00181A  5005               	movf	(??_digitalRead+2)^0,w,c
  4543  00181C  6E01               	movwf	?_digitalRead^0,c
  4544  00181E  6A02               	clrf	(?_digitalRead+1)^0,c
  4545  001820  EFA4  F00C         	goto	l276
  4546  001824                     l2105:
  4547  001824  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4548  001826  EF20  F00C         	goto	u2020
  4549  00182A  5002               	movf	(digitalRead@pin+1)^0,w,c
  4550  00182C  E107               	bnz	u2021
  4551  00182E  0E10               	movlw	16
  4552  001830  5C01               	subwf	digitalRead@pin^0,w,c
  4553  001832  B0D8               	btfsc	status,0,c
  4554  001834  EF1E  F00C         	goto	u2021
  4555  001838  EF20  F00C         	goto	u2020
  4556  00183C                     u2021:
  4557  00183C  EF36  F00C         	goto	l2113
  4558  001840                     u2020:
  4559  001840                     
  4560                           ;io.c: 43:         return ((PORTB) & (1<<(pin-8)));
  4561  001840  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4562  001844  0EF8               	movlw	-8
  4563  001846  2603               	addwf	??_digitalRead^0,f,c
  4564  001848  0E01               	movlw	1
  4565  00184A  6E04               	movwf	(??_digitalRead+1)^0,c
  4566  00184C  2A03               	incf	??_digitalRead^0,f,c
  4567  00184E  EF2B  F00C         	goto	u2034
  4568  001852                     u2035:
  4569  001852  90D8               	bcf	status,0,c
  4570  001854  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4571  001856                     u2034:
  4572  001856  2E03               	decfsz	??_digitalRead^0,f,c
  4573  001858  EF29  F00C         	goto	u2035
  4574  00185C  5004               	movf	(??_digitalRead+1)^0,w,c
  4575  00185E  1481               	andwf	129,w,c	;volatile
  4576  001860  6E05               	movwf	(??_digitalRead+2)^0,c
  4577  001862  5005               	movf	(??_digitalRead+2)^0,w,c
  4578  001864  6E01               	movwf	?_digitalRead^0,c
  4579  001866  6A02               	clrf	(?_digitalRead+1)^0,c
  4580  001868  EFA4  F00C         	goto	l276
  4581  00186C                     l2113:
  4582  00186C  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4583  00186E  EF44  F00C         	goto	u2040
  4584  001872  5002               	movf	(digitalRead@pin+1)^0,w,c
  4585  001874  E107               	bnz	u2041
  4586  001876  0E18               	movlw	24
  4587  001878  5C01               	subwf	digitalRead@pin^0,w,c
  4588  00187A  B0D8               	btfsc	status,0,c
  4589  00187C  EF42  F00C         	goto	u2041
  4590  001880  EF44  F00C         	goto	u2040
  4591  001884                     u2041:
  4592  001884  EF5A  F00C         	goto	l2121
  4593  001888                     u2040:
  4594  001888                     
  4595                           ;io.c: 45:         return ((PORTC) & (1<<(pin-16)));
  4596  001888  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4597  00188C  0EF0               	movlw	-16
  4598  00188E  2603               	addwf	??_digitalRead^0,f,c
  4599  001890  0E01               	movlw	1
  4600  001892  6E04               	movwf	(??_digitalRead+1)^0,c
  4601  001894  2A03               	incf	??_digitalRead^0,f,c
  4602  001896  EF4F  F00C         	goto	u2054
  4603  00189A                     u2055:
  4604  00189A  90D8               	bcf	status,0,c
  4605  00189C  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4606  00189E                     u2054:
  4607  00189E  2E03               	decfsz	??_digitalRead^0,f,c
  4608  0018A0  EF4D  F00C         	goto	u2055
  4609  0018A4  5004               	movf	(??_digitalRead+1)^0,w,c
  4610  0018A6  1482               	andwf	130,w,c	;volatile
  4611  0018A8  6E05               	movwf	(??_digitalRead+2)^0,c
  4612  0018AA  5005               	movf	(??_digitalRead+2)^0,w,c
  4613  0018AC  6E01               	movwf	?_digitalRead^0,c
  4614  0018AE  6A02               	clrf	(?_digitalRead+1)^0,c
  4615  0018B0  EFA4  F00C         	goto	l276
  4616  0018B4                     l2121:
  4617  0018B4  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4618  0018B6  EF68  F00C         	goto	u2060
  4619  0018BA  5002               	movf	(digitalRead@pin+1)^0,w,c
  4620  0018BC  E107               	bnz	u2061
  4621  0018BE  0E20               	movlw	32
  4622  0018C0  5C01               	subwf	digitalRead@pin^0,w,c
  4623  0018C2  B0D8               	btfsc	status,0,c
  4624  0018C4  EF66  F00C         	goto	u2061
  4625  0018C8  EF68  F00C         	goto	u2060
  4626  0018CC                     u2061:
  4627  0018CC  EF7E  F00C         	goto	l2129
  4628  0018D0                     u2060:
  4629  0018D0                     
  4630                           ;io.c: 47:         return ((PORTD) & (1<<(pin-24)));
  4631  0018D0  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4632  0018D4  0EE8               	movlw	-24
  4633  0018D6  2603               	addwf	??_digitalRead^0,f,c
  4634  0018D8  0E01               	movlw	1
  4635  0018DA  6E04               	movwf	(??_digitalRead+1)^0,c
  4636  0018DC  2A03               	incf	??_digitalRead^0,f,c
  4637  0018DE  EF73  F00C         	goto	u2074
  4638  0018E2                     u2075:
  4639  0018E2  90D8               	bcf	status,0,c
  4640  0018E4  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4641  0018E6                     u2074:
  4642  0018E6  2E03               	decfsz	??_digitalRead^0,f,c
  4643  0018E8  EF71  F00C         	goto	u2075
  4644  0018EC  5004               	movf	(??_digitalRead+1)^0,w,c
  4645  0018EE  1483               	andwf	131,w,c	;volatile
  4646  0018F0  6E05               	movwf	(??_digitalRead+2)^0,c
  4647  0018F2  5005               	movf	(??_digitalRead+2)^0,w,c
  4648  0018F4  6E01               	movwf	?_digitalRead^0,c
  4649  0018F6  6A02               	clrf	(?_digitalRead+1)^0,c
  4650  0018F8  EFA4  F00C         	goto	l276
  4651  0018FC                     l2129:
  4652  0018FC  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4653  0018FE  EF8C  F00C         	goto	u2080
  4654  001902  5002               	movf	(digitalRead@pin+1)^0,w,c
  4655  001904  E107               	bnz	u2081
  4656  001906  0E28               	movlw	40
  4657  001908  5C01               	subwf	digitalRead@pin^0,w,c
  4658  00190A  B0D8               	btfsc	status,0,c
  4659  00190C  EF8A  F00C         	goto	u2081
  4660  001910  EF8C  F00C         	goto	u2080
  4661  001914                     u2081:
  4662  001914  EFA2  F00C         	goto	l281
  4663  001918                     u2080:
  4664  001918                     
  4665                           ;io.c: 49:         return ((PORTE) & (1<<(pin-32)));
  4666  001918  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4667  00191C  0EE0               	movlw	-32
  4668  00191E  2603               	addwf	??_digitalRead^0,f,c
  4669  001920  0E01               	movlw	1
  4670  001922  6E04               	movwf	(??_digitalRead+1)^0,c
  4671  001924  2A03               	incf	??_digitalRead^0,f,c
  4672  001926  EF97  F00C         	goto	u2094
  4673  00192A                     u2095:
  4674  00192A  90D8               	bcf	status,0,c
  4675  00192C  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4676  00192E                     u2094:
  4677  00192E  2E03               	decfsz	??_digitalRead^0,f,c
  4678  001930  EF95  F00C         	goto	u2095
  4679  001934  5004               	movf	(??_digitalRead+1)^0,w,c
  4680  001936  1484               	andwf	132,w,c	;volatile
  4681  001938  6E05               	movwf	(??_digitalRead+2)^0,c
  4682  00193A  5005               	movf	(??_digitalRead+2)^0,w,c
  4683  00193C  6E01               	movwf	?_digitalRead^0,c
  4684  00193E  6A02               	clrf	(?_digitalRead+1)^0,c
  4685  001940  EFA4  F00C         	goto	l276
  4686  001944                     l281:
  4687  001944                     
  4688                           ;io.c: 51:     return -1;
  4689  001944  6801               	setf	?_digitalRead^0,c
  4690  001946  6802               	setf	(?_digitalRead+1)^0,c
  4691  001948                     l276:
  4692  001948  0012               	return		;funcret
  4693  00194A                     __end_of_digitalRead:
  4694                           	callstack 0
  4695                           
  4696 ;; *************** function _adcRead *****************
  4697 ;; Defined at:
  4698 ;;		line 38 in file "adc.c"
  4699 ;; Parameters:    Size  Location     Type
  4700 ;;  channel         2    0[COMRAM] unsigned int 
  4701 ;; Auto vars:     Size  Location     Type
  4702 ;;  ADvalor         2    2[COMRAM] unsigned int 
  4703 ;; Return value:  Size  Location     Type
  4704 ;;                  2    0[COMRAM] int 
  4705 ;; Registers used:
  4706 ;;		wreg, status,2, status,0
  4707 ;; Tracked objects:
  4708 ;;		On entry : 0/0
  4709 ;;		On exit  : 0/0
  4710 ;;		Unchanged: 0/0
  4711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4712 ;;      Params:         2       0       0       0       0       0       0
  4713 ;;      Locals:         2       0       0       0       0       0       0
  4714 ;;      Temps:          0       0       0       0       0       0       0
  4715 ;;      Totals:         4       0       0       0       0       0       0
  4716 ;;Total ram usage:        4 bytes
  4717 ;; Hardware stack levels used: 1
  4718 ;; This function calls:
  4719 ;;		Nothing
  4720 ;; This function is called by:
  4721 ;;		_main
  4722 ;; This function uses a non-reentrant model
  4723 ;;
  4724                           
  4725                           	psect	text32
  4726  00216C                     __ptext32:
  4727                           	callstack 0
  4728  00216C                     _adcRead:
  4729                           	callstack 30
  4730  00216C                     
  4731                           ;adc.c: 39:     unsigned int ADvalor;;adc.c: 40:     ADCON0 &= 0b11000011;
  4732  00216C  0EC3               	movlw	195
  4733  00216E  16C2               	andwf	194,f,c	;volatile
  4734                           
  4735                           ;adc.c: 41:     if (channel < 3) {
  4736  002170  5002               	movf	(adcRead@channel+1)^0,w,c
  4737  002172  E107               	bnz	u2371
  4738  002174  0E03               	movlw	3
  4739  002176  5C01               	subwf	adcRead@channel^0,w,c
  4740  002178  B0D8               	btfsc	status,0,c
  4741  00217A  EFC1  F010         	goto	u2371
  4742  00217E  EFC3  F010         	goto	u2370
  4743  002182                     u2371:
  4744  002182  EFC7  F010         	goto	l2347
  4745  002186                     u2370:
  4746  002186                     
  4747                           ;adc.c: 42:         ADCON0 |= channel << 2;
  4748  002186  4401               	rlncf	adcRead@channel^0,w,c	;volatile
  4749  002188  46E8               	rlncf	wreg,f,c
  4750  00218A  0BFC               	andlw	252
  4751  00218C  12C2               	iorwf	194,f,c	;volatile
  4752  00218E                     l2347:
  4753                           
  4754                           ;adc.c: 45:     ADCON0 |= 0b00000010;
  4755  00218E  82C2               	bsf	194,1,c	;volatile
  4756  002190                     l93:
  4757  002190  B2C2               	btfsc	194,1,c	;volatile
  4758  002192  EFCD  F010         	goto	u2381
  4759  002196  EFCF  F010         	goto	u2380
  4760  00219A                     u2381:
  4761  00219A  EFC8  F010         	goto	l93
  4762  00219E                     u2380:
  4763  00219E                     
  4764                           ;adc.c: 49:     ADvalor = ADRESH;
  4765  00219E  CFC4 F003          	movff	4036,adcRead@ADvalor	;volatile
  4766  0021A2  6A04               	clrf	(adcRead@ADvalor+1)^0,c
  4767  0021A4                     
  4768                           ;adc.c: 50:     ADvalor <<= 8;
  4769  0021A4  5003               	movf	adcRead@ADvalor^0,w,c
  4770  0021A6  6E04               	movwf	(adcRead@ADvalor+1)^0,c
  4771  0021A8  6A03               	clrf	adcRead@ADvalor^0,c
  4772  0021AA                     
  4773                           ;adc.c: 51:     ADvalor += ADRESL;
  4774  0021AA  50C3               	movf	195,w,c	;volatile
  4775  0021AC  2603               	addwf	adcRead@ADvalor^0,f,c
  4776  0021AE  0E00               	movlw	0
  4777  0021B0  2204               	addwfc	(adcRead@ADvalor+1)^0,f,c
  4778  0021B2                     
  4779                           ;adc.c: 52:     return ADvalor;
  4780  0021B2  C003  F001         	movff	adcRead@ADvalor,?_adcRead
  4781  0021B6  C004  F002         	movff	adcRead@ADvalor+1,?_adcRead+1
  4782  0021BA  0012               	return		;funcret
  4783  0021BC                     __end_of_adcRead:
  4784                           	callstack 0
  4785                           
  4786 ;; *************** function _adcInit *****************
  4787 ;; Defined at:
  4788 ;;		line 25 in file "adc.c"
  4789 ;; Parameters:    Size  Location     Type
  4790 ;;		None
  4791 ;; Auto vars:     Size  Location     Type
  4792 ;;		None
  4793 ;; Return value:  Size  Location     Type
  4794 ;;                  1    wreg      void 
  4795 ;; Registers used:
  4796 ;;		wreg, status,2, status,0, cstack
  4797 ;; Tracked objects:
  4798 ;;		On entry : 0/0
  4799 ;;		On exit  : 0/0
  4800 ;;		Unchanged: 0/0
  4801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4802 ;;      Params:         0       0       0       0       0       0       0
  4803 ;;      Locals:         0       0       0       0       0       0       0
  4804 ;;      Temps:          0       0       0       0       0       0       0
  4805 ;;      Totals:         0       0       0       0       0       0       0
  4806 ;;Total ram usage:        0 bytes
  4807 ;; Hardware stack levels used: 1
  4808 ;; Hardware stack levels required when called: 1
  4809 ;; This function calls:
  4810 ;;		_pinMode
  4811 ;; This function is called by:
  4812 ;;		_main
  4813 ;; This function uses a non-reentrant model
  4814 ;;
  4815                           
  4816                           	psect	text33
  4817  00220A                     __ptext33:
  4818                           	callstack 0
  4819  00220A                     _adcInit:
  4820                           	callstack 29
  4821  00220A                     
  4822                           ;adc.c: 27:     pinMode(PIN_A0, 1);
  4823  00220A  0E00               	movlw	0
  4824  00220C  6E02               	movwf	(pinMode@pin+1)^0,c
  4825  00220E  0E00               	movlw	0
  4826  002210  6E01               	movwf	pinMode@pin^0,c
  4827  002212  0E00               	movlw	0
  4828  002214  6E04               	movwf	(pinMode@type+1)^0,c
  4829  002216  0E01               	movlw	1
  4830  002218  6E03               	movwf	pinMode@type^0,c
  4831  00221A  EC39  F009         	call	_pinMode	;wreg free
  4832                           
  4833                           ;adc.c: 28:     pinMode(PIN_A1, 1);
  4834  00221E  0E00               	movlw	0
  4835  002220  6E02               	movwf	(pinMode@pin+1)^0,c
  4836  002222  0E01               	movlw	1
  4837  002224  6E01               	movwf	pinMode@pin^0,c
  4838  002226  0E00               	movlw	0
  4839  002228  6E04               	movwf	(pinMode@type+1)^0,c
  4840  00222A  0E01               	movlw	1
  4841  00222C  6E03               	movwf	pinMode@type^0,c
  4842  00222E  EC39  F009         	call	_pinMode	;wreg free
  4843                           
  4844                           ;adc.c: 29:     pinMode(PIN_A2, 1);
  4845  002232  0E00               	movlw	0
  4846  002234  6E02               	movwf	(pinMode@pin+1)^0,c
  4847  002236  0E02               	movlw	2
  4848  002238  6E01               	movwf	pinMode@pin^0,c
  4849  00223A  0E00               	movlw	0
  4850  00223C  6E04               	movwf	(pinMode@type+1)^0,c
  4851  00223E  0E01               	movlw	1
  4852  002240  6E03               	movwf	pinMode@type^0,c
  4853  002242  EC39  F009         	call	_pinMode	;wreg free
  4854  002246                     
  4855                           ;adc.c: 31:     ((ADCON0) |= (1<<(0)));
  4856  002246  80C2               	bsf	194,0,c	;volatile
  4857  002248                     
  4858                           ;adc.c: 33:     ADCON1 = 0b00001100;
  4859  002248  0E0C               	movlw	12
  4860  00224A  6EC1               	movwf	193,c	;volatile
  4861  00224C                     
  4862                           ;adc.c: 34:     ADCON2 = 0b10101010;
  4863  00224C  0EAA               	movlw	170
  4864  00224E  6EC0               	movwf	192,c	;volatile
  4865  002250  0012               	return		;funcret
  4866  002252                     __end_of_adcInit:
  4867                           	callstack 0
  4868                           
  4869 ;; *************** function _pinMode *****************
  4870 ;; Defined at:
  4871 ;;		line 54 in file "io.c"
  4872 ;; Parameters:    Size  Location     Type
  4873 ;;  pin             2    0[COMRAM] int 
  4874 ;;  type            2    2[COMRAM] int 
  4875 ;; Auto vars:     Size  Location     Type
  4876 ;;		None
  4877 ;; Return value:  Size  Location     Type
  4878 ;;                  1    wreg      void 
  4879 ;; Registers used:
  4880 ;;		wreg, status,2, status,0
  4881 ;; Tracked objects:
  4882 ;;		On entry : 0/0
  4883 ;;		On exit  : 0/0
  4884 ;;		Unchanged: 0/0
  4885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4886 ;;      Params:         4       0       0       0       0       0       0
  4887 ;;      Locals:         0       0       0       0       0       0       0
  4888 ;;      Temps:          2       0       0       0       0       0       0
  4889 ;;      Totals:         6       0       0       0       0       0       0
  4890 ;;Total ram usage:        6 bytes
  4891 ;; Hardware stack levels used: 1
  4892 ;; This function calls:
  4893 ;;		Nothing
  4894 ;; This function is called by:
  4895 ;;		_adcInit
  4896 ;;		_kpInit
  4897 ;;		_lcdInit
  4898 ;;		_ssdInit
  4899 ;;		_soInit
  4900 ;; This function uses a non-reentrant model
  4901 ;;
  4902                           
  4903                           	psect	text34
  4904  001272                     __ptext34:
  4905                           	callstack 0
  4906  001272                     _pinMode:
  4907                           	callstack 28
  4908  001272                     
  4909                           ;io.c: 56:     if(pin <8){
  4910  001272  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4911  001274  EF47  F009         	goto	u1730
  4912  001278  5002               	movf	(pinMode@pin+1)^0,w,c
  4913  00127A  E107               	bnz	u1731
  4914  00127C  0E08               	movlw	8
  4915  00127E  5C01               	subwf	pinMode@pin^0,w,c
  4916  001280  B0D8               	btfsc	status,0,c
  4917  001282  EF45  F009         	goto	u1731
  4918  001286  EF47  F009         	goto	u1730
  4919  00128A                     u1731:
  4920  00128A  EF71  F009         	goto	l2009
  4921  00128E                     u1730:
  4922  00128E                     
  4923                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  4924  00128E  5003               	movf	pinMode@type^0,w,c
  4925  001290  1004               	iorwf	(pinMode@type+1)^0,w,c
  4926  001292  B4D8               	btfsc	status,2,c
  4927  001294  EF4E  F009         	goto	u1741
  4928  001298  EF50  F009         	goto	u1740
  4929  00129C                     u1741:
  4930  00129C  EF60  F009         	goto	l2007
  4931  0012A0                     u1740:
  4932  0012A0  C001  F005         	movff	pinMode@pin,??_pinMode
  4933  0012A4  0E01               	movlw	1
  4934  0012A6  6E06               	movwf	(??_pinMode+1)^0,c
  4935  0012A8  2A05               	incf	??_pinMode^0,f,c
  4936  0012AA  EF59  F009         	goto	u1754
  4937  0012AE                     u1755:
  4938  0012AE  90D8               	bcf	status,0,c
  4939  0012B0  3606               	rlcf	(??_pinMode+1)^0,f,c
  4940  0012B2                     u1754:
  4941  0012B2  2E05               	decfsz	??_pinMode^0,f,c
  4942  0012B4  EF57  F009         	goto	u1755
  4943  0012B8  5006               	movf	(??_pinMode+1)^0,w,c
  4944  0012BA  1292               	iorwf	146,f,c	;volatile
  4945  0012BC  EF5F  F00A         	goto	l306
  4946  0012C0                     l2007:
  4947  0012C0  C001  F005         	movff	pinMode@pin,??_pinMode
  4948  0012C4  0E01               	movlw	1
  4949  0012C6  6E06               	movwf	(??_pinMode+1)^0,c
  4950  0012C8  2A05               	incf	??_pinMode^0,f,c
  4951  0012CA  EF69  F009         	goto	u1764
  4952  0012CE                     u1765:
  4953  0012CE  90D8               	bcf	status,0,c
  4954  0012D0  3606               	rlcf	(??_pinMode+1)^0,f,c
  4955  0012D2                     u1764:
  4956  0012D2  2E05               	decfsz	??_pinMode^0,f,c
  4957  0012D4  EF67  F009         	goto	u1765
  4958  0012D8  5006               	movf	(??_pinMode+1)^0,w,c
  4959  0012DA  0AFF               	xorlw	255
  4960  0012DC  1692               	andwf	146,f,c	;volatile
  4961  0012DE  EF5F  F00A         	goto	l306
  4962  0012E2                     l2009:
  4963  0012E2  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4964  0012E4  EF7F  F009         	goto	u1770
  4965  0012E8  5002               	movf	(pinMode@pin+1)^0,w,c
  4966  0012EA  E107               	bnz	u1771
  4967  0012EC  0E10               	movlw	16
  4968  0012EE  5C01               	subwf	pinMode@pin^0,w,c
  4969  0012F0  B0D8               	btfsc	status,0,c
  4970  0012F2  EF7D  F009         	goto	u1771
  4971  0012F6  EF7F  F009         	goto	u1770
  4972  0012FA                     u1771:
  4973  0012FA  EFAD  F009         	goto	l2017
  4974  0012FE                     u1770:
  4975  0012FE                     
  4976                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  4977  0012FE  5003               	movf	pinMode@type^0,w,c
  4978  001300  1004               	iorwf	(pinMode@type+1)^0,w,c
  4979  001302  B4D8               	btfsc	status,2,c
  4980  001304  EF86  F009         	goto	u1781
  4981  001308  EF88  F009         	goto	u1780
  4982  00130C                     u1781:
  4983  00130C  EF9A  F009         	goto	l2015
  4984  001310                     u1780:
  4985  001310  C001  F005         	movff	pinMode@pin,??_pinMode
  4986  001314  0EF8               	movlw	-8
  4987  001316  2605               	addwf	??_pinMode^0,f,c
  4988  001318  0E01               	movlw	1
  4989  00131A  6E06               	movwf	(??_pinMode+1)^0,c
  4990  00131C  2A05               	incf	??_pinMode^0,f,c
  4991  00131E  EF93  F009         	goto	u1794
  4992  001322                     u1795:
  4993  001322  90D8               	bcf	status,0,c
  4994  001324  3606               	rlcf	(??_pinMode+1)^0,f,c
  4995  001326                     u1794:
  4996  001326  2E05               	decfsz	??_pinMode^0,f,c
  4997  001328  EF91  F009         	goto	u1795
  4998  00132C  5006               	movf	(??_pinMode+1)^0,w,c
  4999  00132E  1293               	iorwf	147,f,c	;volatile
  5000  001330  EF5F  F00A         	goto	l306
  5001  001334                     l2015:
  5002  001334  C001  F005         	movff	pinMode@pin,??_pinMode
  5003  001338  0EF8               	movlw	-8
  5004  00133A  2605               	addwf	??_pinMode^0,f,c
  5005  00133C  0E01               	movlw	1
  5006  00133E  6E06               	movwf	(??_pinMode+1)^0,c
  5007  001340  2A05               	incf	??_pinMode^0,f,c
  5008  001342  EFA5  F009         	goto	u1804
  5009  001346                     u1805:
  5010  001346  90D8               	bcf	status,0,c
  5011  001348  3606               	rlcf	(??_pinMode+1)^0,f,c
  5012  00134A                     u1804:
  5013  00134A  2E05               	decfsz	??_pinMode^0,f,c
  5014  00134C  EFA3  F009         	goto	u1805
  5015  001350  5006               	movf	(??_pinMode+1)^0,w,c
  5016  001352  0AFF               	xorlw	255
  5017  001354  1693               	andwf	147,f,c	;volatile
  5018  001356  EF5F  F00A         	goto	l306
  5019  00135A                     l2017:
  5020  00135A  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5021  00135C  EFBB  F009         	goto	u1810
  5022  001360  5002               	movf	(pinMode@pin+1)^0,w,c
  5023  001362  E107               	bnz	u1811
  5024  001364  0E18               	movlw	24
  5025  001366  5C01               	subwf	pinMode@pin^0,w,c
  5026  001368  B0D8               	btfsc	status,0,c
  5027  00136A  EFB9  F009         	goto	u1811
  5028  00136E  EFBB  F009         	goto	u1810
  5029  001372                     u1811:
  5030  001372  EFE9  F009         	goto	l2025
  5031  001376                     u1810:
  5032  001376                     
  5033                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  5034  001376  5003               	movf	pinMode@type^0,w,c
  5035  001378  1004               	iorwf	(pinMode@type+1)^0,w,c
  5036  00137A  B4D8               	btfsc	status,2,c
  5037  00137C  EFC2  F009         	goto	u1821
  5038  001380  EFC4  F009         	goto	u1820
  5039  001384                     u1821:
  5040  001384  EFD6  F009         	goto	l2023
  5041  001388                     u1820:
  5042  001388  C001  F005         	movff	pinMode@pin,??_pinMode
  5043  00138C  0EF0               	movlw	-16
  5044  00138E  2605               	addwf	??_pinMode^0,f,c
  5045  001390  0E01               	movlw	1
  5046  001392  6E06               	movwf	(??_pinMode+1)^0,c
  5047  001394  2A05               	incf	??_pinMode^0,f,c
  5048  001396  EFCF  F009         	goto	u1834
  5049  00139A                     u1835:
  5050  00139A  90D8               	bcf	status,0,c
  5051  00139C  3606               	rlcf	(??_pinMode+1)^0,f,c
  5052  00139E                     u1834:
  5053  00139E  2E05               	decfsz	??_pinMode^0,f,c
  5054  0013A0  EFCD  F009         	goto	u1835
  5055  0013A4  5006               	movf	(??_pinMode+1)^0,w,c
  5056  0013A6  1294               	iorwf	148,f,c	;volatile
  5057  0013A8  EF5F  F00A         	goto	l306
  5058  0013AC                     l2023:
  5059  0013AC  C001  F005         	movff	pinMode@pin,??_pinMode
  5060  0013B0  0EF0               	movlw	-16
  5061  0013B2  2605               	addwf	??_pinMode^0,f,c
  5062  0013B4  0E01               	movlw	1
  5063  0013B6  6E06               	movwf	(??_pinMode+1)^0,c
  5064  0013B8  2A05               	incf	??_pinMode^0,f,c
  5065  0013BA  EFE1  F009         	goto	u1844
  5066  0013BE                     u1845:
  5067  0013BE  90D8               	bcf	status,0,c
  5068  0013C0  3606               	rlcf	(??_pinMode+1)^0,f,c
  5069  0013C2                     u1844:
  5070  0013C2  2E05               	decfsz	??_pinMode^0,f,c
  5071  0013C4  EFDF  F009         	goto	u1845
  5072  0013C8  5006               	movf	(??_pinMode+1)^0,w,c
  5073  0013CA  0AFF               	xorlw	255
  5074  0013CC  1694               	andwf	148,f,c	;volatile
  5075  0013CE  EF5F  F00A         	goto	l306
  5076  0013D2                     l2025:
  5077  0013D2  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5078  0013D4  EFF7  F009         	goto	u1850
  5079  0013D8  5002               	movf	(pinMode@pin+1)^0,w,c
  5080  0013DA  E107               	bnz	u1851
  5081  0013DC  0E20               	movlw	32
  5082  0013DE  5C01               	subwf	pinMode@pin^0,w,c
  5083  0013E0  B0D8               	btfsc	status,0,c
  5084  0013E2  EFF5  F009         	goto	u1851
  5085  0013E6  EFF7  F009         	goto	u1850
  5086  0013EA                     u1851:
  5087  0013EA  EF25  F00A         	goto	l2033
  5088  0013EE                     u1850:
  5089  0013EE                     
  5090                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  5091  0013EE  5003               	movf	pinMode@type^0,w,c
  5092  0013F0  1004               	iorwf	(pinMode@type+1)^0,w,c
  5093  0013F2  B4D8               	btfsc	status,2,c
  5094  0013F4  EFFE  F009         	goto	u1861
  5095  0013F8  EF00  F00A         	goto	u1860
  5096  0013FC                     u1861:
  5097  0013FC  EF12  F00A         	goto	l2031
  5098  001400                     u1860:
  5099  001400  C001  F005         	movff	pinMode@pin,??_pinMode
  5100  001404  0EE8               	movlw	-24
  5101  001406  2605               	addwf	??_pinMode^0,f,c
  5102  001408  0E01               	movlw	1
  5103  00140A  6E06               	movwf	(??_pinMode+1)^0,c
  5104  00140C  2A05               	incf	??_pinMode^0,f,c
  5105  00140E  EF0B  F00A         	goto	u1874
  5106  001412                     u1875:
  5107  001412  90D8               	bcf	status,0,c
  5108  001414  3606               	rlcf	(??_pinMode+1)^0,f,c
  5109  001416                     u1874:
  5110  001416  2E05               	decfsz	??_pinMode^0,f,c
  5111  001418  EF09  F00A         	goto	u1875
  5112  00141C  5006               	movf	(??_pinMode+1)^0,w,c
  5113  00141E  1295               	iorwf	149,f,c	;volatile
  5114  001420  EF5F  F00A         	goto	l306
  5115  001424                     l2031:
  5116  001424  C001  F005         	movff	pinMode@pin,??_pinMode
  5117  001428  0EE8               	movlw	-24
  5118  00142A  2605               	addwf	??_pinMode^0,f,c
  5119  00142C  0E01               	movlw	1
  5120  00142E  6E06               	movwf	(??_pinMode+1)^0,c
  5121  001430  2A05               	incf	??_pinMode^0,f,c
  5122  001432  EF1D  F00A         	goto	u1884
  5123  001436                     u1885:
  5124  001436  90D8               	bcf	status,0,c
  5125  001438  3606               	rlcf	(??_pinMode+1)^0,f,c
  5126  00143A                     u1884:
  5127  00143A  2E05               	decfsz	??_pinMode^0,f,c
  5128  00143C  EF1B  F00A         	goto	u1885
  5129  001440  5006               	movf	(??_pinMode+1)^0,w,c
  5130  001442  0AFF               	xorlw	255
  5131  001444  1695               	andwf	149,f,c	;volatile
  5132  001446  EF5F  F00A         	goto	l306
  5133  00144A                     l2033:
  5134  00144A  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5135  00144C  EF33  F00A         	goto	u1890
  5136  001450  5002               	movf	(pinMode@pin+1)^0,w,c
  5137  001452  E107               	bnz	u1891
  5138  001454  0E28               	movlw	40
  5139  001456  5C01               	subwf	pinMode@pin^0,w,c
  5140  001458  B0D8               	btfsc	status,0,c
  5141  00145A  EF31  F00A         	goto	u1891
  5142  00145E  EF33  F00A         	goto	u1890
  5143  001462                     u1891:
  5144  001462  EF5F  F00A         	goto	l306
  5145  001466                     u1890:
  5146  001466                     
  5147                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  5148  001466  5003               	movf	pinMode@type^0,w,c
  5149  001468  1004               	iorwf	(pinMode@type+1)^0,w,c
  5150  00146A  B4D8               	btfsc	status,2,c
  5151  00146C  EF3A  F00A         	goto	u1901
  5152  001470  EF3C  F00A         	goto	u1900
  5153  001474                     u1901:
  5154  001474  EF4E  F00A         	goto	l2039
  5155  001478                     u1900:
  5156  001478  C001  F005         	movff	pinMode@pin,??_pinMode
  5157  00147C  0EE0               	movlw	-32
  5158  00147E  2605               	addwf	??_pinMode^0,f,c
  5159  001480  0E01               	movlw	1
  5160  001482  6E06               	movwf	(??_pinMode+1)^0,c
  5161  001484  2A05               	incf	??_pinMode^0,f,c
  5162  001486  EF47  F00A         	goto	u1914
  5163  00148A                     u1915:
  5164  00148A  90D8               	bcf	status,0,c
  5165  00148C  3606               	rlcf	(??_pinMode+1)^0,f,c
  5166  00148E                     u1914:
  5167  00148E  2E05               	decfsz	??_pinMode^0,f,c
  5168  001490  EF45  F00A         	goto	u1915
  5169  001494  5006               	movf	(??_pinMode+1)^0,w,c
  5170  001496  1296               	iorwf	150,f,c	;volatile
  5171  001498  EF5F  F00A         	goto	l306
  5172  00149C                     l2039:
  5173  00149C  C001  F005         	movff	pinMode@pin,??_pinMode
  5174  0014A0  0EE0               	movlw	-32
  5175  0014A2  2605               	addwf	??_pinMode^0,f,c
  5176  0014A4  0E01               	movlw	1
  5177  0014A6  6E06               	movwf	(??_pinMode+1)^0,c
  5178  0014A8  2A05               	incf	??_pinMode^0,f,c
  5179  0014AA  EF59  F00A         	goto	u1924
  5180  0014AE                     u1925:
  5181  0014AE  90D8               	bcf	status,0,c
  5182  0014B0  3606               	rlcf	(??_pinMode+1)^0,f,c
  5183  0014B2                     u1924:
  5184  0014B2  2E05               	decfsz	??_pinMode^0,f,c
  5185  0014B4  EF57  F00A         	goto	u1925
  5186  0014B8  5006               	movf	(??_pinMode+1)^0,w,c
  5187  0014BA  0AFF               	xorlw	255
  5188  0014BC  1696               	andwf	150,f,c	;volatile
  5189  0014BE                     l306:
  5190  0014BE  0012               	return		;funcret
  5191  0014C0                     __end_of_pinMode:
  5192                           	callstack 0
  5193                           
  5194 ;; *************** function ___xxtofl *****************
  5195 ;; Defined at:
  5196 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  5197 ;; Parameters:    Size  Location     Type
  5198 ;;  sign            1    wreg     unsigned char 
  5199 ;;  val             4    4[COMRAM] long 
  5200 ;; Auto vars:     Size  Location     Type
  5201 ;;  sign            1   12[COMRAM] unsigned char 
  5202 ;;  arg             4   14[COMRAM] unsigned long 
  5203 ;;  exp             1   13[COMRAM] unsigned char 
  5204 ;; Return value:  Size  Location     Type
  5205 ;;                  4    4[COMRAM] unsigned char 
  5206 ;; Registers used:
  5207 ;;		wreg, status,2, status,0
  5208 ;; Tracked objects:
  5209 ;;		On entry : 0/0
  5210 ;;		On exit  : 0/0
  5211 ;;		Unchanged: 0/0
  5212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5213 ;;      Params:         4       0       0       0       0       0       0
  5214 ;;      Locals:         6       0       0       0       0       0       0
  5215 ;;      Temps:          4       0       0       0       0       0       0
  5216 ;;      Totals:        14       0       0       0       0       0       0
  5217 ;;Total ram usage:       14 bytes
  5218 ;; Hardware stack levels used: 1
  5219 ;; This function calls:
  5220 ;;		Nothing
  5221 ;; This function is called by:
  5222 ;;		_main
  5223 ;; This function uses a non-reentrant model
  5224 ;;
  5225                           
  5226                           	psect	text35
  5227  0014C0                     __ptext35:
  5228                           	callstack 0
  5229  0014C0                     ___xxtofl:
  5230                           	callstack 30
  5231                           
  5232                           ;incstack = 0
  5233                           ;___xxtofl@sign stored from wreg
  5234  0014C0  6E0D               	movwf	___xxtofl@sign^0,c
  5235  0014C2  500D               	movf	___xxtofl@sign^0,w,c
  5236  0014C4  B4D8               	btfsc	status,2,c
  5237  0014C6  EF67  F00A         	goto	u2691
  5238  0014CA  EF69  F00A         	goto	u2690
  5239  0014CE                     u2691:
  5240  0014CE  EF8B  F00A         	goto	l1001
  5241  0014D2                     u2690:
  5242  0014D2  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  5243  0014D4  EF70  F00A         	goto	u2700
  5244  0014D8  EF6E  F00A         	goto	u2701
  5245  0014DC                     u2701:
  5246  0014DC  EF8B  F00A         	goto	l1001
  5247  0014E0                     u2700:
  5248  0014E0  C005  F009         	movff	___xxtofl@val,??___xxtofl
  5249  0014E4  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  5250  0014E8  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  5251  0014EC  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  5252  0014F0  1E09               	comf	??___xxtofl^0,f,c
  5253  0014F2  1E0A               	comf	(??___xxtofl+1)^0,f,c
  5254  0014F4  1E0B               	comf	(??___xxtofl+2)^0,f,c
  5255  0014F6  1E0C               	comf	(??___xxtofl+3)^0,f,c
  5256  0014F8  2A09               	incf	??___xxtofl^0,f,c
  5257  0014FA  0E00               	movlw	0
  5258  0014FC  220A               	addwfc	(??___xxtofl+1)^0,f,c
  5259  0014FE  220B               	addwfc	(??___xxtofl+2)^0,f,c
  5260  001500  220C               	addwfc	(??___xxtofl+3)^0,f,c
  5261  001502  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  5262  001506  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  5263  00150A  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  5264  00150E  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  5265  001512  EF93  F00A         	goto	l2599
  5266  001516                     l1001:
  5267  001516  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  5268  00151A  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5269  00151E  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5270  001522  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5271  001526                     l2599:
  5272  001526  5005               	movf	___xxtofl@val^0,w,c
  5273  001528  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  5274  00152A  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  5275  00152C  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  5276  00152E  A4D8               	btfss	status,2,c
  5277  001530  EF9C  F00A         	goto	u2711
  5278  001534  EF9E  F00A         	goto	u2710
  5279  001538                     u2711:
  5280  001538  EFA8  F00A         	goto	l2605
  5281  00153C                     u2710:
  5282  00153C  0E00               	movlw	0
  5283  00153E  6E05               	movwf	?___xxtofl^0,c
  5284  001540  0E00               	movlw	0
  5285  001542  6E06               	movwf	(?___xxtofl+1)^0,c
  5286  001544  0E00               	movlw	0
  5287  001546  6E07               	movwf	(?___xxtofl+2)^0,c
  5288  001548  0E00               	movlw	0
  5289  00154A  6E08               	movwf	(?___xxtofl+3)^0,c
  5290  00154C  EF39  F00B         	goto	l1004
  5291  001550                     l2605:
  5292  001550  0E96               	movlw	150
  5293  001552  6E0E               	movwf	___xxtofl@exp^0,c
  5294  001554  EFB2  F00A         	goto	l2609
  5295  001558                     l2607:
  5296  001558  2A0E               	incf	___xxtofl@exp^0,f,c
  5297  00155A  90D8               	bcf	status,0,c
  5298  00155C  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  5299  00155E  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  5300  001560  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  5301  001562  320F               	rrcf	___xxtofl@arg^0,f,c
  5302  001564                     l2609:
  5303  001564  0E00               	movlw	0
  5304  001566  140F               	andwf	___xxtofl@arg^0,w,c
  5305  001568  6E09               	movwf	??___xxtofl^0,c
  5306  00156A  0E00               	movlw	0
  5307  00156C  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  5308  00156E  6E0A               	movwf	(??___xxtofl+1)^0,c
  5309  001570  0E00               	movlw	0
  5310  001572  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  5311  001574  6E0B               	movwf	(??___xxtofl+2)^0,c
  5312  001576  0EFE               	movlw	254
  5313  001578  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  5314  00157A  6E0C               	movwf	(??___xxtofl+3)^0,c
  5315  00157C  5009               	movf	??___xxtofl^0,w,c
  5316  00157E  100A               	iorwf	(??___xxtofl+1)^0,w,c
  5317  001580  100B               	iorwf	(??___xxtofl+2)^0,w,c
  5318  001582  100C               	iorwf	(??___xxtofl+3)^0,w,c
  5319  001584  A4D8               	btfss	status,2,c
  5320  001586  EFC7  F00A         	goto	u2721
  5321  00158A  EFC9  F00A         	goto	u2720
  5322  00158E                     u2721:
  5323  00158E  EFAC  F00A         	goto	l2607
  5324  001592                     u2720:
  5325  001592  EFD7  F00A         	goto	l1008
  5326  001596                     l2611:
  5327  001596  2A0E               	incf	___xxtofl@exp^0,f,c
  5328  001598  0E01               	movlw	1
  5329  00159A  260F               	addwf	___xxtofl@arg^0,f,c
  5330  00159C  0E00               	movlw	0
  5331  00159E  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  5332  0015A0  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  5333  0015A2  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  5334  0015A4  90D8               	bcf	status,0,c
  5335  0015A6  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  5336  0015A8  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  5337  0015AA  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  5338  0015AC  320F               	rrcf	___xxtofl@arg^0,f,c
  5339  0015AE                     l1008:
  5340  0015AE  0E00               	movlw	0
  5341  0015B0  140F               	andwf	___xxtofl@arg^0,w,c
  5342  0015B2  6E09               	movwf	??___xxtofl^0,c
  5343  0015B4  0E00               	movlw	0
  5344  0015B6  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  5345  0015B8  6E0A               	movwf	(??___xxtofl+1)^0,c
  5346  0015BA  0E00               	movlw	0
  5347  0015BC  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  5348  0015BE  6E0B               	movwf	(??___xxtofl+2)^0,c
  5349  0015C0  0EFF               	movlw	255
  5350  0015C2  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  5351  0015C4  6E0C               	movwf	(??___xxtofl+3)^0,c
  5352  0015C6  5009               	movf	??___xxtofl^0,w,c
  5353  0015C8  100A               	iorwf	(??___xxtofl+1)^0,w,c
  5354  0015CA  100B               	iorwf	(??___xxtofl+2)^0,w,c
  5355  0015CC  100C               	iorwf	(??___xxtofl+3)^0,w,c
  5356  0015CE  A4D8               	btfss	status,2,c
  5357  0015D0  EFEC  F00A         	goto	u2731
  5358  0015D4  EFEE  F00A         	goto	u2730
  5359  0015D8                     u2731:
  5360  0015D8  EFCB  F00A         	goto	l2611
  5361  0015DC                     u2730:
  5362  0015DC  EFF6  F00A         	goto	l2619
  5363  0015E0                     l2617:
  5364  0015E0  060E               	decf	___xxtofl@exp^0,f,c
  5365  0015E2  90D8               	bcf	status,0,c
  5366  0015E4  360F               	rlcf	___xxtofl@arg^0,f,c
  5367  0015E6  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  5368  0015E8  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  5369  0015EA  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  5370  0015EC                     l2619:
  5371  0015EC  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  5372  0015EE  EFFB  F00A         	goto	u2741
  5373  0015F2  EFFD  F00A         	goto	u2740
  5374  0015F6                     u2741:
  5375  0015F6  EF05  F00B         	goto	l1015
  5376  0015FA                     u2740:
  5377  0015FA  0E02               	movlw	2
  5378  0015FC  600E               	cpfslt	___xxtofl@exp^0,c
  5379  0015FE  EF03  F00B         	goto	u2751
  5380  001602  EF05  F00B         	goto	u2750
  5381  001606                     u2751:
  5382  001606  EFF0  F00A         	goto	l2617
  5383  00160A                     u2750:
  5384  00160A                     l1015:
  5385  00160A  B00E               	btfsc	___xxtofl@exp^0,0,c
  5386  00160C  EF0A  F00B         	goto	u2761
  5387  001610  EF0C  F00B         	goto	u2760
  5388  001614                     u2761:
  5389  001614  EF0D  F00B         	goto	l2625
  5390  001618                     u2760:
  5391  001618  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  5392  00161A                     l2625:
  5393  00161A  90D8               	bcf	status,0,c
  5394  00161C  320E               	rrcf	___xxtofl@exp^0,f,c
  5395  00161E  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  5396  001622  6A0A               	clrf	(??___xxtofl+1)^0,c
  5397  001624  6A0B               	clrf	(??___xxtofl+2)^0,c
  5398  001626  6A0C               	clrf	(??___xxtofl+3)^0,c
  5399  001628  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  5400  00162C  6A0B               	clrf	(??___xxtofl+2)^0,c
  5401  00162E  6A0A               	clrf	(??___xxtofl+1)^0,c
  5402  001630  6A09               	clrf	??___xxtofl^0,c
  5403  001632  5009               	movf	??___xxtofl^0,w,c
  5404  001634  120F               	iorwf	___xxtofl@arg^0,f,c
  5405  001636  500A               	movf	(??___xxtofl+1)^0,w,c
  5406  001638  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  5407  00163A  500B               	movf	(??___xxtofl+2)^0,w,c
  5408  00163C  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  5409  00163E  500C               	movf	(??___xxtofl+3)^0,w,c
  5410  001640  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  5411  001642  500D               	movf	___xxtofl@sign^0,w,c
  5412  001644  B4D8               	btfsc	status,2,c
  5413  001646  EF27  F00B         	goto	u2771
  5414  00164A  EF29  F00B         	goto	u2770
  5415  00164E                     u2771:
  5416  00164E  EF31  F00B         	goto	l2635
  5417  001652                     u2770:
  5418  001652  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  5419  001654  EF30  F00B         	goto	u2780
  5420  001658  EF2E  F00B         	goto	u2781
  5421  00165C                     u2781:
  5422  00165C  EF31  F00B         	goto	l2635
  5423  001660                     u2780:
  5424  001660  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  5425  001662                     l2635:
  5426  001662  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  5427  001666  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  5428  00166A  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  5429  00166E  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  5430  001672                     l1004:
  5431  001672  0012               	return		;funcret
  5432  001674                     __end_of___xxtofl:
  5433                           	callstack 0
  5434                           
  5435 ;; *************** function ___fltol *****************
  5436 ;; Defined at:
  5437 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  5438 ;; Parameters:    Size  Location     Type
  5439 ;;  f1              4   43[COMRAM] unsigned char 
  5440 ;; Auto vars:     Size  Location     Type
  5441 ;;  exp1            1   52[COMRAM] unsigned char 
  5442 ;;  sign1           1   51[COMRAM] unsigned char 
  5443 ;; Return value:  Size  Location     Type
  5444 ;;                  4   43[COMRAM] long 
  5445 ;; Registers used:
  5446 ;;		wreg, status,2, status,0
  5447 ;; Tracked objects:
  5448 ;;		On entry : 0/0
  5449 ;;		On exit  : 0/0
  5450 ;;		Unchanged: 0/0
  5451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5452 ;;      Params:         4       0       0       0       0       0       0
  5453 ;;      Locals:         2       0       0       0       0       0       0
  5454 ;;      Temps:          4       0       0       0       0       0       0
  5455 ;;      Totals:        10       0       0       0       0       0       0
  5456 ;;Total ram usage:       10 bytes
  5457 ;; Hardware stack levels used: 1
  5458 ;; This function calls:
  5459 ;;		Nothing
  5460 ;; This function is called by:
  5461 ;;		_main
  5462 ;; This function uses a non-reentrant model
  5463 ;;
  5464                           
  5465                           	psect	text36
  5466  001B8C                     __ptext36:
  5467                           	callstack 0
  5468  001B8C                     ___fltol:
  5469                           	callstack 30
  5470  001B8C  342E               	rlcf	(___fltol@f1+2)^0,w,c
  5471  001B8E  342F               	rlcf	(___fltol@f1+3)^0,w,c
  5472  001B90  6E35               	movwf	___fltol@exp1^0,c
  5473  001B92  5035               	movf	___fltol@exp1^0,w,c
  5474  001B94  A4D8               	btfss	status,2,c
  5475  001B96  EFCF  F00D         	goto	u2621
  5476  001B9A  EFD1  F00D         	goto	u2620
  5477  001B9E                     u2621:
  5478  001B9E  EFDB  F00D         	goto	l2555
  5479  001BA2                     u2620:
  5480  001BA2                     l2551:
  5481  001BA2  0E00               	movlw	0
  5482  001BA4  6E2C               	movwf	?___fltol^0,c
  5483  001BA6  0E00               	movlw	0
  5484  001BA8  6E2D               	movwf	(?___fltol+1)^0,c
  5485  001BAA  0E00               	movlw	0
  5486  001BAC  6E2E               	movwf	(?___fltol+2)^0,c
  5487  001BAE  0E00               	movlw	0
  5488  001BB0  6E2F               	movwf	(?___fltol+3)^0,c
  5489  001BB2  EF48  F00E         	goto	l643
  5490  001BB6                     l2555:
  5491  001BB6  C02C  F030         	movff	___fltol@f1,??___fltol
  5492  001BBA  C02D  F031         	movff	___fltol@f1+1,??___fltol+1
  5493  001BBE  C02E  F032         	movff	___fltol@f1+2,??___fltol+2
  5494  001BC2  C02F  F033         	movff	___fltol@f1+3,??___fltol+3
  5495  001BC6  0E20               	movlw	32
  5496  001BC8  EFEB  F00D         	goto	u2630
  5497  001BCC                     u2635:
  5498  001BCC  90D8               	bcf	status,0,c
  5499  001BCE  3233               	rrcf	(??___fltol+3)^0,f,c
  5500  001BD0  3232               	rrcf	(??___fltol+2)^0,f,c
  5501  001BD2  3231               	rrcf	(??___fltol+1)^0,f,c
  5502  001BD4  3230               	rrcf	??___fltol^0,f,c
  5503  001BD6                     u2630:
  5504  001BD6  2EE8               	decfsz	wreg,f,c
  5505  001BD8  EFE6  F00D         	goto	u2635
  5506  001BDC  5030               	movf	??___fltol^0,w,c
  5507  001BDE  6E34               	movwf	___fltol@sign1^0,c
  5508  001BE0  8E2E               	bsf	(___fltol@f1+2)^0,7,c
  5509  001BE2  0EFF               	movlw	255
  5510  001BE4  162C               	andwf	___fltol@f1^0,f,c
  5511  001BE6  0EFF               	movlw	255
  5512  001BE8  162D               	andwf	(___fltol@f1+1)^0,f,c
  5513  001BEA  0EFF               	movlw	255
  5514  001BEC  162E               	andwf	(___fltol@f1+2)^0,f,c
  5515  001BEE  0E00               	movlw	0
  5516  001BF0  162F               	andwf	(___fltol@f1+3)^0,f,c
  5517  001BF2  0E96               	movlw	150
  5518  001BF4  5E35               	subwf	___fltol@exp1^0,f,c
  5519  001BF6  BE35               	btfsc	___fltol@exp1^0,7,c
  5520  001BF8  EF02  F00E         	goto	u2640
  5521  001BFC  EF00  F00E         	goto	u2641
  5522  001C00                     u2641:
  5523  001C00  EF18  F00E         	goto	l2575
  5524  001C04                     u2640:
  5525  001C04  5035               	movf	___fltol@exp1^0,w,c
  5526  001C06  0A80               	xorlw	128
  5527  001C08  0F97               	addlw	151
  5528  001C0A  B0D8               	btfsc	status,0,c
  5529  001C0C  EF0A  F00E         	goto	u2651
  5530  001C10  EF0C  F00E         	goto	u2650
  5531  001C14                     u2651:
  5532  001C14  EF0E  F00E         	goto	l2571
  5533  001C18                     u2650:
  5534  001C18  EFD1  F00D         	goto	l2551
  5535  001C1C                     l2571:
  5536  001C1C  90D8               	bcf	status,0,c
  5537  001C1E  322F               	rrcf	(___fltol@f1+3)^0,f,c
  5538  001C20  322E               	rrcf	(___fltol@f1+2)^0,f,c
  5539  001C22  322D               	rrcf	(___fltol@f1+1)^0,f,c
  5540  001C24  322C               	rrcf	___fltol@f1^0,f,c
  5541  001C26  3E35               	incfsz	___fltol@exp1^0,f,c
  5542  001C28  EF0E  F00E         	goto	l2571
  5543  001C2C  EF30  F00E         	goto	l2585
  5544  001C30                     l2575:
  5545  001C30  0E1F               	movlw	31
  5546  001C32  6435               	cpfsgt	___fltol@exp1^0,c
  5547  001C34  EF1E  F00E         	goto	u2661
  5548  001C38  EF20  F00E         	goto	u2660
  5549  001C3C                     u2661:
  5550  001C3C  EF28  F00E         	goto	l2583
  5551  001C40                     u2660:
  5552  001C40  EFD1  F00D         	goto	l2551
  5553  001C44                     l2581:
  5554  001C44  90D8               	bcf	status,0,c
  5555  001C46  362C               	rlcf	___fltol@f1^0,f,c
  5556  001C48  362D               	rlcf	(___fltol@f1+1)^0,f,c
  5557  001C4A  362E               	rlcf	(___fltol@f1+2)^0,f,c
  5558  001C4C  362F               	rlcf	(___fltol@f1+3)^0,f,c
  5559  001C4E  0635               	decf	___fltol@exp1^0,f,c
  5560  001C50                     l2583:
  5561  001C50  5035               	movf	___fltol@exp1^0,w,c
  5562  001C52  A4D8               	btfss	status,2,c
  5563  001C54  EF2E  F00E         	goto	u2671
  5564  001C58  EF30  F00E         	goto	u2670
  5565  001C5C                     u2671:
  5566  001C5C  EF22  F00E         	goto	l2581
  5567  001C60                     u2670:
  5568  001C60                     l2585:
  5569  001C60  5034               	movf	___fltol@sign1^0,w,c
  5570  001C62  B4D8               	btfsc	status,2,c
  5571  001C64  EF36  F00E         	goto	u2681
  5572  001C68  EF38  F00E         	goto	u2680
  5573  001C6C                     u2681:
  5574  001C6C  EF40  F00E         	goto	l2589
  5575  001C70                     u2680:
  5576  001C70  1E2F               	comf	(___fltol@f1+3)^0,f,c
  5577  001C72  1E2E               	comf	(___fltol@f1+2)^0,f,c
  5578  001C74  1E2D               	comf	(___fltol@f1+1)^0,f,c
  5579  001C76  6C2C               	negf	___fltol@f1^0,c
  5580  001C78  0E00               	movlw	0
  5581  001C7A  222D               	addwfc	(___fltol@f1+1)^0,f,c
  5582  001C7C  222E               	addwfc	(___fltol@f1+2)^0,f,c
  5583  001C7E  222F               	addwfc	(___fltol@f1+3)^0,f,c
  5584  001C80                     l2589:
  5585  001C80  C02C  F02C         	movff	___fltol@f1,?___fltol
  5586  001C84  C02D  F02D         	movff	___fltol@f1+1,?___fltol+1
  5587  001C88  C02E  F02E         	movff	___fltol@f1+2,?___fltol+2
  5588  001C8C  C02F  F02F         	movff	___fltol@f1+3,?___fltol+3
  5589  001C90                     l643:
  5590  001C90  0012               	return		;funcret
  5591  001C92                     __end_of___fltol:
  5592                           	callstack 0
  5593                           
  5594 ;; *************** function ___flmul *****************
  5595 ;; Defined at:
  5596 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  5597 ;; Parameters:    Size  Location     Type
  5598 ;;  b               4   18[COMRAM] long 
  5599 ;;  a               4   22[COMRAM] long 
  5600 ;; Auto vars:     Size  Location     Type
  5601 ;;  prod            4   37[COMRAM] struct .
  5602 ;;  grs             4   31[COMRAM] unsigned long 
  5603 ;;  temp            2   41[COMRAM] struct .
  5604 ;;  bexp            1   36[COMRAM] unsigned char 
  5605 ;;  aexp            1   35[COMRAM] unsigned char 
  5606 ;;  sign            1   30[COMRAM] unsigned char 
  5607 ;; Return value:  Size  Location     Type
  5608 ;;                  4   18[COMRAM] unsigned char 
  5609 ;; Registers used:
  5610 ;;		wreg, status,2, status,0, prodl, prodh
  5611 ;; Tracked objects:
  5612 ;;		On entry : 0/0
  5613 ;;		On exit  : 0/0
  5614 ;;		Unchanged: 0/0
  5615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5616 ;;      Params:         8       0       0       0       0       0       0
  5617 ;;      Locals:        13       0       0       0       0       0       0
  5618 ;;      Temps:          4       0       0       0       0       0       0
  5619 ;;      Totals:        25       0       0       0       0       0       0
  5620 ;;Total ram usage:       25 bytes
  5621 ;; Hardware stack levels used: 1
  5622 ;; This function calls:
  5623 ;;		Nothing
  5624 ;; This function is called by:
  5625 ;;		_main
  5626 ;; This function uses a non-reentrant model
  5627 ;;
  5628                           
  5629                           	psect	text37
  5630  000BFA                     __ptext37:
  5631                           	callstack 0
  5632  000BFA                     ___flmul:
  5633                           	callstack 30
  5634  000BFA  5016               	movf	(___flmul@b+3)^0,w,c
  5635  000BFC  0B80               	andlw	128
  5636  000BFE  6E1F               	movwf	___flmul@sign^0,c
  5637  000C00  5016               	movf	(___flmul@b+3)^0,w,c
  5638  000C02  2416               	addwf	(___flmul@b+3)^0,w,c
  5639  000C04  6E25               	movwf	___flmul@bexp^0,c
  5640  000C06  AE15               	btfss	(___flmul@b+2)^0,7,c
  5641  000C08  EF08  F006         	goto	u2431
  5642  000C0C  EF0A  F006         	goto	u2430
  5643  000C10                     u2431:
  5644  000C10  EF0B  F006         	goto	l2425
  5645  000C14                     u2430:
  5646  000C14  8025               	bsf	___flmul@bexp^0,0,c
  5647  000C16                     l2425:
  5648  000C16  5025               	movf	___flmul@bexp^0,w,c
  5649  000C18  B4D8               	btfsc	status,2,c
  5650  000C1A  EF11  F006         	goto	u2441
  5651  000C1E  EF13  F006         	goto	u2440
  5652  000C22                     u2441:
  5653  000C22  EF26  F006         	goto	l2433
  5654  000C26                     u2440:
  5655  000C26  2825               	incf	___flmul@bexp^0,w,c
  5656  000C28  A4D8               	btfss	status,2,c
  5657  000C2A  EF19  F006         	goto	u2451
  5658  000C2E  EF1B  F006         	goto	u2450
  5659  000C32                     u2451:
  5660  000C32  EF23  F006         	goto	l2431
  5661  000C36                     u2450:
  5662  000C36  0E00               	movlw	0
  5663  000C38  6E13               	movwf	___flmul@b^0,c
  5664  000C3A  0E00               	movlw	0
  5665  000C3C  6E14               	movwf	(___flmul@b+1)^0,c
  5666  000C3E  0E00               	movlw	0
  5667  000C40  6E15               	movwf	(___flmul@b+2)^0,c
  5668  000C42  0E00               	movlw	0
  5669  000C44  6E16               	movwf	(___flmul@b+3)^0,c
  5670  000C46                     l2431:
  5671  000C46  8E15               	bsf	(___flmul@b+2)^0,7,c
  5672  000C48  EF2E  F006         	goto	l2435
  5673  000C4C                     l2433:
  5674  000C4C  0E00               	movlw	0
  5675  000C4E  6E13               	movwf	___flmul@b^0,c
  5676  000C50  0E00               	movlw	0
  5677  000C52  6E14               	movwf	(___flmul@b+1)^0,c
  5678  000C54  0E00               	movlw	0
  5679  000C56  6E15               	movwf	(___flmul@b+2)^0,c
  5680  000C58  0E00               	movlw	0
  5681  000C5A  6E16               	movwf	(___flmul@b+3)^0,c
  5682  000C5C                     l2435:
  5683  000C5C  501A               	movf	(___flmul@a+3)^0,w,c
  5684  000C5E  0B80               	andlw	128
  5685  000C60  1A1F               	xorwf	___flmul@sign^0,f,c
  5686  000C62  501A               	movf	(___flmul@a+3)^0,w,c
  5687  000C64  241A               	addwf	(___flmul@a+3)^0,w,c
  5688  000C66  6E24               	movwf	___flmul@aexp^0,c
  5689  000C68  AE19               	btfss	(___flmul@a+2)^0,7,c
  5690  000C6A  EF39  F006         	goto	u2461
  5691  000C6E  EF3B  F006         	goto	u2460
  5692  000C72                     u2461:
  5693  000C72  EF3C  F006         	goto	l2443
  5694  000C76                     u2460:
  5695  000C76  8024               	bsf	___flmul@aexp^0,0,c
  5696  000C78                     l2443:
  5697  000C78  5024               	movf	___flmul@aexp^0,w,c
  5698  000C7A  B4D8               	btfsc	status,2,c
  5699  000C7C  EF42  F006         	goto	u2471
  5700  000C80  EF44  F006         	goto	u2470
  5701  000C84                     u2471:
  5702  000C84  EF57  F006         	goto	l2451
  5703  000C88                     u2470:
  5704  000C88  2824               	incf	___flmul@aexp^0,w,c
  5705  000C8A  A4D8               	btfss	status,2,c
  5706  000C8C  EF4A  F006         	goto	u2481
  5707  000C90  EF4C  F006         	goto	u2480
  5708  000C94                     u2481:
  5709  000C94  EF54  F006         	goto	l2449
  5710  000C98                     u2480:
  5711  000C98  0E00               	movlw	0
  5712  000C9A  6E17               	movwf	___flmul@a^0,c
  5713  000C9C  0E00               	movlw	0
  5714  000C9E  6E18               	movwf	(___flmul@a+1)^0,c
  5715  000CA0  0E00               	movlw	0
  5716  000CA2  6E19               	movwf	(___flmul@a+2)^0,c
  5717  000CA4  0E00               	movlw	0
  5718  000CA6  6E1A               	movwf	(___flmul@a+3)^0,c
  5719  000CA8                     l2449:
  5720  000CA8  8E19               	bsf	(___flmul@a+2)^0,7,c
  5721  000CAA  EF5F  F006         	goto	l960
  5722  000CAE                     l2451:
  5723  000CAE  0E00               	movlw	0
  5724  000CB0  6E17               	movwf	___flmul@a^0,c
  5725  000CB2  0E00               	movlw	0
  5726  000CB4  6E18               	movwf	(___flmul@a+1)^0,c
  5727  000CB6  0E00               	movlw	0
  5728  000CB8  6E19               	movwf	(___flmul@a+2)^0,c
  5729  000CBA  0E00               	movlw	0
  5730  000CBC  6E1A               	movwf	(___flmul@a+3)^0,c
  5731  000CBE                     l960:
  5732  000CBE  5024               	movf	___flmul@aexp^0,w,c
  5733  000CC0  B4D8               	btfsc	status,2,c
  5734  000CC2  EF65  F006         	goto	u2491
  5735  000CC6  EF67  F006         	goto	u2490
  5736  000CCA                     u2491:
  5737  000CCA  EF6F  F006         	goto	l2455
  5738  000CCE                     u2490:
  5739  000CCE  5025               	movf	___flmul@bexp^0,w,c
  5740  000CD0  A4D8               	btfss	status,2,c
  5741  000CD2  EF6D  F006         	goto	u2501
  5742  000CD6  EF6F  F006         	goto	u2500
  5743  000CDA                     u2501:
  5744  000CDA  EF79  F006         	goto	l2459
  5745  000CDE                     u2500:
  5746  000CDE                     l2455:
  5747  000CDE  0E00               	movlw	0
  5748  000CE0  6E13               	movwf	?___flmul^0,c
  5749  000CE2  0E00               	movlw	0
  5750  000CE4  6E14               	movwf	(?___flmul+1)^0,c
  5751  000CE6  0E00               	movlw	0
  5752  000CE8  6E15               	movwf	(?___flmul+2)^0,c
  5753  000CEA  0E00               	movlw	0
  5754  000CEC  6E16               	movwf	(?___flmul+3)^0,c
  5755  000CEE  EF11  F008         	goto	l964
  5756  000CF2                     l2459:
  5757  000CF2  5019               	movf	(___flmul@a+2)^0,w,c
  5758  000CF4  0213               	mulwf	___flmul@b^0,c
  5759  000CF6  CFF3 F02A          	movff	prodl,___flmul@temp
  5760  000CFA  CFF4 F02B          	movff	prodh,___flmul@temp+1
  5761  000CFE  502A               	movf	___flmul@temp^0,w,c
  5762  000D00  6E20               	movwf	___flmul@grs^0,c
  5763  000D02  6A21               	clrf	(___flmul@grs+1)^0,c
  5764  000D04  6A22               	clrf	(___flmul@grs+2)^0,c
  5765  000D06  6A23               	clrf	(___flmul@grs+3)^0,c
  5766  000D08  502B               	movf	(___flmul@temp+1)^0,w,c
  5767  000D0A  6E26               	movwf	___flmul@prod^0,c
  5768  000D0C  6A27               	clrf	(___flmul@prod+1)^0,c
  5769  000D0E  6A28               	clrf	(___flmul@prod+2)^0,c
  5770  000D10  6A29               	clrf	(___flmul@prod+3)^0,c
  5771  000D12  5018               	movf	(___flmul@a+1)^0,w,c
  5772  000D14  0214               	mulwf	(___flmul@b+1)^0,c
  5773  000D16  CFF3 F02A          	movff	prodl,___flmul@temp
  5774  000D1A  CFF4 F02B          	movff	prodh,___flmul@temp+1
  5775  000D1E  502A               	movf	___flmul@temp^0,w,c
  5776  000D20  2620               	addwf	___flmul@grs^0,f,c
  5777  000D22  0E00               	movlw	0
  5778  000D24  2221               	addwfc	(___flmul@grs+1)^0,f,c
  5779  000D26  2222               	addwfc	(___flmul@grs+2)^0,f,c
  5780  000D28  2223               	addwfc	(___flmul@grs+3)^0,f,c
  5781  000D2A  502B               	movf	(___flmul@temp+1)^0,w,c
  5782  000D2C  2626               	addwf	___flmul@prod^0,f,c
  5783  000D2E  0E00               	movlw	0
  5784  000D30  2227               	addwfc	(___flmul@prod+1)^0,f,c
  5785  000D32  2228               	addwfc	(___flmul@prod+2)^0,f,c
  5786  000D34  2229               	addwfc	(___flmul@prod+3)^0,f,c
  5787  000D36  5017               	movf	___flmul@a^0,w,c
  5788  000D38  0215               	mulwf	(___flmul@b+2)^0,c
  5789  000D3A  CFF3 F02A          	movff	prodl,___flmul@temp
  5790  000D3E  CFF4 F02B          	movff	prodh,___flmul@temp+1
  5791  000D42  502A               	movf	___flmul@temp^0,w,c
  5792  000D44  2620               	addwf	___flmul@grs^0,f,c
  5793  000D46  0E00               	movlw	0
  5794  000D48  2221               	addwfc	(___flmul@grs+1)^0,f,c
  5795  000D4A  2222               	addwfc	(___flmul@grs+2)^0,f,c
  5796  000D4C  2223               	addwfc	(___flmul@grs+3)^0,f,c
  5797  000D4E  502B               	movf	(___flmul@temp+1)^0,w,c
  5798  000D50  2626               	addwf	___flmul@prod^0,f,c
  5799  000D52  0E00               	movlw	0
  5800  000D54  2227               	addwfc	(___flmul@prod+1)^0,f,c
  5801  000D56  2228               	addwfc	(___flmul@prod+2)^0,f,c
  5802  000D58  2229               	addwfc	(___flmul@prod+3)^0,f,c
  5803  000D5A  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  5804  000D5E  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  5805  000D62  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  5806  000D66  6A20               	clrf	___flmul@grs^0,c
  5807  000D68  5017               	movf	___flmul@a^0,w,c
  5808  000D6A  0214               	mulwf	(___flmul@b+1)^0,c
  5809  000D6C  CFF3 F02A          	movff	prodl,___flmul@temp
  5810  000D70  CFF4 F02B          	movff	prodh,___flmul@temp+1
  5811  000D74  502A               	movf	___flmul@temp^0,w,c
  5812  000D76  2620               	addwf	___flmul@grs^0,f,c
  5813  000D78  502B               	movf	(___flmul@temp+1)^0,w,c
  5814  000D7A  2221               	addwfc	(___flmul@grs+1)^0,f,c
  5815  000D7C  0E00               	movlw	0
  5816  000D7E  2222               	addwfc	(___flmul@grs+2)^0,f,c
  5817  000D80  0E00               	movlw	0
  5818  000D82  2223               	addwfc	(___flmul@grs+3)^0,f,c
  5819  000D84  5018               	movf	(___flmul@a+1)^0,w,c
  5820  000D86  0213               	mulwf	___flmul@b^0,c
  5821  000D88  CFF3 F02A          	movff	prodl,___flmul@temp
  5822  000D8C  CFF4 F02B          	movff	prodh,___flmul@temp+1
  5823  000D90  502A               	movf	___flmul@temp^0,w,c
  5824  000D92  2620               	addwf	___flmul@grs^0,f,c
  5825  000D94  502B               	movf	(___flmul@temp+1)^0,w,c
  5826  000D96  2221               	addwfc	(___flmul@grs+1)^0,f,c
  5827  000D98  0E00               	movlw	0
  5828  000D9A  2222               	addwfc	(___flmul@grs+2)^0,f,c
  5829  000D9C  0E00               	movlw	0
  5830  000D9E  2223               	addwfc	(___flmul@grs+3)^0,f,c
  5831  000DA0  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  5832  000DA4  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  5833  000DA8  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  5834  000DAC  6A20               	clrf	___flmul@grs^0,c
  5835  000DAE  5017               	movf	___flmul@a^0,w,c
  5836  000DB0  0213               	mulwf	___flmul@b^0,c
  5837  000DB2  CFF3 F02A          	movff	prodl,___flmul@temp
  5838  000DB6  CFF4 F02B          	movff	prodh,___flmul@temp+1
  5839  000DBA  502A               	movf	___flmul@temp^0,w,c
  5840  000DBC  2620               	addwf	___flmul@grs^0,f,c
  5841  000DBE  502B               	movf	(___flmul@temp+1)^0,w,c
  5842  000DC0  2221               	addwfc	(___flmul@grs+1)^0,f,c
  5843  000DC2  0E00               	movlw	0
  5844  000DC4  2222               	addwfc	(___flmul@grs+2)^0,f,c
  5845  000DC6  0E00               	movlw	0
  5846  000DC8  2223               	addwfc	(___flmul@grs+3)^0,f,c
  5847  000DCA  5019               	movf	(___flmul@a+2)^0,w,c
  5848  000DCC  0214               	mulwf	(___flmul@b+1)^0,c
  5849  000DCE  CFF3 F02A          	movff	prodl,___flmul@temp
  5850  000DD2  CFF4 F02B          	movff	prodh,___flmul@temp+1
  5851  000DD6  502A               	movf	___flmul@temp^0,w,c
  5852  000DD8  2626               	addwf	___flmul@prod^0,f,c
  5853  000DDA  502B               	movf	(___flmul@temp+1)^0,w,c
  5854  000DDC  2227               	addwfc	(___flmul@prod+1)^0,f,c
  5855  000DDE  0E00               	movlw	0
  5856  000DE0  2228               	addwfc	(___flmul@prod+2)^0,f,c
  5857  000DE2  0E00               	movlw	0
  5858  000DE4  2229               	addwfc	(___flmul@prod+3)^0,f,c
  5859  000DE6  5018               	movf	(___flmul@a+1)^0,w,c
  5860  000DE8  0215               	mulwf	(___flmul@b+2)^0,c
  5861  000DEA  CFF3 F02A          	movff	prodl,___flmul@temp
  5862  000DEE  CFF4 F02B          	movff	prodh,___flmul@temp+1
  5863  000DF2  502A               	movf	___flmul@temp^0,w,c
  5864  000DF4  2626               	addwf	___flmul@prod^0,f,c
  5865  000DF6  502B               	movf	(___flmul@temp+1)^0,w,c
  5866  000DF8  2227               	addwfc	(___flmul@prod+1)^0,f,c
  5867  000DFA  0E00               	movlw	0
  5868  000DFC  2228               	addwfc	(___flmul@prod+2)^0,f,c
  5869  000DFE  0E00               	movlw	0
  5870  000E00  2229               	addwfc	(___flmul@prod+3)^0,f,c
  5871  000E02  5019               	movf	(___flmul@a+2)^0,w,c
  5872  000E04  0215               	mulwf	(___flmul@b+2)^0,c
  5873  000E06  CFF3 F02A          	movff	prodl,___flmul@temp
  5874  000E0A  CFF4 F02B          	movff	prodh,___flmul@temp+1
  5875  000E0E  502A               	movf	___flmul@temp^0,w,c
  5876  000E10  6E1B               	movwf	??___flmul^0,c
  5877  000E12  502B               	movf	(___flmul@temp+1)^0,w,c
  5878  000E14  6E1C               	movwf	(??___flmul+1)^0,c
  5879  000E16  6A1D               	clrf	(??___flmul+2)^0,c
  5880  000E18  6A1E               	clrf	(??___flmul+3)^0,c
  5881  000E1A  C01D  F01E         	movff	??___flmul+2,??___flmul+3
  5882  000E1E  C01C  F01D         	movff	??___flmul+1,??___flmul+2
  5883  000E22  C01B  F01C         	movff	??___flmul,??___flmul+1
  5884  000E26  6A1B               	clrf	??___flmul^0,c
  5885  000E28  501B               	movf	??___flmul^0,w,c
  5886  000E2A  2626               	addwf	___flmul@prod^0,f,c
  5887  000E2C  501C               	movf	(??___flmul+1)^0,w,c
  5888  000E2E  2227               	addwfc	(___flmul@prod+1)^0,f,c
  5889  000E30  501D               	movf	(??___flmul+2)^0,w,c
  5890  000E32  2228               	addwfc	(___flmul@prod+2)^0,f,c
  5891  000E34  501E               	movf	(??___flmul+3)^0,w,c
  5892  000E36  2229               	addwfc	(___flmul@prod+3)^0,f,c
  5893  000E38  C020  F01B         	movff	___flmul@grs,??___flmul
  5894  000E3C  C021  F01C         	movff	___flmul@grs+1,??___flmul+1
  5895  000E40  C022  F01D         	movff	___flmul@grs+2,??___flmul+2
  5896  000E44  C023  F01E         	movff	___flmul@grs+3,??___flmul+3
  5897  000E48  0E19               	movlw	25
  5898  000E4A  EF2C  F007         	goto	u2510
  5899  000E4E                     u2515:
  5900  000E4E  90D8               	bcf	status,0,c
  5901  000E50  321E               	rrcf	(??___flmul+3)^0,f,c
  5902  000E52  321D               	rrcf	(??___flmul+2)^0,f,c
  5903  000E54  321C               	rrcf	(??___flmul+1)^0,f,c
  5904  000E56  321B               	rrcf	??___flmul^0,f,c
  5905  000E58                     u2510:
  5906  000E58  2EE8               	decfsz	wreg,f,c
  5907  000E5A  EF27  F007         	goto	u2515
  5908  000E5E  501B               	movf	??___flmul^0,w,c
  5909  000E60  2626               	addwf	___flmul@prod^0,f,c
  5910  000E62  501C               	movf	(??___flmul+1)^0,w,c
  5911  000E64  2227               	addwfc	(___flmul@prod+1)^0,f,c
  5912  000E66  501D               	movf	(??___flmul+2)^0,w,c
  5913  000E68  2228               	addwfc	(___flmul@prod+2)^0,f,c
  5914  000E6A  501E               	movf	(??___flmul+3)^0,w,c
  5915  000E6C  2229               	addwfc	(___flmul@prod+3)^0,f,c
  5916  000E6E  C022  F023         	movff	___flmul@grs+2,___flmul@grs+3
  5917  000E72  C021  F022         	movff	___flmul@grs+1,___flmul@grs+2
  5918  000E76  C020  F021         	movff	___flmul@grs,___flmul@grs+1
  5919  000E7A  6A20               	clrf	___flmul@grs^0,c
  5920  000E7C  5024               	movf	___flmul@aexp^0,w,c
  5921  000E7E  C025  F01B         	movff	___flmul@bexp,??___flmul
  5922  000E82  6A1C               	clrf	(??___flmul+1)^0,c
  5923  000E84  261B               	addwf	??___flmul^0,f,c
  5924  000E86  0E00               	movlw	0
  5925  000E88  221C               	addwfc	(??___flmul+1)^0,f,c
  5926  000E8A  0E82               	movlw	130
  5927  000E8C  241B               	addwf	??___flmul^0,w,c
  5928  000E8E  6E2A               	movwf	___flmul@temp^0,c
  5929  000E90  0EFF               	movlw	255
  5930  000E92  201C               	addwfc	(??___flmul+1)^0,w,c
  5931  000E94  6E2B               	movwf	(___flmul@temp+1)^0,c
  5932  000E96  EF62  F007         	goto	l2507
  5933  000E9A                     l2501:
  5934  000E9A  90D8               	bcf	status,0,c
  5935  000E9C  3626               	rlcf	___flmul@prod^0,f,c
  5936  000E9E  3627               	rlcf	(___flmul@prod+1)^0,f,c
  5937  000EA0  3628               	rlcf	(___flmul@prod+2)^0,f,c
  5938  000EA2  3629               	rlcf	(___flmul@prod+3)^0,f,c
  5939  000EA4  AE23               	btfss	(___flmul@grs+3)^0,7,c
  5940  000EA6  EF57  F007         	goto	u2521
  5941  000EAA  EF59  F007         	goto	u2520
  5942  000EAE                     u2521:
  5943  000EAE  EF5A  F007         	goto	l967
  5944  000EB2                     u2520:
  5945  000EB2  8026               	bsf	___flmul@prod^0,0,c
  5946  000EB4                     l967:
  5947  000EB4  90D8               	bcf	status,0,c
  5948  000EB6  3620               	rlcf	___flmul@grs^0,f,c
  5949  000EB8  3621               	rlcf	(___flmul@grs+1)^0,f,c
  5950  000EBA  3622               	rlcf	(___flmul@grs+2)^0,f,c
  5951  000EBC  3623               	rlcf	(___flmul@grs+3)^0,f,c
  5952  000EBE  062A               	decf	___flmul@temp^0,f,c
  5953  000EC0  A0D8               	btfss	status,0,c
  5954  000EC2  062B               	decf	(___flmul@temp+1)^0,f,c
  5955  000EC4                     l2507:
  5956  000EC4  AE28               	btfss	(___flmul@prod+2)^0,7,c
  5957  000EC6  EF67  F007         	goto	u2531
  5958  000ECA  EF69  F007         	goto	u2530
  5959  000ECE                     u2531:
  5960  000ECE  EF4D  F007         	goto	l2501
  5961  000ED2                     u2530:
  5962  000ED2  0E00               	movlw	0
  5963  000ED4  6E24               	movwf	___flmul@aexp^0,c
  5964  000ED6  AE23               	btfss	(___flmul@grs+3)^0,7,c
  5965  000ED8  EF70  F007         	goto	u2541
  5966  000EDC  EF72  F007         	goto	u2540
  5967  000EE0                     u2541:
  5968  000EE0  EF96  F007         	goto	l969
  5969  000EE4                     u2540:
  5970  000EE4  0EFF               	movlw	255
  5971  000EE6  1420               	andwf	___flmul@grs^0,w,c
  5972  000EE8  6E1B               	movwf	??___flmul^0,c
  5973  000EEA  0EFF               	movlw	255
  5974  000EEC  1421               	andwf	(___flmul@grs+1)^0,w,c
  5975  000EEE  6E1C               	movwf	(??___flmul+1)^0,c
  5976  000EF0  0EFF               	movlw	255
  5977  000EF2  1422               	andwf	(___flmul@grs+2)^0,w,c
  5978  000EF4  6E1D               	movwf	(??___flmul+2)^0,c
  5979  000EF6  0E7F               	movlw	127
  5980  000EF8  1423               	andwf	(___flmul@grs+3)^0,w,c
  5981  000EFA  6E1E               	movwf	(??___flmul+3)^0,c
  5982  000EFC  501B               	movf	??___flmul^0,w,c
  5983  000EFE  101C               	iorwf	(??___flmul+1)^0,w,c
  5984  000F00  101D               	iorwf	(??___flmul+2)^0,w,c
  5985  000F02  101E               	iorwf	(??___flmul+3)^0,w,c
  5986  000F04  B4D8               	btfsc	status,2,c
  5987  000F06  EF87  F007         	goto	u2551
  5988  000F0A  EF89  F007         	goto	u2550
  5989  000F0E                     u2551:
  5990  000F0E  EF8D  F007         	goto	l970
  5991  000F12                     u2550:
  5992  000F12                     l2515:
  5993  000F12  0E01               	movlw	1
  5994  000F14  6E24               	movwf	___flmul@aexp^0,c
  5995  000F16  EF96  F007         	goto	l969
  5996  000F1A                     l970:
  5997  000F1A  A026               	btfss	___flmul@prod^0,0,c
  5998  000F1C  EF92  F007         	goto	u2561
  5999  000F20  EF94  F007         	goto	u2560
  6000  000F24                     u2561:
  6001  000F24  EF96  F007         	goto	l969
  6002  000F28                     u2560:
  6003  000F28  EF89  F007         	goto	l2515
  6004  000F2C                     l969:
  6005  000F2C  5024               	movf	___flmul@aexp^0,w,c
  6006  000F2E  B4D8               	btfsc	status,2,c
  6007  000F30  EF9C  F007         	goto	u2571
  6008  000F34  EF9E  F007         	goto	u2570
  6009  000F38                     u2571:
  6010  000F38  EFC2  F007         	goto	l2527
  6011  000F3C                     u2570:
  6012  000F3C  0E01               	movlw	1
  6013  000F3E  2626               	addwf	___flmul@prod^0,f,c
  6014  000F40  0E00               	movlw	0
  6015  000F42  2227               	addwfc	(___flmul@prod+1)^0,f,c
  6016  000F44  2228               	addwfc	(___flmul@prod+2)^0,f,c
  6017  000F46  2229               	addwfc	(___flmul@prod+3)^0,f,c
  6018  000F48  A029               	btfss	(___flmul@prod+3)^0,0,c
  6019  000F4A  EFA9  F007         	goto	u2581
  6020  000F4E  EFAB  F007         	goto	u2580
  6021  000F52                     u2581:
  6022  000F52  EFC2  F007         	goto	l2527
  6023  000F56                     u2580:
  6024  000F56  C026  F01B         	movff	___flmul@prod,??___flmul
  6025  000F5A  C027  F01C         	movff	___flmul@prod+1,??___flmul+1
  6026  000F5E  C028  F01D         	movff	___flmul@prod+2,??___flmul+2
  6027  000F62  C029  F01E         	movff	___flmul@prod+3,??___flmul+3
  6028  000F66  341E               	rlcf	(??___flmul+3)^0,w,c
  6029  000F68  321E               	rrcf	(??___flmul+3)^0,f,c
  6030  000F6A  321D               	rrcf	(??___flmul+2)^0,f,c
  6031  000F6C  321C               	rrcf	(??___flmul+1)^0,f,c
  6032  000F6E  321B               	rrcf	??___flmul^0,f,c
  6033  000F70  C01B  F026         	movff	??___flmul,___flmul@prod
  6034  000F74  C01C  F027         	movff	??___flmul+1,___flmul@prod+1
  6035  000F78  C01D  F028         	movff	??___flmul+2,___flmul@prod+2
  6036  000F7C  C01E  F029         	movff	??___flmul+3,___flmul@prod+3
  6037  000F80  4A2A               	infsnz	___flmul@temp^0,f,c
  6038  000F82  2A2B               	incf	(___flmul@temp+1)^0,f,c
  6039  000F84                     l2527:
  6040  000F84  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
  6041  000F86  EFCD  F007         	goto	u2591
  6042  000F8A  502B               	movf	(___flmul@temp+1)^0,w,c
  6043  000F8C  E108               	bnz	u2590
  6044  000F8E  282A               	incf	___flmul@temp^0,w,c
  6045  000F90  A0D8               	btfss	status,0,c
  6046  000F92  EFCD  F007         	goto	u2591
  6047  000F96  EFCF  F007         	goto	u2590
  6048  000F9A                     u2591:
  6049  000F9A  EFD9  F007         	goto	l2531
  6050  000F9E                     u2590:
  6051  000F9E  0E00               	movlw	0
  6052  000FA0  6E26               	movwf	___flmul@prod^0,c
  6053  000FA2  0E00               	movlw	0
  6054  000FA4  6E27               	movwf	(___flmul@prod+1)^0,c
  6055  000FA6  0E80               	movlw	128
  6056  000FA8  6E28               	movwf	(___flmul@prod+2)^0,c
  6057  000FAA  0E7F               	movlw	127
  6058  000FAC  6E29               	movwf	(___flmul@prod+3)^0,c
  6059  000FAE  EF07  F008         	goto	l2543
  6060  000FB2                     l2531:
  6061  000FB2  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
  6062  000FB4  EFE6  F007         	goto	u2600
  6063  000FB8  502B               	movf	(___flmul@temp+1)^0,w,c
  6064  000FBA  E106               	bnz	u2601
  6065  000FBC  042A               	decf	___flmul@temp^0,w,c
  6066  000FBE  B0D8               	btfsc	status,0,c
  6067  000FC0  EFE4  F007         	goto	u2601
  6068  000FC4  EFE6  F007         	goto	u2600
  6069  000FC8                     u2601:
  6070  000FC8  EFF2  F007         	goto	l977
  6071  000FCC                     u2600:
  6072  000FCC  0E00               	movlw	0
  6073  000FCE  6E26               	movwf	___flmul@prod^0,c
  6074  000FD0  0E00               	movlw	0
  6075  000FD2  6E27               	movwf	(___flmul@prod+1)^0,c
  6076  000FD4  0E00               	movlw	0
  6077  000FD6  6E28               	movwf	(___flmul@prod+2)^0,c
  6078  000FD8  0E00               	movlw	0
  6079  000FDA  6E29               	movwf	(___flmul@prod+3)^0,c
  6080  000FDC  0E00               	movlw	0
  6081  000FDE  6E1F               	movwf	___flmul@sign^0,c
  6082  000FE0  EF07  F008         	goto	l2543
  6083  000FE4                     l977:
  6084  000FE4  C02A  F025         	movff	___flmul@temp,___flmul@bexp
  6085  000FE8  0EFF               	movlw	255
  6086  000FEA  1626               	andwf	___flmul@prod^0,f,c
  6087  000FEC  0EFF               	movlw	255
  6088  000FEE  1627               	andwf	(___flmul@prod+1)^0,f,c
  6089  000FF0  0E7F               	movlw	127
  6090  000FF2  1628               	andwf	(___flmul@prod+2)^0,f,c
  6091  000FF4  0E00               	movlw	0
  6092  000FF6  1629               	andwf	(___flmul@prod+3)^0,f,c
  6093  000FF8  A025               	btfss	___flmul@bexp^0,0,c
  6094  000FFA  EF01  F008         	goto	u2611
  6095  000FFE  EF03  F008         	goto	u2610
  6096  001002                     u2611:
  6097  001002  EF04  F008         	goto	l2541
  6098  001006                     u2610:
  6099  001006  8E28               	bsf	(___flmul@prod+2)^0,7,c
  6100  001008                     l2541:
  6101  001008  90D8               	bcf	status,0,c
  6102  00100A  3025               	rrcf	___flmul@bexp^0,w,c
  6103  00100C  6E29               	movwf	(___flmul@prod+3)^0,c
  6104  00100E                     l2543:
  6105  00100E  501F               	movf	___flmul@sign^0,w,c
  6106  001010  1229               	iorwf	(___flmul@prod+3)^0,f,c
  6107  001012  C026  F013         	movff	___flmul@prod,?___flmul
  6108  001016  C027  F014         	movff	___flmul@prod+1,?___flmul+1
  6109  00101A  C028  F015         	movff	___flmul@prod+2,?___flmul+2
  6110  00101E  C029  F016         	movff	___flmul@prod+3,?___flmul+3
  6111  001022                     l964:
  6112  001022  0012               	return		;funcret
  6113  001024                     __end_of___flmul:
  6114                           	callstack 0
  6115                           
  6116                           	psect	rparam
  6117  0000                     
  6118                           	psect	idloc
  6119                           
  6120                           ;Config register IDLOC0 @ 0x200000
  6121                           ;	unspecified, using default values
  6122  200000                     	org	2097152
  6123  200000  FF                 	db	255
  6124                           
  6125                           ;Config register IDLOC1 @ 0x200001
  6126                           ;	unspecified, using default values
  6127  200001                     	org	2097153
  6128  200001  FF                 	db	255
  6129                           
  6130                           ;Config register IDLOC2 @ 0x200002
  6131                           ;	unspecified, using default values
  6132  200002                     	org	2097154
  6133  200002  FF                 	db	255
  6134                           
  6135                           ;Config register IDLOC3 @ 0x200003
  6136                           ;	unspecified, using default values
  6137  200003                     	org	2097155
  6138  200003  FF                 	db	255
  6139                           
  6140                           ;Config register IDLOC4 @ 0x200004
  6141                           ;	unspecified, using default values
  6142  200004                     	org	2097156
  6143  200004  FF                 	db	255
  6144                           
  6145                           ;Config register IDLOC5 @ 0x200005
  6146                           ;	unspecified, using default values
  6147  200005                     	org	2097157
  6148  200005  FF                 	db	255
  6149                           
  6150                           ;Config register IDLOC6 @ 0x200006
  6151                           ;	unspecified, using default values
  6152  200006                     	org	2097158
  6153  200006  FF                 	db	255
  6154                           
  6155                           ;Config register IDLOC7 @ 0x200007
  6156                           ;	unspecified, using default values
  6157  200007                     	org	2097159
  6158  200007  FF                 	db	255
  6159                           
  6160                           	psect	config
  6161                           
  6162                           ; Padding undefined space
  6163  300000                     	org	3145728
  6164  300000  FF                 	db	255
  6165                           
  6166                           ;Config register CONFIG1H @ 0x300001
  6167                           ;	Oscillator Selection bits
  6168                           ;	OSC = HS, HS oscillator
  6169                           ;	Fail-Safe Clock Monitor Enable bit
  6170                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  6171                           ;	Internal/External Oscillator Switchover bit
  6172                           ;	IESO = OFF, Oscillator Switchover mode disabled
  6173  300001                     	org	3145729
  6174  300001  02                 	db	2
  6175                           
  6176                           ;Config register CONFIG2L @ 0x300002
  6177                           ;	Power-up Timer Enable bit
  6178                           ;	PWRT = OFF, PWRT disabled
  6179                           ;	Brown-out Reset Enable bits
  6180                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  6181                           ;	Brown Out Reset Voltage bits
  6182                           ;	BORV = 0x2E, user specified literal
  6183  300002                     	org	3145730
  6184  300002  71                 	db	369
  6185                           
  6186                           ;Config register CONFIG2H @ 0x300003
  6187                           ;	Watchdog Timer Enable bit
  6188                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  6189                           ;	Watchdog Timer Postscale Select bits
  6190                           ;	WDTPS = 1, 1:1
  6191  300003                     	org	3145731
  6192  300003  00                 	db	0
  6193                           
  6194                           ; Padding undefined space
  6195  300004                     	org	3145732
  6196  300004  FF                 	db	255
  6197                           
  6198                           ;Config register CONFIG3H @ 0x300005
  6199                           ;	CCP2 MUX bit
  6200                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  6201                           ;	PORTB A/D Enable bit
  6202                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  6203                           ;	Low-Power Timer1 Oscillator Enable bit
  6204                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  6205                           ;	MCLR Pin Enable bit
  6206                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  6207  300005                     	org	3145733
  6208  300005  83                 	db	131
  6209                           
  6210                           ;Config register CONFIG4L @ 0x300006
  6211                           ;	Stack Full/Underflow Reset Enable bit
  6212                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  6213                           ;	Single-Supply ICSP Enable bit
  6214                           ;	LVP = OFF, Single-Supply ICSP disabled
  6215                           ;	Extended Instruction Set Enable bit
  6216                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6217                           ;	Background Debugger Enable bit
  6218                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  6219  300006                     	org	3145734
  6220  300006  80                 	db	128
  6221                           
  6222                           ; Padding undefined space
  6223  300007                     	org	3145735
  6224  300007  FF                 	db	255
  6225                           
  6226                           ;Config register CONFIG5L @ 0x300008
  6227                           ;	Code Protection bit
  6228                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  6229                           ;	Code Protection bit
  6230                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  6231                           ;	Code Protection bit
  6232                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  6233                           ;	Code Protection bit
  6234                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  6235  300008                     	org	3145736
  6236  300008  0F                 	db	15
  6237                           
  6238                           ;Config register CONFIG5H @ 0x300009
  6239                           ;	Boot Block Code Protection bit
  6240                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  6241                           ;	Data EEPROM Code Protection bit
  6242                           ;	CPD = OFF, Data EEPROM not code-protected
  6243  300009                     	org	3145737
  6244  300009  C0                 	db	192
  6245                           
  6246                           ;Config register CONFIG6L @ 0x30000A
  6247                           ;	Write Protection bit
  6248                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  6249                           ;	Write Protection bit
  6250                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  6251                           ;	Write Protection bit
  6252                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  6253                           ;	Write Protection bit
  6254                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  6255  30000A                     	org	3145738
  6256  30000A  0F                 	db	15
  6257                           
  6258                           ;Config register CONFIG6H @ 0x30000B
  6259                           ;	Configuration Register Write Protection bit
  6260                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  6261                           ;	Boot Block Write Protection bit
  6262                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  6263                           ;	Data EEPROM Write Protection bit
  6264                           ;	WRTD = OFF, Data EEPROM not write-protected
  6265  30000B                     	org	3145739
  6266  30000B  E0                 	db	224
  6267                           
  6268                           ;Config register CONFIG7L @ 0x30000C
  6269                           ;	Table Read Protection bit
  6270                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  6271                           ;	Table Read Protection bit
  6272                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  6273                           ;	Table Read Protection bit
  6274                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  6275                           ;	Table Read Protection bit
  6276                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  6277  30000C                     	org	3145740
  6278  30000C  0F                 	db	15
  6279                           
  6280                           ;Config register CONFIG7H @ 0x30000D
  6281                           ;	Boot Block Table Read Protection bit
  6282                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  6283  30000D                     	org	3145741
  6284  30000D  40                 	db	64
  6285                           tosu	equ	0xFFF
  6286                           tosh	equ	0xFFE
  6287                           tosl	equ	0xFFD
  6288                           stkptr	equ	0xFFC
  6289                           pclatu	equ	0xFFB
  6290                           pclath	equ	0xFFA
  6291                           pcl	equ	0xFF9
  6292                           tblptru	equ	0xFF8
  6293                           tblptrh	equ	0xFF7
  6294                           tblptrl	equ	0xFF6
  6295                           tablat	equ	0xFF5
  6296                           prodh	equ	0xFF4
  6297                           prodl	equ	0xFF3
  6298                           indf0	equ	0xFEF
  6299                           postinc0	equ	0xFEE
  6300                           postdec0	equ	0xFED
  6301                           preinc0	equ	0xFEC
  6302                           plusw0	equ	0xFEB
  6303                           fsr0h	equ	0xFEA
  6304                           fsr0l	equ	0xFE9
  6305                           wreg	equ	0xFE8
  6306                           indf1	equ	0xFE7
  6307                           postinc1	equ	0xFE6
  6308                           postdec1	equ	0xFE5
  6309                           preinc1	equ	0xFE4
  6310                           plusw1	equ	0xFE3
  6311                           fsr1h	equ	0xFE2
  6312                           fsr1l	equ	0xFE1
  6313                           bsr	equ	0xFE0
  6314                           indf2	equ	0xFDF
  6315                           postinc2	equ	0xFDE
  6316                           postdec2	equ	0xFDD
  6317                           preinc2	equ	0xFDC
  6318                           plusw2	equ	0xFDB
  6319                           fsr2h	equ	0xFDA
  6320                           fsr2l	equ	0xFD9
  6321                           status	equ	0xFD8

Data Sizes:
    Strings     57
    Constant    26
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     67      79
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcdString@msg	PTR unsigned char  size(2) Largest target is 18
		 -> STR_7(CODE[12]), STR_6(CODE[12]), STR_5(CODE[18]), STR_4(CODE[18]), 
		 -> STR_3(CODE[4]), STR_2(CODE[9]), STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->___fltol
    _ssdUpdate->_soWrite
    _ssdInit->_pinMode
    _ssdDigit->___awmod
    _pwmSet->___lwdiv
    _pwmInit->_pwmFrequency
    _pwmFrequency->___aldiv
    _lcdString->_lcdChar
    _lcdPosition->_lcdCommand
    _lcdNumber->___awmod
    _lcdNumber->_lcdChar
    _lcdChar->_pushByte
    ___awmod->___awdiv
    _lcdInit->_lcdCommand
    _pushNibble->_soWrite
    _lcdCommand->_pushByte
    _pushByte->_soWrite
    _pulseEnablePin->_digitalWrite
    _kpInit->_pinMode
    _soInit->_pinMode
    _kpDebounce->_soWrite
    _soWrite->_digitalWrite
    _PulseEnClock->_digitalWrite
    _PulseClockData->_digitalWrite
    _adcInit->_pinMode
    ___xxtofl->_adcRead
    ___fltol->___flmul
    ___flmul->___xxtofl

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0  216258
                                             53 COMRAM    14    14      0
                            ___awdiv
                            ___awmod
                            ___flmul
                            ___fltol
                             ___wmul
                           ___xxtofl
                            _adcInit
                            _adcRead
                       _digitalWrite
                         _kpDebounce
                             _kpInit
                             _kpRead
                         _lcdCommand
                            _lcdInit
                          _lcdNumber
                        _lcdPosition
                          _lcdString
                       _pwmFrequency
                            _pwmInit
                             _pwmSet
                           _ssdDigit
                            _ssdInit
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (1) _ssdUpdate                                            2     2      0   18945
                                              9 COMRAM     2     2      0
                       _digitalWrite
                            _soWrite
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    5136
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (1) _ssdDigit                                             2     1      1     480
                                             14 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _pwmSet                                               5     5      0     868
                                              7 COMRAM     5     5      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _pwmInit                                              0     0      0     626
                       _pwmFrequency
 ---------------------------------------------------------------------------------
 (2) _pwmFrequency                                         2     0      2     626
                                             14 COMRAM     2     0      2
                            ___aldiv
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     452
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _lcdString                                            6     4      2   25137
                                             14 COMRAM     6     4      2
                            _lcdChar
 ---------------------------------------------------------------------------------
 (1) _lcdPosition                                          4     0      4   25333
                                             14 COMRAM     4     0      4
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (1) _lcdNumber                                            4     2      2   26949
                                             14 COMRAM     4     2      2
                            ___awdiv
                            ___awmod
                            _lcdChar
 ---------------------------------------------------------------------------------
 (2) _lcdChar                                              1     1      0   24515
                                             13 COMRAM     1     1      0
                         _delayMicro
                           _pushByte
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    1056
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1060
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0   54572
                         _delayMicro
                          _delayMili
                         _lcdCommand
                            _pinMode
                         _pushNibble
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _pushNibble                                           3     1      2   24221
                                              9 COMRAM     3     1      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           1     1      0   24485
                                             13 COMRAM     1     1      0
                          _delayMili
                           _pushByte
 ---------------------------------------------------------------------------------
 (3) _pushByte                                             4     2      2   24113
                                              9 COMRAM     4     2      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (4) _pulseEnablePin                                       0     0      0    4928
                         _delayMicro
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _delayMicro                                           4     2      2     380
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _delayMili                                            5     3      2     350
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0    5136
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _soInit                                               0     0      0    2568
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                           5     5      0   14881
                                              9 COMRAM     5     5      0
                        _digitalRead
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _soWrite                                              3     1      2   14397
                                              6 COMRAM     3     1      2
                     _PulseClockData
                       _PulseEnClock
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _PulseEnClock                                         0     0      0    4548
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _PulseClockData                                       0     0      0    4548
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _digitalWrite                                         6     2      4    4548
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _digitalRead                                          5     3      2     372
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _adcRead                                              4     2      2     145
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0    2568
                            _pinMode
 ---------------------------------------------------------------------------------
 (3) _pinMode                                              6     2      4    2568
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              4 COMRAM    14    10      4
                            _adcRead (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                             43 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                            _adcRead (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    1744
                                             18 COMRAM    25    17      8
                           ___xxtofl (ARG)
                            _adcRead (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   ___flmul
     ___xxtofl (ARG)
       _adcRead (ARG)
     _adcRead (ARG)
   ___fltol
     ___flmul (ARG)
     ___xxtofl (ARG)
     _adcRead (ARG)
   ___wmul
   ___xxtofl
   _adcInit
     _pinMode
   _adcRead
   _digitalWrite
   _kpDebounce
     _digitalRead
     _soWrite
       _PulseClockData
         _digitalWrite
       _PulseEnClock
         _digitalWrite
       _digitalWrite
   _kpInit
     _pinMode
     _soInit
       _pinMode
   _kpRead
   _lcdCommand
     _delayMili
     _pushByte
       _digitalWrite
       _pulseEnablePin
         _delayMicro
         _digitalWrite
       _soWrite
   _lcdInit
     _delayMicro
     _delayMili
     _lcdCommand
     _pinMode
     _pushNibble
       _digitalWrite
       _pulseEnablePin
       _soWrite
     _soInit
   _lcdNumber
     ___awdiv
     ___awmod
     _lcdChar
       _delayMicro
       _pushByte
   _lcdPosition
     _lcdCommand
   _lcdString
     _lcdChar
   _pwmFrequency
     ___aldiv
     ___wmul (ARG)
   _pwmInit
     _pwmFrequency
   _pwmSet
     ___lwdiv
     ___wmul
   _ssdDigit
     ___awdiv (ARG)
     ___awmod (ARG)
   _ssdInit
     _pinMode
     _soInit
   _ssdUpdate
     _digitalWrite
     _soWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     43      4F       1       62.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4F      15        0.0%
DATA                 0      0      4F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Nov 26 10:08:18 2021

         _pulseEnablePin 2252             lcdString@msg 000F                       l43 0676  
                     l47 0908                       l93 2190                       l95 219E  
                     l96 21BA                       l89 2250             ___awdiv@sign 0006  
                     _v0 004D                       _v1 004C                       _v2 004B  
                     _v3 004A      ___wmul@multiplicand 0003                      l113 24A8  
                    l133 1A66                      l230 2114                      l135 1A7E  
                    l313 22D0                      l161 2432                      l217 20BE  
                    l306 14BE                      l138 233C                      l155 236C  
                    l227 17DE                      l316 2396                      l324 2208  
                    l164 2066                      l172 230A                      l340 240C  
                    l149 24AA                      l181 216A                      l158 2292  
                    l190 1E08                      l319 23C0                      l167 246E  
                    l175 2450                      l343 2488                      l272 1270  
                    l281 1944                      l425 1B8A                      l337 200C  
                    l346 23E6                      l187 1FA0                      l276 1948  
                    l277 1944                      l643 1C90                      l590 1EB8  
                    l577 1D54                      l844 1F2C                      l837 1F24  
                    l960 0CBE                      l970 0F1A                      l964 1022  
                    l967 0EB4                      l977 0FE4                      l969 0F2C  
                    _PR2 000FCB             ___awmod@sign 000E                      wreg 000FE8  
           ___flmul@aexp 0024             ___flmul@bexp 0025             ___flmul@sign 001F  
           ___flmul@temp 002A             ___flmul@prod 0026             ___fltol@exp1 0035  
                   l1001 1516                     l1004 1672                     l1015 160A  
                   l1008 15AE                     l2001 1272                     l2011 12FE  
                   l2003 128E                     l2021 1388                     l2013 1310  
                   l2005 12A0                     l2031 1424                     l2023 13AC  
                   l2015 1334                     l2007 12C0                     l2033 144A  
                   l2025 13D2                     l2017 135A                     l2009 12E2  
                   l2121 18B4                     l2113 186C                     l2105 1824  
                   l2041 233E                     l2201 1E28                     l2035 1466  
                   l2027 13EE                     l2019 1376                     l2131 1918  
                   l2123 18D0                     l2115 1888                     l2107 1840  
                   l2043 234A                     l2211 1E60                     l2203 1E36  
                   l2051 1A84                     l2037 1478                     l2029 1400  
                   l2045 234E                     l2213 1E6E                     l2221 1E98  
                   l2205 1E3E                     l2141 2444                     l2301 213E  
                   l2061 1AC4                     l2053 1A92                     l2039 149C  
                   l2311 194A                     l2135 2294                     l2047 2010  
                   l2151 1C96                     l2223 1EA8                     l2215 1E84  
                   l2207 1E50                     l2303 2142                     l2071 1B02  
                   l2063 1AC8                     l2055 1AA2                     l2231 1EC2  
                   l2143 23C2                     l2129 18FC                     l2321 19EC  
                   l2313 195A                     l2137 2410                     l2161 1CC6  
                   l2153 1CA4                     l2225 1EB0                     l2217 1E8C  
                   l2209 1E58                     l2305 1F2E                     l2081 1B4A  
                   l2073 1B10                     l2065 1AD8                     l2057 1AA6  
                   l2049 1A80                     l2241 1EF8                     l2233 1ED4  
                   l2145 23DE                     l2331 1A54                     l2323 1A0A  
                   l2251 1D56                     l2171 1CF4                     l2163 1CCA  
                   l2155 1CAC                     l2219 1E92                     l2139 2436  
                   l2307 1F3A                     l2083 1B54                     l2075 1B1A  
                   l2067 1AEE                     l2059 1AB4                     l2243 1F0E  
                   l2235 1EDC                     l2411 1FC2                     l2403 17A4  
                   l2501 0E9A                     l2421 0C06                     l2333 1A5A  
                   l2325 1A34                     l2317 197A                     l2093 2454  
                   l2261 1DF6                     l2253 1DB6                     l2181 1D28  
                   l2173 1D02                     l2165 1CD2                     l2157 1CB0  
                   l2149 1C92                     l2309 1F86                     l2077 1B38  
                   l2069 1AF6                     l2085 1B5A                     l2245 1F16  
                   l2237 1EE4                     l2229 1EBA                     l2413 1FDE  
                   l2341 20C0                     l2511 0ED6                     l2503 0EA4  
                   l2431 0C46                     l2423 0C14                     l2271 220A  
                   l2351 21AA                     l2343 216C                     l2335 1A5E  
                   l2319 19C6                     l2263 1DFC                     l2255 1DC2  
                   l2183 1D2E                     l2175 1D08                     l2167 1CE4  
                   l2159 1CBE                     l2087 1B6A                     l2079 1B48  
                   l2095 23E8                     l2247 1F18                     l2239 1EF2  
                   l2415 1FE6                     l2521 0F48                     l2513 0EE4  
                   l2505 0EB2                     l2441 0C76                     l2433 0C4C  
                   l2425 0C16                     l2601 153C                     l2273 2246  
                   l2353 21B2                     l2345 2186                     l2097 17E0  
                   l2337 1A76                     l2329 1A3C                     l2265 1E02  
                   l2257 1DDC                     l2177 1D1E                     l2169 1CEC  
                   l2185 1D34                     l2193 1E0A                     l2089 1B7A  
                   l2281 2472                     l2249 1F1E                     l2417 1FFE  
                   l2409 1FA4                     l2361 207E                     l2531 0FB2  
                   l2523 0F56                     l2515 0F12                     l2507 0EC4  
                   l2451 0CAE                     l2443 0C78                     l2435 0C5C  
                   l2427 0C26                     l2419 0BFA                     l2611 1596  
                   l2275 2248                     l2347 218E                     l2099 17FC  
                   l2267 230C                     l2339 24A0                     l2259 1DEA  
                   l2187 1D44                     l2179 1D26                     l2195 1E0E  
                   l2291 22E4                     l2283 2476                     l2371 20BA  
                   l2363 208E                     l2541 1008                     l2533 0FCC  
                   l2525 0F80                     l2509 0ED2                     l2461 0CFE  
                   l2453 0CCE                     l2445 0C88                     l2437 0C62  
                   l2429 0C36                     l2621 15FA                     l2613 1598  
                   l2605 1550                     l2277 224C                     l2349 21A4  
                   l2269 2338                     l2189 1D4C                     l2197 1E1C  
                   l2293 22EE                     l2285 2478                     l2365 2092  
                   l2357 206A                     l2381 1708                     l2373 1674  
                   l2701 07F6                     l2535 0FE8                     l2543 100E  
                   l2519 0F3C                     l2527 0F84                     l2471 0D4E  
                   l2463 0D08                     l2455 0CDE                     l2447 0C98  
                   l2439 0C68                     l2551 1BA2                     l2631 1652  
                   l2623 1618                     l2615 15A4                     l2607 1558  
                   l2199 1E24                     l2295 2300                     l2287 247C  
                   l2279 2470                     l2367 20A4                     l2359 207A  
                   l2391 1768                     l2383 1720                     l2375 16D4  
                   l2711 083E                     l2703 0802                     l2545 1012  
                   l2537 0FF8                     l2529 0F9E                     l2481 0D90  
                   l2473 0D5A                     l2465 0D1E                     l2449 0CA8  
                   l2561 1BF2                     l2633 1660                     l2625 161A  
                   l2617 15E0                     l2609 1564                     l2289 22D2  
                   l2297 2116                     l2369 20A8                     l2393 1770  
                   l2385 1734                     l2377 16EC                     l2801 0B42  
                   l2721 0888                     l2713 084A                     l2705 0806  
                   l2641 0666                     l2539 1006                     l2491 0DF2  
                   l2483 0DA0                     l2475 0D68                     l2467 0D2A  
                   l2459 0CF2                     l2571 1C1C                     l2563 1BF6  
                   l2555 1BB6                     l2635 1662                     l2627 161E  
                   l2619 15EC                     l2299 2122                     l2395 1788  
                   l2387 173C                     l2379 1700                     l2803 0B62  
                   l2811 0B8A                     l2731 08BE                     l2723 088C  
                   l2715 0852                     l2707 080E                     l2651 068E  
                   l2643 066A                     l2493 0E0E                     l2485 0DBA  
                   l2477 0D74                     l2469 0D42                     l2581 1C44  
                   l2573 1C26                     l2565 1C04                     l2557 1BE0  
                   l2549 1B8C                     l2629 1642                     l1941 1094  
                   l1933 1024                     l2397 179C                     l2389 1754  
                   l2813 0B8E                     l2805 0B6E                     l2733 08D0  
                   l2725 08A2                     l2717 086E                     l2709 0824  
                   l2741 08F4                     l2661 06F2                     l2653 06A2  
                   l2645 066E                     l2495 0E38                     l2487 0DCA  
                   l2479 0D84                     l2583 1C50                     l2575 1C30  
                   l2559 1BE2                     l1951 1128                     l1943 10B0  
                   l1935 1040                     l2823 0BD6                     l2815 0BAE  
                   l2807 0B7C                     l2751 09B2                     l2743 0916  
                   l2735 08D8                     l2727 08AA                     l2719 087A  
                   l2671 073E                     l2663 06FE                     l2655 06B6  
                   l2647 0672                     l2639 0656                     l2497 0E6E  
                   l2489 0DE6                     l2585 1C60                     l2593 14C2  
                   l1961 11BA                     l1953 1142                     l1945 10CA  
                   l1937 1052                     l2833 17B8                     l2817 0BB4  
                   l2809 0B84                     l2761 0A70                     l2753 09E4  
                   l2745 0920                     l2737 08E6                     l2729 08B8  
                   l2681 077E                     l2673 074E                     l2665 070A  
                   l2657 06CA                     l2649 0686                     l2499 0E7C  
                   l2587 1C70                     l2595 14D2                     l1971 1252  
                   l1963 11DA                     l1955 1162                     l1947 10EA  
                   l1939 1072                     l2819 0BBC                     l2771 0AB6  
                   l2763 0A84                     l2755 0A16                     l2747 0930  
                   l2827 0BDE                     l2739 08EE                     l2691 07AA  
                   l2683 078A                     l2675 075A                     l2667 071E  
                   l2659 06DE                     l2589 1C80                     l2597 14E0  
                   l1965 11FC                     l1957 1184                     l1949 110C  
                   l1973 236E                     l2781 0AE4                     l2773 0ABE  
                   l2765 0A98                     l2757 0A48                     l2749 0994  
                   l2693 07AE                     l2685 0798                     l2677 075E  
                   l2669 072A                     l2599 1526                     l1967 1218  
                   l1959 11A0                     l1975 2398                     l1991 21F4  
                   l2791 0B14                     l2775 0AC2                     l2767 0A9C  
                   l2759 0A5C                     l2695 07C2                     l2687 07A2  
                   l2679 0762                     l1969 1232                     l1993 2204  
                   l1985 21D4                     l1977 21BC                     l2793 0B20  
                   l2777 0ACA                     l2769 0AB0                     l2785 0AEC  
                   l2697 07D6                     l2689 07A6                     l1987 21EC  
                   l1979 21D0                     l1995 2252                     l2787 0B00  
                   l2699 07E2                     l1989 21F2                     l1997 2266  
                   l2797 0B3A                     l2789 0B0C                     l1999 2272  
                   STR_1 062D                     STR_2 0647                     STR_3 0650  
                   STR_4 061B                     STR_5 061B                     STR_6 063B  
                   STR_7 063B                     u2000 17FC                     u2001 17F8  
                   u2020 1840                     u2100 1CA4                     u2021 183C  
                   u2101 1CA0                     u2014 180E                     u2110 1CBE  
                   u2015 180A                     u2111 1CBA                     u2040 1888  
                   u2120 1CE4                     u2200 1E84                     u2041 1884  
                   u2121 1CE0                     u2201 1E80                     u2034 1856  
                   u2130 1D02                     u2210 1EA8                     u2035 1852  
                   u2131 1CFE                     u2211 1EA4                     u2060 18D0  
                   u2140 1D1E                     u2220 1ED4                     u2061 18CC  
                   u2141 1D1A                     u2221 1ED0                     u2054 189E  
                   u2310 19C6                     u2150 1D44                     u2230 1EF2  
                   u2055 189A                     u2311 19C2                     u2151 1D40  
                   u2231 1EEE                     u2080 1918                     u1600 1128  
                   u1520 1040                     u2304 1996                     u2160 1E1C  
                   u2240 1F0E                     u2400 208E                     u2081 1914  
                   u1601 1124                     u1521 103C                     u2305 1990  
                   u2161 1E18                     u2241 1F0A                     u2401 208A  
                   u2074 18E6                     u1610 1142                     u1530 1052  
                   u2330 1A0A                     u2170 1E36                     u2250 22E4  
                   u2410 20A4                     u2075 18E2                     u1611 113E  
                   u1531 104E                     u2331 1A06                     u2171 1E32  
                   u2251 22E0                     u2411 20A0                     u2500 0CDE  
                   u2324 19DE                     u2180 1E50                     u2260 2300  
                   u2420 20BA                     u2501 0CDA                     u2325 19D8  
                   u2181 1E4C                     u2261 22FC                     u2421 20B6  
                   u2510 0E58                     u2430 0C14                     u2094 192E  
                   u2350 1A54                     u2190 1E6E                     u2270 216A  
                   u2431 0C10                     u2095 192A                     u2351 1A50  
                   u2191 1E6A                     u2271 2166                     u2600 0FCC  
                   u2520 0EB2                     u2440 0C26                     u1704 1244  
                   u1640 11A0                     u1624 1154                     u1560 10B0  
                   u1544 1064                     u1720 2204                     u2360 1A76  
                   u2344 1A26                     u2280 1FA0                     u2601 0FC8  
                   u2521 0EAE                     u2441 0C22                     u1705 1240  
                   u1641 119C                     u1625 1150                     u1561 10AC  
                   u1545 1060                     u1721 2200                     u2361 1A72  
                   u2345 1A20                     u2281 1F9C                     u2610 1006  
                   u2530 0ED2                     u2450 0C36                     u1810 1376  
                   u1730 128E                     u2370 2186                     u1714 1264  
                   u1650 11BA                     u1634 1174                     u1570 10CA  
                   u1554 1084                     u2290 1976                     u2611 1002  
                   u2531 0ECE                     u2515 0E4E                     u2451 0C32  
                   u1811 1372                     u1731 128A                     u2371 2182  
                   u1715 1260                     u1651 11B6                     u1635 1170  
                   u1571 10C6                     u1555 1080                     u2291 1972  
                   u2540 0EE4                     u2460 0C76                     u2620 1BA2  
                   u2700 14E0                     u1900 1478                     u1820 1388  
                   u1804 134A                     u1740 12A0                     u2380 219E  
                   u2541 0EE0                     u2461 0C72                     u2621 1B9E  
                   u2701 14DC                     u1901 1474                     u1821 1384  
                   u1805 1346                     u1741 129C                     u2381 219A  
                   u2550 0F12                     u2470 0C88                     u2630 1BD6  
                   u2710 153C                     u2390 207A                     u2551 0F0E  
                   u2471 0C84                     u2711 1538                     u2391 2076  
                   u2560 0F28                     u2480 0C98                     u2640 1C04  
                   u2720 1592                     u1680 1218                     u1664 11CC  
                   u1584 10DC                     u2800 077E                     u2561 0F24  
                   u2481 0C94                     u2641 1C00                     u2721 158E  
                   u1681 1214                     u1665 11C8                     u1585 10D8  
                   u2801 077A                     u2570 0F3C                     u2490 0CCE  
                   u2650 1C18                     u2730 15DC                     u1914 148E  
                   u1850 13EE                     u1834 139E                     u1770 12FE  
                   u1754 12B2                     u1690 1232                     u1674 11EC  
                   u1594 10FC                     u1930 236C                     u2810 0798  
                   u2571 0F38                     u2491 0CCA                     u2651 1C14  
                   u2635 1BCC                     u2731 15D8                     u1915 148A  
                   u1851 13EA                     u1835 139A                     u1771 12FA  
                   u1755 12AE                     u1691 122E                     u1675 11E8  
                   u1595 10F8                     u1931 2368                     u2811 0794  
                   u2580 0F56                     u2660 1C40                     u2740 15FA  
                   u1924 14B2                     u1860 1400                     u1844 13C2  
                   u1780 1310                     u1764 12D2                     u1940 1A92  
                   u2900 0908                     u2820 07C2                     u2581 0F52  
                   u2661 1C3C                     u2741 15F6                     u1925 14AE  
                   u1861 13FC                     u1845 13BE                     u1781 130C  
                   u1765 12CE                     u1941 1A8E                     u2901 0904  
                   u2821 07BE                     u2590 0F9E                     u2670 1C60  
                   u2750 160A                     u1950 1AB4                     u2910 0916  
                   u2830 0824                     u2591 0F9A                     u2671 1C5C  
                   u2751 1606                     u1951 1AB0                     u2911 0912  
                   u2831 0820                     u2680 1C70                     u2760 1618  
                   u1960 1AEE                     u2920 0AB0                     u2840 086E  
                   u2681 1C6C                     u2761 1614                     u1961 1AEA  
                   u2921 0AAC                     u2841 086A                     u2770 1652  
                   u2690 14D2                     u1890 1466                     u1874 1416  
                   u1794 1326                     u1970 1B10                     u2930 0AE0  
                   u2850 0888                     u2771 164E                     u2691 14CE  
                   u1891 1462                     u1875 1412                     u1795 1322  
                   u1971 1B0C                     u2931 0ADC                     u2851 0884  
                   u2780 1660                     u1884 143A                     u1980 1B38  
                   u2940 0B00                     u2860 08A2                     u2781 165C  
                   u1885 1436                     u1981 1B34                     u2941 0AFC  
                   u2861 089E                     u1990 1B6A                     u2950 0B36  
                   u2870 08B8                     u2790 073E                     u1991 1B66  
                   u2951 0B32                     u2871 08B4                     u2791 073A  
                   u2960 0B62                     u2880 08D0                     u2961 0B5E  
                   u2881 08CC                     u2970 0B7C                     u2890 08E6  
                   u2971 0B78                     u2891 08E2                     u2980 0BD2  
                   u2981 0BCE                     u2990 0BF2                     u2991 0BEE  
                   _main 0656                     _keys 0048         ??_PulseClockData 0007  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
        pushNibble@value 000C             ___param_bank 000000   __end_of_pulseEnablePin 2294  
         pwmSet@porcento 000A            ___fltol@sign1 0034          __end_of___aldiv 1B8C  
                  ?_main 0001          __end_of_adcInit 2252          __end_of_adcRead 21BC  
        __end_of___awdiv 1D56          __end_of___awmod 1EBA          __end_of___flmul 1024  
        __end_of___fltol 1C92          ___awdiv@divisor 0003                    _T2CON 000FCA  
        __end_of___lwdiv 1F2E          ___awdiv@counter 0005                    _PORTA 000F80  
                  _PORTB 000F81                    _PORTC 000F82                    _PORTD 000F83  
                  _PORTE 000F84          __end_of_charKey 061B                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96          __end_of_lcdChar 2452          __end_of_lcdInit 1E0A  
        __end_of_pinMode 14C0                    _valor 0601                    main@i 0038  
                  main@j 0042                    main@s 003C                    main@v 003E  
        __end_of_soWrite 220A                    tablat 000FF5          __end_of_ssdInit 2116  
        __end_of_pwmInit 248A                    status 000FD8             pushNibble@rs 000A  
   __end_of_digitalWrite 1272          __initialization 248A          ?_pulseEnablePin 0001  
           __end_of_main 0BFA                   ??_main 0036            __activetblptr 000002  
   __size_of_digitalRead 016A                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   _ADRESH 000FC4                   _ADRESL 000FC3  
                 _CCPR2L 000FBB         ___awdiv@dividend 0001     __size_of_lcdPosition 003A  
       __end_of___xxtofl 1674                ??___aldiv 0009                   ___wmul 23C2  
              ??_adcInit 0007                ??_adcRead 0003                ??___awdiv 0005  
              ??___awmod 000D                ??___flmul 001B                ??___fltol 0030  
              ??___lwdiv 0005                   _kpInit 230C                   _kpRead 24A0  
                 clear_0 2490                   _soInit 2294         ___awdiv@quotient 0007  
        ___awmod@divisor 000B                ??_lcdChar 000E                   isa$std 000001  
              ??_lcdInit 000F                   _pwmSet 1FA2          ___awmod@counter 000D  
       __end_of_ssdDigit 20C0                ??_pinMode 0005             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
              ??_soWrite 0009                ??_ssdInit 0007                ??_pwmInit 0011  
       __end_of_pushByte 2068             ___xxtofl@arg 000F             ___xxtofl@exp 000E  
           ___xxtofl@val 0005               __accesstop 0080  __end_of__initialization 2496  
          ___rparam_used 000001            pushByte@value 000D               ___fltol@f1 002C  
            pinMode@type 0003           __pcstackCOMRAM 0001            __end_of_valor 0611  
     __size_of_delayMili 0030       __size_of_lcdNumber 0074       __size_of_lcdString 0056  
  __size_of_digitalWrite 024E               _delayMicro 24AA               _lcdCommand 2452  
                ?___wmul 0001                  ?_kpInit 0001                  ?_kpRead 0001  
                _CCP2CON 000FBA                  ?_soInit 0001               _kpDebounce 194A  
                ?_pwmSet 0001       __size_of_ssdUpdate 016C                ?___xxtofl 0005  
           _digitalWrite 1024        __end_of_delayMili 236E         ??_pulseEnablePin 0007  
                __Hparam 0000        __end_of_lcdNumber 1FA2                  __Lparam 0000  
              ?_ssdDigit 000F        __end_of_lcdString 216C          kpDebounce@tempo 004F  
                ___aldiv 1A80                  _adcInit 220A                  _adcRead 216C  
                ___awdiv 1C92                  ___awmod 1E0A                  ___flmul 0BFA  
                ___fltol 1B8C                ?_pushByte 000A          __size_of___wmul 0026  
                ___lwdiv 1EBA             __psmallconst 0600          __size_of_kpInit 0032  
        __size_of_kpRead 000A                  _charKey 0611              ssdDigit@val 0010  
            ssdDigit@pos 000F                  __pcinit 248A                  _lcdChar 2434  
                __ramtop 0600          __size_of_soInit 003E                  _lcdInit 1D56  
                __ptext0 0656                  __ptext1 1674                  __ptext2 20C0  
                __ptext3 2068                  __ptext4 1FA2                  __ptext5 23C2  
                __ptext6 1EBA                  __ptext7 2470                  __ptext8 23E8  
                __ptext9 1A80          __size_of_pwmSet 006C                  _display 004E  
             ??___xxtofl 0009                  _pinMode 1272         ___awmod@dividend 0009  
       ___aldiv@dividend 0001               delayMili@a 0001               delayMili@i 0004  
                _soWrite 21BC                  _ssdInit 20C0                  _pwmInit 2470  
                main@dis 003A     end_of_initialization 2496            ?_PulseEnClock 0001  
          __Lmediumconst 0000           digitalRead@pin 0001            ?_pwmFrequency 000F  
            ?_delayMicro 0001        __end_of_ssdUpdate 17E0               ??_ssdDigit 0010  
       ___aldiv@quotient 000B              ?_lcdCommand 0001                  postinc0 000FEE  
             ??_pushByte 000C  __size_of_PulseClockData 002A            ??_digitalRead 0003  
            ?_kpDebounce 0001               lcdNumber@i 0011            ___xxtofl@sign 000D  
             _pushNibble 240E               lcdString@i 0013            ??_lcdPosition 0013  
         ??_PulseEnClock 0007              ___flmul@grs 0020           ??_pwmFrequency 0011  
             main@volume 0036           adcRead@ADvalor 0003           __end_of___wmul 23E8  
         __end_of_kpInit 233E           __end_of_kpRead 24AA           __end_of_soInit 22D2  
         __end_of_pwmSet 200E      __size_of_delayMicro 0002      start_initialization 248A  
    __end_of_digitalRead 194A      __size_of_lcdCommand 001E      __size_of_kpDebounce 0136  
    __end_of_lcdPosition 230C           adcRead@channel 0001        kpDebounce@oldRead 0044  
      kpDebounce@newRead 0046                 ??___wmul 0005                 ??_kpInit 0007  
               ??_kpRead 0003                 ??_soInit 0007                 ??_pwmSet 0008  
              ___flmul@a 0017                ___flmul@b 0013              __pbssCOMRAM 0044  
            ?_pushNibble 000A               pinMode@pin 0001        __size_of___xxtofl 01B4  
              _delayMili 233E         ___lwdiv@dividend 0001                 ?___aldiv 0001  
               ?_adcInit 0001                 ?_adcRead 0001                 ?___awdiv 0001  
               ?___awmod 0009                 ?___flmul 0013                 ?___fltol 002C  
      __size_of_ssdDigit 0058           _PulseClockData 2398                _lcdNumber 1F2E  
               ?___lwdiv 0001     __end_of_PulseEnClock 2398                _lcdString 2116  
            _digitalRead 17E0                 ?_lcdChar 0001        __size_of_pushByte 005A  
               ?_lcdInit 0001     __end_of_pwmFrequency 240E              __smallconst 0600  
               ?_pinMode 0001                 ?_soWrite 0007                 ?_ssdInit 0001  
               ?_pwmInit 0001         ___lwdiv@quotient 0005              _lcdPosition 22D2  
       pwmFrequency@freq 000F          ___aldiv@divisor 0005          ___aldiv@counter 0009  
         ___wmul@product 0005             ??_delayMicro 0003               ?_delayMili 0001  
 __end_of_PulseClockData 23C2      __size_of_pushNibble 0026             ??_lcdCommand 000E  
              _ssdUpdate 1674               ?_lcdNumber 000F               ?_lcdString 000F  
           ??_kpDebounce 000A        ___wmul@multiplier 0001          lcdCommand@value 000E  
              main@tecla 0040       __end_of_delayMicro 24AC       __end_of_lcdCommand 2470  
             pushByte@rs 000A             lcdChar@value 000E       __end_of_kpDebounce 1A80  
               __Hrparam 0000                 __Lrparam 0000          lcdPosition@line 000F  
        ?_PulseClockData 0001               ?_ssdUpdate 0001         __size_of___aldiv 010C  
       __size_of_adcInit 0048         __size_of_adcRead 0050         __size_of___awdiv 00C4  
       __size_of___awmod 00B0         __size_of___flmul 042A         __size_of___fltol 0106  
__size_of_pulseEnablePin 0042           lcdNumber@value 000F         __size_of___lwdiv 0074  
       __size_of_lcdChar 001E         __size_of_lcdInit 00B4                 ___xxtofl 14C0  
       __size_of_pinMode 024E          ___lwdiv@divisor 0003          ___lwdiv@counter 0007  
               __ptext10 2116                 __ptext11 22D2                 __ptext20 2252  
               __ptext12 1F2E                 __ptext21 24AA                 __ptext13 2434  
               __ptext30 1024                 __ptext22 233E                 __ptext14 1E0A  
               __ptext31 17E0                 __ptext23 24A0                 __ptext15 1C92  
               __ptext32 216C                 __ptext24 230C                 __ptext16 1D56  
               __ptext33 220A                 __ptext25 2294                 __ptext17 240E  
               __ptext34 1272                 __ptext26 194A                 __ptext18 2452  
               __ptext35 14C0                 __ptext27 21BC                 __ptext19 200E  
               __ptext36 1B8C                 __ptext28 236E                 __ptext37 0BFA  
               __ptext29 2398         __size_of_soWrite 004E         __size_of_ssdInit 0056  
       __size_of_pwmInit 001A            __size_of_main 05A4              ??_delayMili 0003  
  __size_of_PulseEnClock 002A                 _ssdDigit 2068              delayMicro@a 0001  
               isa$xinst 000000             soWrite@value 0007    __size_of_pwmFrequency 0026  
               _pushByte 200E              ??_lcdNumber 0011                pwmSet@val 000B  
            ??_lcdString 0011             ??_pushNibble 000C           lcdPosition@col 0011  
          ?_digitalWrite 0001             _PulseEnClock 236E        digitalWrite@value 0003  
           _pwmFrequency 23E8                 soWrite@i 0009              ??_ssdUpdate 000A  
     __end_of_pushNibble 2434             ?_digitalRead 0001              kpDebounce@i 000D  
         ??_digitalWrite 0005             ___aldiv@sign 000A             ?_lcdPosition 000F  
        digitalWrite@pin 0001  
